---------------------------------------------------------------------------------------------
‚ãô ‚ùç –°—Ç–µ–∫:
---
–°—Ç–µ–∫ (Stack) –≤ JavaScript
–ß—Ç–æ —Ç–∞–∫–æ–µ —Å—Ç–µ–∫?
–°—Ç–µ–∫ (Stack) ‚Äî —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, —Ä–∞–±–æ—Ç–∞—é—â–∞—è –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É LIFO (Last In, First Out ‚Äî –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ—à—ë–ª, –ø–µ—Ä–≤—ã–π –≤—ã—à–µ–ª).
–û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å—Ç–µ–∫–∞
1. push(x) ‚Äì –¥–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –≤ —Å—Ç–µ–∫.
2. pop() ‚Äì —É–¥–∞–ª—è–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–µ—Ä—Ö–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç.
3. peek() ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–µ—Ä—Ö–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è.
4. isEmpty() ‚Äì –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø—É—Å—Ç –ª–∏ —Å—Ç–µ–∫.
5. size() ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
---
üéØ –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–µ–∫–∞ –Ω–∞ –º–∞—Å—Å–∏–≤–µ
```js
class Stack {
  constructor() {
    this.stack = [];
  }

  push(item) {
    this.stack.push(item);
  }

  pop() {
    return this.stack.pop();
  }

  peek() {
    return this.stack[this.stack.length - 1];
  }

  isEmpty() {
    return this.stack.length === 0;
  }

  size() {
    return this.stack.length;
  }
}

const s = new Stack();
s.push(10);
s.push(20);
console.log(s.pop()); // 20
console.log(s.peek()); // 10
console.log(s.isEmpty()); // false
```
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –°—Ç–µ–∫:
---
1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Å–∫–æ–±–æ–∫ (Valid Parentheses)
‚åõ –ó–∞–¥–∞—á–∞: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å `()`, `{}`, `[]` –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π (–ø–∞—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏).
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function isValidParentheses(s) {
  const stack = [];
  const pairs = { ")": "(", "}": "{", "]": "[" };

  for (let char of s) {
    if (["(", "{", "["].includes(char)) {
      stack.push(char);
    } else {
      if (stack.pop() !== pairs[char]) return false;
    }
  }

  return stack.length === 0;
}

console.log(isValidParentheses("(){}[]")); // true
console.log(isValidParentheses("(]")); // false
console.log(isValidParentheses("{[()]}")); // true
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ï—Å–ª–∏ –≤–∏–¥–∏–º –æ—Ç–∫—Ä—ã–≤–∞—é—â—É—é —Å–∫–æ–±–∫—É ‚Äì –∫–ª–∞–¥—ë–º –≤ —Å—Ç–µ–∫.
- –ï—Å–ª–∏ –≤—Å—Ç—Ä–µ—á–∞–µ–º –∑–∞–∫—Ä—ã–≤–∞—é—â—É—é ‚Äì —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –≤–µ—Ä—à–∏–Ω–æ–π —Å—Ç–µ–∫–∞.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –°—Ç–µ–∫:
---
2Ô∏è‚É£ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–µ—Å—è—Ç–∏—á–Ω–æ–≥–æ —á–∏—Å–ª–∞ –≤ –¥–≤–æ–∏—á–Ω–æ–µ
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ –≤ –¥–≤–æ–∏—á–Ω—É—é —Å–∏—Å—Ç–µ–º—É.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function decimalToBinary(n) {
  const stack = [];

  while (n > 0) {
    stack.push(n % 2);
    n = Math.floor(n / 2);
  }

  return stack.reverse().join('');
}

console.log(decimalToBinary(10)); // "1010"
console.log(decimalToBinary(25)); // "11001"
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –û—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ `2` —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å—Ç–µ–∫.
- –ß–∏—Ç–∞–µ–º —Å—Ç–µ–∫ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –°—Ç–µ–∫:
---
3Ô∏è‚É£ –û–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ —Å—Ç–µ–∫–æ–º (Min Stack)
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å—Ç–µ–∫ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π getMin(), –∫–æ—Ç–æ—Ä–∞—è –∑–∞ O(1) –Ω–∞—Ö–æ–¥–∏—Ç –º–∏–Ω–∏–º—É–º.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
class MinStack {
  constructor() {
    this.stack = [];
    this.minStack = [];
  }

  push(x) {
    this.stack.push(x);
    if (this.minStack.length === 0 || x <= this.minStack[this.minStack.length - 1]) {
      this.minStack.push(x);
    }
  }

  pop() {
    if (this.stack.pop() === this.minStack[this.minStack.length - 1]) {
      this.minStack.pop();
    }
  }

  getMin() {
    return this.minStack[this.minStack.length - 1];
  }
}

const ms = new MinStack();
ms.push(3);
ms.push(5);
ms.push(2);
ms.push(1);
console.log(ms.getMin()); // 1
ms.pop();
console.log(ms.getMin()); // 2
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- minStack —Ö—Ä–∞–Ω–∏—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –°—Ç–µ–∫:
---
4Ô∏è‚É£ –û–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ —Å—Ç—Ä–æ–∫–∏ (Reverse String)
‚åõ –ó–∞–¥–∞—á–∞: –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–æ–∫—É —Å –ø–æ–º–æ—â—å—é —Å—Ç–µ–∫–∞.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function reverseString(s) {
  const stack = s.split('');
  let reversed = '';

  while (stack.length) {
    reversed += stack.pop();
  }

  return reversed;
}

console.log(reverseString("hello")); // "olleh"
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ö–ª–∞–¥—ë–º —Å–∏–º–≤–æ–ª—ã –≤ —Å—Ç–µ–∫, –∑–∞—Ç–µ–º –¥–æ—Å—Ç–∞—ë–º –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –°—Ç–µ–∫:
---
5Ô∏è‚É£ –ü–æ—Å—Ç—Ñ–∏–∫—Å–Ω–∞—è –Ω–æ—Ç–∞—Ü–∏—è (Reverse Polish Notation, RPN)
‚åõ –ó–∞–¥–∞—á–∞: –í—ã—á–∏—Å–ª–∏—Ç—å –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –≤ –æ–±—Ä–∞—Ç–Ω–æ–π –ø–æ–ª—å—Å–∫–æ–π –Ω–æ—Ç–∞—Ü–∏–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function evalRPN(tokens) {
  const stack = [];

  for (let token of tokens) {
    if (!isNaN(token)) {
      stack.push(Number(token));
    } else {
      let b = stack.pop();
      let a = stack.pop();
      stack.push(eval(`${a} ${token} ${b}`));
    }
  }

  return stack[0];
}

console.log(evalRPN(["2", "1", "+", "3", "*"])); // 9
console.log(evalRPN(["4", "13", "5", "/", "+"])); // 6
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ï—Å–ª–∏ –≤–∏–¥–∏–º —á–∏—Å–ª–æ ‚Äì –∫–ª–∞–¥—ë–º –≤ —Å—Ç–µ–∫.
- –ï—Å–ª–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä ‚Äì –±–µ—Ä—ë–º –¥–≤–∞ —á–∏—Å–ª–∞ –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –°—Ç–µ–∫:
---
6Ô∏è‚É£ –û—Ç–º–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è (Undo)
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
class UndoStack {
  constructor() {
    this.stack = [];
  }

  execute(action) {
    this.stack.push(action);
    console.log(`–í—ã–ø–æ–ª–Ω–µ–Ω–æ: ${action}`);
  }

  undo() {
    console.log(`–û—Ç–º–µ–Ω–µ–Ω–æ: ${this.stack.pop()}`);
  }
}

const editor = new UndoStack();
editor.execute("–ù–∞–ø–∏—Å–∞—Ç—å –∫–æ–¥");
editor.execute("–î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π");
editor.undo(); // "–û—Ç–º–µ–Ω–µ–Ω–æ: –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
```
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –°—Ç–µ–∫:
---
7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–∞
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function isPalindrome(s) {
  const stack = s.split('');
  return s === stack.reverse().join('');
}

console.log(isPalindrome("racecar")); // true
console.log(isPalindrome("hello")); // false
```
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –°—Ç–µ–∫:
---
8Ô∏è‚É£ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å—Ç–µ–∫–∞
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function sortStack(stack) {
  return stack.sort((a, b) => a - b);
}

console.log(sortStack([3, 1, 4, 2])); // [1, 2, 3, 4]
```
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –°—Ç–µ–∫:
---
9Ô∏è‚É£ –ë–∞–ª–∞–Ω—Å —Å–∫–æ–±–æ–∫ –≤ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏—è—Ö
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
console.log(isValidParentheses("[(2+3) * (5/2)]")); // true
```
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –°—Ç–µ–∫:
---
üîü –ò—Å—Ç–æ—Ä–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ (Back button)
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
class BrowserHistory {
  constructor() {
    this.history = [];
  }

  visit(page) {
    this.history.push(page);
  }

  back() {
    return this.history.pop();
  }
}

const browser = new BrowserHistory();
browser.visit("google.com");
browser.visit("stackoverflow.com");
console.log(browser.back()); // "stackoverflow.com"
```
–°—Ç–µ–∫ ‚Äì –ø–æ–ª–µ–∑–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–∫–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤—ã—Ä–∞–∂–µ–Ω–∏–π, —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–∑–æ–≤–∞–º–∏ —Ñ—É–Ω–∫—Ü–∏–π.
---------------------------------------------------------------------------------------------
