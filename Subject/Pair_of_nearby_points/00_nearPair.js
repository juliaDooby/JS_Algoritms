---------------------------------------------------------------------------------------------   
‚ãô ‚ùç –ó–∞–¥–∞—á–∞ ¬´–ü–∞—Ä–∞ –±–ª–∏–∂–∞–π—à–∏—Ö —Ç–æ—á–µ–∫¬ª:
---
–ó–∞–¥–∞—á–∞ ¬´–ü–∞—Ä–∞ –±–ª–∏–∂–∞–π—à–∏—Ö —Ç–æ—á–µ–∫¬ª ‚Äî —ç—Ç–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞ –Ω–∞ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –¥–≤—É—Ö –±–ª–∏–∂–∞–π—à–∏—Ö —Ç–æ—á–µ–∫ –≤ –¥–≤—É–º–µ—Ä–Ω–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ. –í —ç—Ç–æ–π –∑–∞–¥–∞—á–µ –Ω–∞–º –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø–∞—Ä—É —Ç–æ—á–µ–∫, –∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ—é—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Å–æ–±–æ–π.
0. ‚åõ –ó–∞–¥–∞—á–∞: –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –ø–∞—Ä—ã –±–ª–∏–∂–∞–π—à–∏—Ö —Ç–æ—á–µ–∫
–£—Å–ª–æ–≤–∏–µ:
–î–∞–Ω –º–∞—Å—Å–∏–≤ —Ç–æ—á–µ–∫ –≤ –¥–≤—É–º–µ—Ä–Ω–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ. –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç –ø–∞—Ä—É –±–ª–∏–∂–∞–π—à–∏—Ö —Ç–æ—á–µ–∫.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function distance(p1, p2) {
  return Math.sqrt((p2.x - p1.x) ** 2 + (p2.y - p1.y) ** 2);
}

function closestPair(points) {
  let minDist = Infinity;
  let pair = [];

  for (let i = 0; i < points.length; i++) {
    for (let j = i + 1; j < points.length; j++) {
      const dist = distance(points[i], points[j]);
      if (dist < minDist) {
        minDist = dist;
        pair = [points[i], points[j]];
      }
    }
  }

  return pair;
}

const points = [{x: 1, y: 1}, {x: 2, y: 2}, {x: 3, y: 3}, {x: 5, y: 5}];
console.log(closestPair(points));  // [{x: 1, y: 1}, {x: 2, y: 2}]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
–≠—Ç–æ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–∞—Ä—ã —Ç–æ—á–µ–∫ –∏ –≤—ã—á–∏—Å–ª—è–µ—Ç –∏—Ö —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ. –°—Ä–∞–≤–Ω–∏–≤–∞—è –≤—Å–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è, –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç –ø–∞—Ä—É —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ–º.
---------------------------------------------------------------------------------------------  
