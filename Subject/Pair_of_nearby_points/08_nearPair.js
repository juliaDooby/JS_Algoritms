---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ó–∞–¥–∞—á–∞ ¬´–ü–∞—Ä–∞ –±–ª–∏–∂–∞–π—à–∏—Ö —Ç–æ—á–µ–∫¬ª:
---
8. ‚åõ –ó–∞–¥–∞—á–∞: –ü–∞—Ä–∞ –±–ª–∏–∂–∞–π—à–∏—Ö —Ç–æ—á–µ–∫ –Ω–∞ –ø—Ä—è–º–æ–π
–£—Å–ª–æ–≤–∏–µ:
–î–∞–Ω—ã —Ç–æ—á–∫–∏, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã–µ –Ω–∞ –ø—Ä—è–º–æ–π. –ù–∞–π–¥–∏—Ç–µ –ø–∞—Ä—É –±–ª–∏–∂–∞–π—à–∏—Ö —Ç–æ—á–µ–∫.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function closestPairOnLine(points) {
  points.sort((a, b) => a.x - b.x);  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –æ—Å–∏ X
  let minDist = Infinity;
  let pair = [];

  for (let i = 0; i < points.length - 1; i++) {
    const dist = points[i + 1].x - points[i].x;
    if (dist < minDist) {
      minDist = dist;
      pair = [points[i], points[i + 1]];
    }
  }

  return pair;
}

const points = [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}];
console.log(closestPairOnLine(points));  // [{x: 1, y: 2}, {x: 3, y: 4}]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
–¢–∞–∫ –∫–∞–∫ —Ç–æ—á–∫–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –Ω–∞ –ø—Ä—è–º–æ–π, –º—ã —Å–æ—Ä—Ç–∏—Ä—É–µ–º –∏—Ö –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ x –∏ –ø—Ä–æ—Å—Ç–æ –∏—â–µ–º –ø–∞—Ä—É –±–ª–∏–∂–∞–π—à–∏—Ö —Ç–æ—á–µ–∫.
---------------------------------------------------------------------------------------------  
