--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ó–∞–¥–∞—á–∞ ¬´–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –æ–∫–ª–∞–¥¬ª:
---
4. ‚åõ –ó–∞–¥–∞—á–∞: –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å –æ–∫–ª–∞–¥–æ–º –±–æ–ª—å—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ
–£—Å–ª–æ–≤–∏–µ:
–ù—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, —á—å–∏ –æ–∫–ª–∞–¥—ã –ø—Ä–µ–≤—ã—à–∞—é—Ç —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function findEmployeesAboveAverage(employees) {
  let averageSalary = calculateAverageSalary(employees.map(employee => employee.salary));
  return employees.filter(employee => employee.salary > averageSalary).map(employee => employee.name);
}

let employees = [
  { name: "–ò–≤–∞–Ω", salary: 35000 },
  { name: "–ú–∞—Ä–∏—è", salary: 45000 },
  { name: "–ê–ª–µ–∫—Å–µ–π", salary: 50000 },
  { name: "–ï–ª–µ–Ω–∞", salary: 60000 },
];

console.log(`–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å –æ–∫–ª–∞–¥–æ–º –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ: ${findEmployeesAboveAverage(employees)}`);  // [ '–ê–ª–µ–∫—Å–µ–π', '–ï–ª–µ–Ω–∞' ]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
–°–Ω–∞—á–∞–ª–∞ –Ω–∞—Ö–æ–¥–∏–º —Å—Ä–µ–¥–Ω—é—é –∑–∞—Ä–ø–ª–∞—Ç—É, –∑–∞—Ç–µ–º —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–π, –∏ –≤ –∫–æ–Ω—Ü–µ –≤—ã–≤–æ–¥–∏–º –∏—Ö –∏–º–µ–Ω–∞.
--------------------------------------------------------------------------------------------- 
