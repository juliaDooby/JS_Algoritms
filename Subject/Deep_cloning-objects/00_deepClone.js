---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: !!!–ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≥–ª—É–±–æ–∫–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ —Å –¥–æ–ø —É—Å–ª–æ–≤–∏–µ–º - –≤–Ω—É—Ç—Ä–∏ –µ—Å—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –∏ –∏–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏, —Ç.–µ. –æ–±—ä–µ–∫—Ç - –Ω–µ –¥–µ—Ä–µ–≤–æ:
---
–ì–ª—É–±–æ–∫–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Å —É—á–µ—Ç–æ–º —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫ ‚Äî —ç—Ç–æ —Å–ª–æ–∂–Ω–∞—è –∑–∞–¥–∞—á–∞, –∫–æ—Ç–æ—Ä–∞—è —Ç—Ä–µ–±—É–µ—Ç —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–∂–µ –ø–æ—Å–µ—â—ë–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤. –î–ª—è –µ—ë —Ä–µ—à–µ–Ω–∏—è –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Map –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –∏ –∏–∑–±–µ–≥–∞–Ω–∏—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π —Ä–µ–∫—É—Ä—Å–∏–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function deepClone(obj, map = new Map()) {
  // –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º –∏–ª–∏ –º–∞—Å—Å–∏–≤–æ–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
  if (obj === null || typeof obj !== "object") {
    return obj;
  }

  // –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç —É–∂–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω (—Ü–∏–∫–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞), –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ –∫–æ–ø–∏—é –∏–∑ Map
  if (map.has(obj)) {
    return map.get(obj);
  }

  // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ –º–∞—Å—Å–∏–≤–∞
  const clone = Array.isArray(obj) ? [] : {};

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—ä–µ–∫—Ç –≤ Map, —á—Ç–æ–±—ã —É—á–µ—Å—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏
  map.set(obj, clone);

  // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∫–æ–ø–∏—Ä—É–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞
  for (const key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      clone[key] = deepClone(obj[key], map);
    }
  }

  return clone;
}
// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const obj = {
  a: 1,
  b: {
    c: 2,
    d: 3,
  },
};
obj.b.e = obj; // –¶–∏–∫–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞

const copiedObj = deepClone(obj);
console.log(copiedObj);
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞:
   - –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º –∏–ª–∏ –º–∞—Å—Å–∏–≤–æ–º (`typeof obj !== "object"`), –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–∏–º–∏—Ç–∏–≤—ã –∫–æ–ø–∏—Ä—É—é—Ç—Å—è –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é.
2. –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫:
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `Map`, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã.
   - –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ `Map`, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω–∞—è –∫–æ–ø–∏—è:
     ```javascript
     if (map.has(obj)) {
       return map.get(obj);
     }
     ```
3. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤:
   - –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ö–æ–¥–∏–º –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ —Å –ø–æ–º–æ—â—å—é `for...in` –∏ —Å–æ–∑–¥–∞—ë–º –∏—Ö –∫–æ–ø–∏–∏.
4. –†–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏:
   - –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç ‚Äî –º–∞—Å—Å–∏–≤, —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤:
     ```javascript
     const clone = Array.isArray(obj) ? [] : {};
     ```
5. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–ª–æ–∂–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤:
   - –ö–æ–ø–∏—Ä—É—é—Ç—Å—è —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –º–∞—Å—Å–∏–≤–æ–≤ –ª—é–±–æ–≥–æ —É—Ä–æ–≤–Ω—è –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏, –≤–∫–ª—é—á–∞—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏.
---
–¢–µ—Å—Ç—ã:
–ü—Ä–∏–º–µ—Ä —Å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–º–∏ —Å—Å—ã–ª–∫–∞–º–∏:
```javascript
const obj = { a: 1 };
obj.b = obj; // –¶–∏–∫–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞

const cloned = deepClone(obj);
console.log(cloned); // { a: 1, b: [Circular] }
console.log(cloned.b === cloned); // true
```
–ü—Ä–∏–º–µ—Ä —Å –º–∞—Å—Å–∏–≤–æ–º:
```javascript
const arr = [1, 2, 3];
arr.push(arr); // –¶–∏–∫–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞

const clonedArr = deepClone(arr);
console.log(clonedArr); // [1, 2, 3, [Circular]]
console.log(clonedArr[3] === clonedArr); // true
```
–£–ª—É—á—à–µ–Ω–∏–µ: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ç–∞–∫–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–∞–∫ `Date`, `Set`, `Map`, –º–æ–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é:
```javascript
function deepClone(obj, map = new Map()) {
  if (obj === null || typeof obj !== "object") {
    return obj;
  }

  if (map.has(obj)) {
    return map.get(obj);
  }

  // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
  if (obj instanceof Date) {
    return new Date(obj);
  }

  if (obj instanceof Map) {
    const clonedMap = new Map();
    map.set(obj, clonedMap);
    for (const [key, value] of obj.entries()) {
      clonedMap.set(deepClone(key, map), deepClone(value, map));
    }
    return clonedMap;
  }

  if (obj instanceof Set) {
    const clonedSet = new Set();
    map.set(obj, clonedSet);
    for (const value of obj.values()) {
      clonedSet.add(deepClone(value, map));
    }
    return clonedSet;
  }

  const clone = Array.isArray(obj) ? [] : {};
  map.set(obj, clone);

  for (const key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      clone[key] = deepClone(obj[key], map);
    }
  }

  return clone;
}
```
---
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å `Map` –∏ `Set`
```javascript
const complexObj = {
  date: new Date(),
  map: new Map([[1, "one"]]),
  set: new Set([1, 2, 3]),
};
complexObj.self = complexObj; // –¶–∏–∫–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞

const clonedComplexObj = deepClone(complexObj);
console.log(clonedComplexObj);
console.log(clonedComplexObj.map.get(1)); // "one"
console.log(clonedComplexObj.set.has(2)); // true
console.log(clonedComplexObj.self === clonedComplexObj); // true
```
–ò—Ç–æ–≥
- –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:
  - –ì–ª—É–±–æ–∫–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –º–∞—Å—Å–∏–≤–æ–≤.
  - –¶–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏.
  - –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã: `Date`, `Set`, `Map`.
- –†–µ—à–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª—é–±—ã–º–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, `RegExp`, —ç—Ç–æ –ª–µ–≥–∫–æ —Å–¥–µ–ª–∞—Ç—å.
---------------------------------------------------------------------------------------------  
