Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –ò–Ω–¥–µ–∫—Å—ã –±–¥ –Ω–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–∞—Ö:
---
–ò–Ω–¥–µ–∫—Å—ã –≤ –±–∞–∑–∞—Ö –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö. –ò–Ω–¥–µ–∫—Å—ã –ø–æ–º–æ–≥–∞—é—Ç —É—Å–∫–æ—Ä–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤, –Ω–µ —Å–∫–∞–Ω–∏—Ä—É—è –≤—Å—é —Ç–∞–±–ª–∏—Ü—É, –∞ —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ –±–∏–Ω–∞—Ä–Ω—ã–µ –¥–µ—Ä–µ–≤—å—è –∏–ª–∏ —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—ã.
–í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞ JavaScript, –º–æ–∂–Ω–æ –∏–º–∏—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö, —Å–æ–∑–¥–∞–≤–∞—è –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –¥–∞–Ω–Ω—ã–º, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Ö—ç—à-—Ç–∞–±–ª–∏—Ü.
1. –ò–Ω–¥–µ–∫—Å—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –ø–æ–∏—Å–∫–∞ (BST)
–ë–∏–Ω–∞—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ –ø–æ–∏—Å–∫–∞ ‚Äî —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, –≥–¥–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É–∑–ª–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —É—Å–ª–æ–≤–∏–µ, —á—Ç–æ –ª–µ–≤—ã–π –¥–æ—á–µ—Ä–Ω–∏–π —É–∑–µ–ª –∏–º–µ–µ—Ç –º–µ–Ω—å—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –∞ –ø—Ä–∞–≤—ã–π ‚Äî –±–æ–ª—å—à–µ–µ.
üéØ –†–µ—à–µ–Ω–∏–µ: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –ø–æ–∏—Å–∫–∞
```javascript
class TreeNode {
  constructor(key, value) {
    this.key = key;
    this.value = value;
    this.left = null;
    this.right = null;
  }
}

class BinarySearchTree {
  constructor() {
    this.root = null;
  }

  insert(key, value) {
    const newNode = new TreeNode(key, value);
    if (!this.root) {
      this.root = newNode;
      return;
    }

    let current = this.root;
    while (true) {
      if (key < current.key) {
        if (!current.left) {
          current.left = newNode;
          return;
        }
        current = current.left;
      } else if (key > current.key) {
        if (!current.right) {
          current.right = newNode;
          return;
        }
        current = current.right;
      } else {
        current.value = value; // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–ª—é—á —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        return;
      }
    }
  }

  search(key) {
    let current = this.root;
    while (current) {
      if (key === current.key) return current.value;
      if (key < current.key) current = current.left;
      else current = current.right;
    }
    return null; // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
  }

  delete(key) {
    this.root = this._deleteRecursively(this.root, key);
  }

  _deleteRecursively(node, key) {
    if (!node) return node;

    if (key < node.key) {
      node.left = this._deleteRecursively(node.left, key);
    } else if (key > node.key) {
      node.right = this._deleteRecursively(node.right, key);
    } else {
      // –ï—Å–ª–∏ –∫–ª—é—á –Ω–∞–π–¥–µ–Ω
      if (!node.left) return node.right;
      if (!node.right) return node.left;

      node.key = this._findMin(node.right).key; // –ù–∞—Ö–æ–¥–∏–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –ø—Ä–∞–≤–æ–º –ø–æ–¥–¥–µ—Ä–µ–≤–µ
      node.right = this._deleteRecursively(node.right, node.key);
    }
    return node;
  }

  _findMin(node) {
    while (node.left) node = node.left;
    return node;
  }
}

const bst = new BinarySearchTree();
bst.insert(50, "value 50");
bst.insert(30, "value 30");
bst.insert(70, "value 70");
bst.insert(20, "value 20");
bst.insert(40, "value 40");

console.log(bst.search(30)); // "value 30"
bst.delete(30);
console.log(bst.search(30)); // null
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã —Å–æ–∑–¥–∞–µ–º –±–∏–Ω–∞—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ –ø–æ–∏—Å–∫–∞ (BST), –≥–¥–µ:
  - –ö–∞–∂–¥—ã–π —É–∑–µ–ª –∏–º–µ–µ—Ç –∫–ª—é—á –∏ –∑–Ω–∞—á–µ–Ω–∏–µ.
  - –î–ª—è –ø–æ–∏—Å–∫–∞ –∏ –≤—Å—Ç–∞–≤–∫–∏ –º—ã —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–ª—é—á–∏ –∏ –Ω–∞—Ö–æ–¥–∏–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ —É–∑–ª–∞.
  - –ú–µ—Ç–æ–¥ `delete` –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–¥–∞–ª—è—Ç—å —É–∑–ª—ã —Å —É—á—ë—Ç–æ–º —Ç—Ä–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤: –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥–µ—Ç–µ–π, –æ–¥–∏–Ω —Ä–µ–±–µ–Ω–æ–∫ –∏ –¥–≤–∞ —Ä–µ–±–µ–Ω–∫–∞.
---
2. –ò–Ω–¥–µ–∫—Å—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ö—ç—à-—Ç–∞–±–ª–∏—Ü
–•—ç—à-—Ç–∞–±–ª–∏—Ü–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ö—ç—à-—Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞ –≤ –º–∞—Å—Å–∏–≤–µ, –≥–¥–µ –∫–∞–∂–¥—ã–π –∫–ª—é—á –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å —Å–≤–æ—ë –∑–Ω–∞—á–µ–Ω–∏–µ. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–µ–ª–∞—Ç—å –ø–æ–∏—Å–∫, –≤—Å—Ç–∞–≤–∫—É –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞ O(1) –≤ —Å—Ä–µ–¥–Ω–µ–º —Å–ª—É—á–∞–µ.
üéØ –†–µ—à–µ–Ω–∏–µ: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—ã
```javascript
class HashTable {
  constructor(size = 100) {
    this.table = new Array(size);
  }

  hash(key) {
    let hash = 0;
    for (let i = 0; i < key.length; i++) {
      hash = (hash + key.charCodeAt(i)) % this.table.length;
    }
    return hash;
  }

  insert(key, value) {
    const index = this.hash(key);
    if (!this.table[index]) {
      this.table[index] = [];
    }
    this.table[index].push([key, value]);
  }

  search(key) {
    const index = this.hash(key);
    const bucket = this.table[index];
    if (!bucket) return null;

    for (const [storedKey, value] of bucket) {
      if (storedKey === key) return value;
    }
    return null;
  }

  delete(key) {
    const index = this.hash(key);
    const bucket = this.table[index];
    if (!bucket) return false;

    for (let i = 0; i < bucket.length; i++) {
      if (bucket[i][0] === key) {
        bucket.splice(i, 1);
        return true;
      }
    }
    return false;
  }
}

const hashTable = new HashTable();
hashTable.insert("name", "Alice");
hashTable.insert("age", 25);
hashTable.insert("country", "USA");

console.log(hashTable.search("age")); // 25
console.log(hashTable.search("country")); // "USA"
hashTable.delete("age");
console.log(hashTable.search("age")); // null
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –í —Ö—ç—à-—Ç–∞–±–ª–∏—Ü–µ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∞ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ö—ç—à-—Ñ—É–Ω–∫—Ü–∏–∏.
- –•—ç—à-—Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω–¥–µ–∫—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç—Ä–æ–∫–∏ –∫–ª—é—á–∞.
- –í —Å–ª—É—á–∞–µ –∫–æ–ª–ª–∏–∑–∏–π (–∫–æ–≥–¥–∞ –¥–≤–∞ –∫–ª—é—á–∞ —Ö—ç—à–∏—Ä—É—é—Ç—Å—è –≤ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å) –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∞—Å—Å–∏–≤ –≤–Ω—É—Ç—Ä–∏ —è—á–µ–π–∫–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä—ã –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ.
- –ú–µ—Ç–æ–¥—ã `insert`, `search` –∏ `delete` —Ä–∞–±–æ—Ç–∞—é—Ç —Å —Ö—ç—à-—Ç–∞–±–ª–∏—Ü–µ–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∏–Ω–¥–µ–∫—Å–∞.
---
3. –ò–Ω–¥–µ–∫—Å—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ (–¥–≤–æ–π–Ω–æ–π –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏)
–≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö, –∫–æ–≥–¥–∞ –∏–Ω–¥–µ–∫—Å—ã –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã. –¢–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –ø–æ–ª–µ–∑–µ–Ω –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É –∫–ª—é—á—É.
üéØ –†–µ—à–µ–Ω–∏–µ: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω–¥–µ–∫—Å–∞ —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π
```javascript
class SortedIndex {
  constructor() {
    this.data = [];
  }

  insert(key, value) {
    this.data.push([key, value]);
    this.data.sort((a, b) => a[0] - b[0]);  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–ª—é—á—É
  }

  search(key) {
    let left = 0;
    let right = this.data.length - 1;

    while (left <= right) {
      const mid = Math.floor((left + right) / 2);
      if (this.data[mid][0] === key) return this.data[mid][1];
      if (this.data[mid][0] < key) left = mid + 1;
      else right = mid - 1;
    }

    return null;  // –ï—Å–ª–∏ –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω
  }

  delete(key) {
    const index = this.data.findIndex(item => item[0] === key);
    if (index !== -1) {
      this.data.splice(index, 1);
      return true;
    }
    return false;  // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
  }
}

const index = new SortedIndex();
index.insert(1, "apple");
index.insert(3, "banana");
index.insert(2, "cherry");

console.log(index.search(2)); // "cherry"
index.delete(2);
console.log(index.search(2)); // null
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã —Å–æ–∑–¥–∞–µ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω–¥–µ–∫—Å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –ø–æ –∫–ª—é—á—É.
- –ú–µ—Ç–æ–¥ `insert` –¥–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –∏ —Å—Ä–∞–∑—É —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤.
- –î–ª—è –ø–æ–∏—Å–∫–∞ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∫–ª—é—á—É –∑–∞ O(log N).
- –ú–µ—Ç–æ–¥ `delete` —É–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç, –∏—Å–ø–æ–ª—å–∑—É—è –ø–æ–∏—Å–∫ –ø–æ –∏–Ω–¥–µ–∫—Å—É.
–†–µ–∑—é–º–µ:
1. –ë–∏–Ω–∞—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ –ø–æ–∏—Å–∫–∞ (BST) ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –±—ã—Å—Ç—Ä—ã–º –ø–æ–∏—Å–∫–æ–º, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∏ —É–¥–∞–ª–µ–Ω–∏–µ–º. –ö–∞–∂–¥—ã–π —É–∑–µ–ª —Ö—Ä–∞–Ω–∏—Ç –∫–ª—é—á –∏ –∑–Ω–∞—á–µ–Ω–∏–µ, –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –±—ã—Å—Ç—Ä—É—é –≤—Å—Ç–∞–≤–∫—É –∏ –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á—É.
2. –•—ç—à-—Ç–∞–±–ª–∏—Ü–∞ ‚Äî –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ö—ç—à-—Ñ—É–Ω–∫—Ü–∏–∏. –°—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ —Ä–µ—à–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤–Ω—É—Ç—Ä–∏ —è—á–µ–µ–∫.
3. –°–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ ‚Äî –ø–æ–ª–µ–∑–µ–Ω –¥–ª—è –∑–∞–¥–∞—á, –≥–¥–µ –≤–∞–∂–µ–Ω –ø–æ—Ä—è–¥–æ–∫ –∏ –Ω—É–∂–Ω–æ –±—ã—Å—Ç—Ä–æ –Ω–∞—Ö–æ–¥–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –±–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫.


Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –•—ç—à-—Ç–∞–±–ª–∏—Ü—ã (!—Ö—ç—à–º–∞–ø)(–º–∞—Å—Å–∏–≤, –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –∏ –¥–≤–∞ –≤–∏–¥–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–æ–ª–ª–∏–∑–∏–π —Ä–∞–∑—Ä–µ—à–∞—é—Ç—Å—è —Å–≤—è–∑–∞–Ω–Ω—ã–º —Å–ø–∏—Å–∫–æ–º):
---
–†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—ã —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º –∫–æ–ª–ª–∏–∑–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—É, –∏—Å–ø–æ–ª—å–∑—É—è –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –º–µ—Ç–æ–¥ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–æ–ª–ª–∏–∑–∏–π —á–µ—Ä–µ–∑ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏. –í —Ö—ç—à-—Ç–∞–±–ª–∏—Ü–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ –≤–∏–¥–µ –ø–∞—Ä –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ. –ü—Ä–∏ –∫–æ–ª–ª–∏–∑–∏–∏ (–∫–æ–≥–¥–∞ –¥–≤–∞ –∫–ª—é—á–∞ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ö—ç—à) —ç–ª–µ–º–µ–Ω—Ç—ã –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ —Å–≤—è–∑–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ.
üéØ –†–µ—à–µ–Ω–∏–µ:
1. –ú–∞—Å—Å–∏–≤ –∫–∞–∫ –±–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: –•—ç—à-—Ç–∞–±–ª–∏—Ü–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –ò–Ω–¥–µ–∫—Å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –±—É–¥–µ—Ç –≤—ã—á–∏—Å–ª—è—Ç—å—Å—è –∫–∞–∫ –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è —Ö—ç—à-—Ñ—É–Ω–∫—Ü–∏–∏.
2. –•—ç—à-—Ñ—É–Ω–∫—Ü–∏—è: –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞ –º—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Å—Ç—É—é —Ö—ç—à-—Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ —Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞.
3. –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–ª–ª–∏–∑–∏–π: –í —Å–ª—É—á–∞–µ –∫–æ–ª–ª–∏–∑–∏–π (–∫–æ–≥–¥–∞ –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å) –º—ã –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–≤—è–∑–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ –Ω–∞ —ç—Ç–æ–º –∏–Ω–¥–µ–∫—Å–µ. –°–≤—è–∑–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º —Ö—ç—à–æ–º.
4. –û–ø–µ—Ä–∞—Ü–∏–∏:
   - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ö—ç—à-—Ñ—É–Ω–∫—Ü–∏–∏.
   - –ü–æ–∏—Å–∫: –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Ö—ç—à-—Ç–∞–±–ª–∏—Ü–µ –ø–æ –∫–ª—é—á—É.
   - –£–¥–∞–ª–µ–Ω–∏–µ: –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—ã.
---
–†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—ã —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º –∫–æ–ª–ª–∏–∑–∏–π —á–µ—Ä–µ–∑ —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
–®–∞–≥ 1: –û–ø—Ä–µ–¥–µ–ª–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.
```javascript
class ListNode {
  constructor(key, value) {
    this.key = key;
    this.value = value;
    this.next = null;
  }
}
```
- `ListNode` –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —ç–ª–µ–º–µ–Ω—Ç —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞. –ö–∞–∂–¥—ã–π —É–∑–µ–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–∞—Ä—É `key-value` –∏ —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É–∑–µ–ª.
–®–∞–≥ 2: –†–µ–∞–ª–∏–∑—É–µ–º —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—É.
```javascript
class HashTable {
  constructor(size = 10) {
    this.size = size;
    this.table = new Array(size); // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤
  }

  // –•—ç—à-—Ñ—É–Ω–∫—Ü–∏—è (–æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è)
  hash(key) {
    let hash = 0;
    for (let i = 0; i < key.length; i++) {
      hash = (hash + key.charCodeAt(i)) % this.size;
    }
    return hash;
  }

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—É
  set(key, value) {
    const index = this.hash(key);

    // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —É–∑–µ–ª
    const newNode = new ListNode(key, value);

    if (!this.table[index]) {
      // –ï—Å–ª–∏ –Ω–∞ —ç—Ç–æ–º –∏–Ω–¥–µ–∫—Å–µ –Ω–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π
      this.table[index] = newNode;
    } else {
      // –ï—Å–ª–∏ –Ω–∞ –∏–Ω–¥–µ–∫—Å–µ —É–∂–µ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã, —Ä–∞–∑—Ä–µ—à–∞–µ–º –∫–æ–ª–ª–∏–∑–∏—é —á–µ—Ä–µ–∑ —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
      let current = this.table[index];

      // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç–ª–µ–º–µ–Ω—Ç —Å —Ç–∞–∫–∏–º –∂–µ –∫–ª—é—á–æ–º
      while (current) {
        if (current.key === key) {
          current.value = value; // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–ª—é—á –Ω–∞–π–¥–µ–Ω
          return;
        }
        if (!current.next) break;
        current = current.next;
      }

      // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —Å —Ç–∞–∫–∏–º –∫–ª—é—á–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –∫–æ–Ω–µ—Ü —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
      current.next = newNode;
    }
  }

  // –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ –∫–ª—é—á—É
  get(key) {
    const index = this.hash(key);
    let current = this.table[index];

    // –ü—Ä–æ–±–µ–≥–∞–µ–º –ø–æ —Å–≤—è–∑–∞–Ω–Ω–æ–º—É —Å–ø–∏—Å–∫—É
    while (current) {
      if (current.key === key) {
        return current.value; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–ª—é—á –Ω–∞–π–¥–µ–Ω
      }
      current = current.next;
    }

    return undefined; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º undefined, –µ—Å–ª–∏ –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ –∫–ª—é—á—É
  remove(key) {
    const index = this.hash(key);
    let current = this.table[index];
    let prev = null;

    // –ü—Ä–æ–±–µ–≥–∞–µ–º –ø–æ —Å–≤—è–∑–∞–Ω–Ω–æ–º—É —Å–ø–∏—Å–∫—É
    while (current) {
      if (current.key === key) {
        if (prev) {
          // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –ø–µ—Ä–≤—ã–π –≤ —Å–ø–∏—Å–∫–µ, —É–¥–∞–ª—è–µ–º –µ–≥–æ
          prev.next = current.next;
        } else {
          // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –ø–µ—Ä–≤—ã–π, –ø—Ä–æ—Å—Ç–æ –º–µ–Ω—è–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å
          this.table[index] = current.next;
        }
        return true; // –≠–ª–µ–º–µ–Ω—Ç —É–¥–∞–ª–µ–Ω
      }
      prev = current;
      current = current.next;
    }

    return false; // –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
  }
}
```
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—ã
```javascript
const hashTable = new HashTable();

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
hashTable.set("name", "Alice");
hashTable.set("age", 25);
hashTable.set("occupation", "developer");

// –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
console.log(hashTable.get("name")); // Alice
console.log(hashTable.get("age")); // 25
console.log(hashTable.get("occupation")); // developer

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
hashTable.set("age", 26);
console.log(hashTable.get("age")); // 26

// –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
hashTable.remove("age");
console.log(hashTable.get("age")); // undefined
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –•—ç—à-—Ñ—É–Ω–∫—Ü–∏—è: –ü—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ö—ç—à–∞, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –Ω–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ —Å—É–º–º—ã –∫–æ–¥–æ–≤ —Å–∏–º–≤–æ–ª–æ–≤ –∏ –≤–∑—è—Ç–∏–∏ –æ—Å—Ç–∞—Ç–∫–∞ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ —Ä–∞–∑–º–µ—Ä —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—ã.
2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–ª–∏–∑–∏–π: –ï—Å–ª–∏ –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ö—ç—à, –æ–Ω–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ —Å–≤—è–∑–Ω–æ–º —Å–ø–∏—Å–∫–µ –Ω–∞ –æ–¥–Ω–æ–º –∏–Ω–¥–µ–∫—Å–µ –º–∞—Å—Å–∏–≤–∞. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –ø–µ—Ä–µ–±–æ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π.
3. –û–ø–µ—Ä–∞—Ü–∏–∏:
   - `set()`: –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π.
   - `get()`: –ò—â–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∫–ª—é—á—É, –ø—Ä–æ–±–µ–≥–∞—è –ø–æ —Å–≤—è–∑–∞–Ω–Ω–æ–º—É —Å–ø–∏—Å–∫—É, –µ—Å–ª–∏ –∫–æ–ª–ª–∏–∑–∏—è –ø—Ä–æ–∏–∑–æ—à–ª–∞.
   - `remove()`: –£–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∫–ª—é—á—É, —Ç–∞–∫–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è —Å–ª—É—á–∞–∏ —Å –∫–æ–ª–ª–∏–∑–∏—è–º–∏.
–†–µ–∑—é–º–µ:
- –•—ç—à-—Ç–∞–±–ª–∏—Ü–∞ ‚Äî —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É—é—â–∞—è —Ö—ç—à-—Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
- –°–≤—è–∑–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–æ–ª–ª–∏–∑–∏–π, –∫–æ–≥–¥–∞ –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ö—ç—à.
- –≠—Ç–æ —Ä–µ—à–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –∑–∞–¥–∞—á, –≥–¥–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ö—Ä–∞–Ω–∏—Ç—å –∏ –±—ã—Å—Ç—Ä–æ –∏—Å–∫–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –∫–ª—é—á—É.


Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è (—Å–¥–µ–ª–∞–ª –≤—Å–µ –ø–æ–ª—è –∫–ª–∞—Å—Å–∞ –ø—É–±–ª–∏—á–Ω—ã–º–∏ –∏ –Ω–µ —Å–æ–∑–¥–∞–ª –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä)):
---
1. –ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è —á–µ—Ä–µ–∑ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å `Counter` —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º —Å–≤–æ–π—Å—Ç–≤–æ–º `count`, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–ø—Ä—è–º—É—é.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
class Counter {
  #count = 0; // –ü—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ

  increment() {
    this.#count++;
  }

  getCount() {
    return this.#count;
  }
}

const counter = new Counter();
counter.increment();
console.log(counter.getCount()); // 1
// console.log(counter.#count); // –û—à–∏–±–∫–∞: –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –°–≤–æ–π—Å—Ç–≤–æ `#count` –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞. –í–Ω–µ—à–Ω–∏–π –∫–æ–¥ –Ω–µ –º–æ–∂–µ—Ç –µ–≥–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–ø—Ä—è–º—É—é.
---
2. –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å `User`, –≤ –∫–æ—Ç–æ—Ä–æ–º –µ—Å—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä–æ–ª—è.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
class User {
  #password;

  constructor(password) {
    this.#password = password;
  }

  #checkPassword(input) {
    return input === this.#password;
  }

  login(input) {
    return this.#checkPassword(input) ? "Login successful" : "Access denied";
  }
}

const user = new User("secret");
console.log(user.login("secret")); // Login successful
// console.log(user.#checkPassword("secret")); // –û—à–∏–±–∫–∞: –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –º–µ—Ç–æ–¥
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú–µ—Ç–æ–¥ `#checkPassword` –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞.
---
3. –ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∑–∞–º—ã–∫–∞–Ω–∏—è
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é `createCounter` —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function createCounter() {
  let count = 0;

  return {
    increment() {
      count++;
    },
    getCount() {
      return count;
    },
  };
}

const counter = createCounter();
counter.increment();
console.log(counter.getCount()); // 1
// console.log(counter.count); // undefined
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è `count` —Å–∫—Ä—ã—Ç–∞ –≤–Ω—É—Ç—Ä–∏ –∑–∞–º—ã–∫–∞–Ω–∏—è –∏ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥—ã –æ–±—ä–µ–∫—Ç–∞.
---
4. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Symbol –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ —á–µ—Ä–µ–∑ `Symbol`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
const _id = Symbol("id");

class Product {
  constructor(id, name) {
    this[_id] = id;
    this.name = name;
  }

  getId() {
    return this[_id];
  }
}

const product = new Product(123, "Laptop");
console.log(product.getId()); // 123
// console.log(product[_id]); // undefined
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –°–∏–º–≤–æ–ª—ã —Å–æ–∑–¥–∞—é—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–ª—É—á–∞–π–Ω–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –∏–ª–∏ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é.
---
5. –ì–µ—Ç—Ç–µ—Ä—ã –∏ —Å–µ—Ç—Ç–µ—Ä—ã
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å `Rectangle` —Å –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ `width` –∏ `height`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
class Rectangle {
  #width;
  #height;

  constructor(width, height) {
    this.#width = width;
    this.#height = height;
  }

  get area() {
    return this.#width * this.#height;
  }

  set width(value) {
    if (value > 0) this.#width = value;
  }

  get width() {
    return this.#width;
  }
}

const rect = new Rectangle(5, 10);
console.log(rect.area); // 50
rect.width = 20;
console.log(rect.area); // 200
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ì–µ—Ç—Ç–µ—Ä—ã –∏ —Å–µ—Ç—Ç–µ—Ä—ã –ø–æ–∑–≤–æ–ª—è—é—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –¥–æ—Å—Ç—É–ø–æ–º –∫ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º —Å–≤–æ–π—Å—Ç–≤–∞–º.
---
6. –°–æ–∑–¥–∞–Ω–∏–µ singleton —á–µ—Ä–µ–∑ –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—é
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å `Database` —Å —à–∞–±–ª–æ–Ω–æ–º Singleton.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
class Database {
  static #instance;

  constructor(connectionString) {
    if (Database.#instance) {
      return Database.#instance;
    }
    this.connectionString = connectionString;
    Database.#instance = this;
  }
}

const db1 = new Database("db://localhost");
const db2 = new Database("db://remote");

console.log(db1 === db2); // true
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ü—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ `#instance` –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞.
---
7. –ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è —á–µ—Ä–µ–∑ —Ñ–∞–±—Ä–∏—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ–∞–±—Ä–∏—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function createUser(name) {
  let balance = 0;

  return {
    name,
    addBalance(amount) {
      balance += amount;
    },
    getBalance() {
      return balance;
    },
  };
}

const user = createUser("Alice");
user.addBalance(100);
console.log(user.getBalance()); // 100
// console.log(user.balance); // undefined
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: `balance` –∑–∞—â–∏—â—ë–Ω –≤–Ω—É—Ç—Ä–∏ –∑–∞–º—ã–∫–∞–Ω–∏—è.
---
8. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ WeakMap –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —á–µ—Ä–µ–∑ `WeakMap`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
const privateData = new WeakMap();

class User {
  constructor(name) {
    privateData.set(this, { name });
  }

  getName() {
    return privateData.get(this).name;
  }
}

const user = new User("Bob");
console.log(user.getName()); // Bob
// console.log(privateData.get(user)); // –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –∏–∑–≤–Ω–µ
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: `WeakMap` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–º.
---
9. –ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è –≤ –º–æ–¥—É–ª—è—Ö ES6
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–æ–¥—É–ª—å —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
`user.js`:
```javascript
const users = [];

export function addUser(user) {
  users.push(user);
}

export function getUsers() {
  return users;
}
```

`main.js`:
```javascript
import { addUser, getUsers } from "./user.js";

addUser("Alice");
console.log(getUsers()); // ["Alice"]
// console.log(users); // –û—à–∏–±–∫–∞: users –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É—é—Ç—Å—è –≤ –º–æ–¥—É–ª–µ.
---
10. –ü–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º —Å –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏–µ–π
‚åõ –ó–∞–¥–∞—á–∞: –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å `Shape` –∏ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–æ–≤ `Circle` –∏ `Square`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
class Shape {
  #type;

  constructor(type) {
    this.#type = type;
  }

  getType() {
    return this.#type;
  }
}

class Circle extends Shape {
  constructor(radius) {
    super("Circle");
    this.radius = radius;
  }

  getArea() {
    return Math.PI * this.radius ** 2;
  }
}

class Square extends Shape {
  constructor(side) {
    super("Square");
    this.side = side;
  }

  getArea() {
    return this.side ** 2;
  }
}

const shapes = [new Circle(5), new Square(4)];

shapes.forEach((shape) =>
  console.log(`${shape.getType()} Area: ${shape.getArea()}`)
);
```
---
11. –°–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å `BankAccount` —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ –¥–ª—è –¥–µ–ø–æ–∑–∏—Ç–∞ –∏ —Å–Ω—è—Ç–∏—è
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å `BankAccount` —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ –¥–ª—è –¥–µ–ø–æ–∑–∏—Ç–∞, —Å–Ω—è—Ç–∏—è –¥–µ–Ω–µ–≥ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
class BankAccount {
  #balance = 0;

  deposit(amount) {
    if (amount > 0) {
      this.#balance += amount;
    }
  }

  withdraw(amount) {
    if (amount <= this.#balance) {
      this.#balance -= amount;
    } else {
      console.log("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤");
    }
  }

  getBalance() {
    return this.#balance;
  }
}

const account = new BankAccount();
account.deposit(500);
account.withdraw(200);
console.log(account.getBalance()); // 300
// console.log(account.#balance); // –û—à–∏–±–∫–∞: –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –°–≤–æ–π—Å—Ç–≤–æ `#balance` –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä–æ–≤–∞–Ω–æ, –∏ –µ–≥–æ –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–ø—Ä—è–º—É—é —Å–Ω–∞—Ä—É–∂–∏ –∫–ª–∞—Å—Å–∞.
- –ú–µ—Ç–æ–¥—ã `deposit` –∏ `withdraw` –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–ª–∞–Ω—Å–æ–º.
---
12. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å `Logger` —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ –ª–æ–≥–∞–º
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å `Logger`, –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç –ª–æ–≥–∏ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è –∑–∞–ø–∏—Å–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤. –õ–æ–≥–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏, –∏ –≤–Ω–µ—à–Ω–∏–π –∫–æ–¥ –Ω–µ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–∏–º –Ω–∞–ø—Ä—è–º—É—é.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
class Logger {
  #logs = [];

  log(message) {
    this.#logs.push(message);
  }

  getLogs() {
    return this.#logs.slice();
  }
}

const logger = new Logger();
logger.log("–õ–æ–≥ 1");
logger.log("–õ–æ–≥ 2");
console.log(logger.getLogs()); // ["–õ–æ–≥ 1", "–õ–æ–≥ 2"]
// console.log(logger.#logs); // –û—à–∏–±–∫–∞: –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –õ–æ–≥–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —Å–≤–æ–π—Å—Ç–≤–µ `#logs`.
- –ú–µ—Ç–æ–¥ `getLogs` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ø–∏—é –º–∞—Å—Å–∏–≤–∞ –ª–æ–≥–æ–≤, –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—è –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –¥–∞–Ω–Ω—ã–º.
---
13. –°–¥–µ–ª–∞—Ç—å —Ñ–∞–±—Ä–∏–∫—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º –∫ –¥–∞–Ω–Ω—ã–º
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ñ–∞–±—Ä–∏—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç —Å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –∞ –≤–Ω–µ—à–Ω–∏–º –∫–æ–¥–æ–º –º–æ–∂–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function createUser(name, age) {
  let _name = name;
  let _age = age;

  return {
    getName() {
      return _name;
    },
    getAge() {
      return _age;
    },
    setName(newName) {
      if (newName) _name = newName;
    },
    setAge(newAge) {
      if (newAge > 0) _age = newAge;
    }
  };
}

const user = createUser("Alice", 25);
console.log(user.getName()); // Alice
user.setName("Bob");
console.log(user.getName()); // Bob
// console.log(user._name); // undefined
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É—é—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –∑–∞–º—ã–∫–∞–Ω–∏—è –∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã.
---
14. –ò–Ω–∫–∞–ø—Å—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ React-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ —Å `useState`
‚åõ –ó–∞–¥–∞—á–∞: –í React —Å–æ–∑–¥–∞–π—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä–æ–≤–∞–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –¢–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –º–µ—Ç–æ–¥—ã –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å —ç—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∞ –Ω–∞—Ä—É–∂—É –æ–Ω–æ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –≥–µ—Ç—Ç–µ—Ä.
üéØ –†–µ—à–µ–Ω–∏–µ:
```jsx
import React, { useState } from "react";

function Counter() {
  const [count, setCount] = useState(0);

  // –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const increment = () => setCount(count + 1);
  const decrement = () => setCount(count - 1);

  // –ì–µ—Ç—Ç–µ—Ä –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const getCount = () => count;

  return (
    <div>
      <h1>Counter: {getCount()}</h1>
      <button onClick={increment}>Increment</button>
      <button onClick={decrement}>Decrement</button>
    </div>
  );
}

export default Counter;
```
–û–±—è—Å–Ω–µ–Ω–∏–µ:
- –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –º–µ—Ç–æ–¥—ã `increment` –∏ `decrement` –∏–∑–º–µ–Ω—è—é—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é `setCount`.
- –í–Ω–µ—à–Ω–∏–π –∫–æ–¥ –Ω–µ –º–æ–∂–µ—Ç –Ω–∞–ø—Ä—è–º—É—é –∏–∑–º–µ–Ω—è—Ç—å `count`, –æ–Ω —Ç–æ–ª—å–∫–æ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–µ—Ç—Ç–µ—Ä `getCount`.
---
15. –°–æ–∑–¥–∞—Ç—å –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API, —Å–∫—Ä—ã–≤–∞—é—â–∏–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∑–∞–ø—Ä–æ—Å–æ–≤
‚åõ –ó–∞–¥–∞—á–∞: –°–æ–∑–¥–∞—Ç—å –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API, –∫–æ—Ç–æ—Ä—ã–π –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
// api.js
const api = (() => {
  const apiUrl = "https://api.example.com/";

  const fetchData = async (endpoint) => {
    const response = await fetch(apiUrl + endpoint);
    const data = await response.json();
    return data;
  };

  return {
    getUserData: (userId) => fetchData(`users/${userId}`),
  };
})();

api.getUserData(1).then((data) => console.log(data));
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –í—Å—è –ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å API –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä–æ–≤–∞–Ω–∞ –≤–Ω—É—Ç—Ä–∏ –º–æ–¥—É–ª—è `api`, –∞ –Ω–∞—Ä—É–∂—É –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –º–µ—Ç–æ–¥ `getUserData`.
- –ü—Ä–∏–≤–∞—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è `fetchData` —Å–∫—Ä—ã—Ç–∞ –∏ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –∏–∑–≤–Ω–µ.
---
16. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å `Cache`, –∑–∞—â–∏—â–∞—é—â–∏–π –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å `Cache`, –∫–æ—Ç–æ—Ä—ã–π –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–º–∏, —Å–∫—Ä—ã–≤–∞—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
class Cache {
  #data = {};

  get(key) {
    return this.#data[key] || null;
  }

  set(key, value) {
    this.#data[key] = value;
  }

  clear() {
    this.#data = {};
  }
}

const cache = new Cache();
cache.set("user", { name: "Alice", age: 25 });
console.log(cache.get("user")); // { name: "Alice", age: 25 }
// console.log(cache.#data); // –û—à–∏–±–∫–∞: –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ü—Ä–∏–≤–∞—Ç–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ `#data` —Å–∫—Ä—ã–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö.
- –í–Ω–µ—à–Ω–∏–π –∫–æ–¥ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã `get`, `set` –∏ `clear` –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫—ç—à–µ–º.
---
17. –ò–Ω–∫–∞–ø—Å—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å–ª–æ–∂–Ω—É—é –ª–æ–≥–∏–∫—É –≤ –º–æ–¥—É–ª–∏ –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–æ–¥—É–ª—å, –∫–æ—Ç–æ—Ä—ã–π –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç —Å–ª–æ–∂–Ω—É—é –ª–æ–≥–∏–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–∞–º–∏) –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
// dateUtils.js
const dateUtils = (() => {
  const formatDate = (date) => {
    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
  };

  return {
    format: formatDate,
  };
})();

console.log(dateUtils.format(new Date())); // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É: 21/9/2021
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –°–ª–æ–∂–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–∞–º–∏ –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä–æ–≤–∞–Ω–∞ –≤ –º–æ–¥—É–ª–µ `dateUtils`.
- –ù–∞—Ä—É–∂—É —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏—è `format`, —Å–∫—Ä—ã–≤–∞—è –¥—Ä—É–≥–∏–µ –¥–µ—Ç–∞–ª–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.
–ò—Ç–æ–≥
–≠—Ç–∏ –∑–∞–¥–∞—á–∏ –æ—Ö–≤–∞—Ç—ã–≤–∞—é—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏–∏ –≤ JavaScript –∏ React:
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤ –∏ –º–µ—Ç–æ–¥–æ–≤ –≤ –∫–ª–∞—Å—Å–∞—Ö.
- –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–±—Ä–∏—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏ –∑–∞–º—ã–∫–∞–Ω–∏–π.
- –ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ React.
- –°–∫—Ä—ã—Ç–∏–µ —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å API.


Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –†–∞–∑–≤–æ—Ä–æ—Ç –º–∞—Å—Å–∏–≤–∞:
---
–†–∞–∑–≤–æ—Ä–æ—Ç –º–∞—Å—Å–∏–≤–∞ ‚Äî —ç—Ç–æ –æ–ø–µ—Ä–∞—Ü–∏—è, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –º–µ–Ω—è—é—Ç –ø–æ—Ä—è–¥–æ–∫ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π.
üéØ –†–µ—à–µ–Ω–∏–µ: –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞ JavaScript:
1. –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ `reverse`
–°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± ‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ `reverse`:
```javascript
const array = [1, 2, 3, 4, 5];
const reversedArray = array.reverse();

console.log("–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤:", array);      // [5, 4, 3, 2, 1]
console.log("–†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", reversedArray); // [5, 4, 3, 2, 1]
```
–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:
- `reverse` –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤, —Ç–∞–∫ —á—Ç–æ –±—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏.
---
2. –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ü–∏–∫–ª–∞ `for`
–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞:
```javascript
function reverseArray(arr) {
  const reversed = [];
  for (let i = arr.length - 1; i >= 0; i--) {
    reversed.push(arr[i]);
  }
  return reversed;
}

const array = [1, 2, 3, 4, 5];
const reversedArray = reverseArray(array);

console.log("–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤:", array);      // [1, 2, 3, 4, 5]
console.log("–†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", reversedArray); // [5, 4, 3, 2, 1]
```
---
3. –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏ –∏ `reduce`
```javascript
function reverseArray(arr) {
  return arr.reduce((acc, curr) => [curr, ...acc], []);
}
const array = [1, 2, 3, 4, 5];
const reversedArray = reverseArray(array);
console.log("–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤:", array);      // [1, 2, 3, 4, 5]
console.log("–†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", reversedArray); // [5, 4, 3, 2, 1]
```
–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:
- –§—É–Ω–∫—Ü–∏—è `reduce` –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ –Ω–∞—á–∞–ª–æ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–≥–æ –º–∞—Å—Å–∏–≤–∞.
---
4. –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –¥–≤—É—Ö —É–∫–∞–∑–∞—Ç–µ–ª–µ–π
–≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ –Ω–∞ –º–µ—Å—Ç–µ, –º–∏–Ω–∏–º–∏–∑–∏—Ä—É—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:
```javascript
function reverseArrayInPlace(arr) {
  let left = 0;
  let right = arr.length - 1;

  while (left < right) {
    // –ú–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏ —ç–ª–µ–º–µ–Ω—Ç—ã
    [arr[left], arr[right]] = [arr[right], arr[left]];
    left++;
    right--;
  }
  return arr;
}

const array = [1, 2, 3, 4, 5];
reverseArrayInPlace(array);

console.log("–†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", array); // [5, 4, 3, 2, 1]
```
–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:
- –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –Ω–µ —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏ —ç–∫–æ–Ω–æ–º–∏—Ç –ø–∞–º—è—Ç—å.
- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –æ–±–º–µ–Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–µ—Å—Ç–∞–º–∏.
---
5. –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ä–µ–∫—É—Ä—Å–∏–∏
```javascript
function reverseArray(arr) {
  if (arr.length === 0) return [];
  return [arr[arr.length - 1]].concat(reverseArray(arr.slice(0, -1)));
}

const array = [1, 2, 3, 4, 5];
const reversedArray = reverseArray(array);

console.log("–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤:", array);      // [1, 2, 3, 4, 5]
console.log("–†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", reversedArray); // [5, 4, 3, 2, 1]
```
–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:
- –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Ö–æ—Ä–æ—à–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö –º–∞—Å—Å–∏–≤–æ–≤.
- –ü—Ä–∏ –±–æ–ª—å—à–∏—Ö –º–∞—Å—Å–∏–≤–∞—Ö –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–µ–∫–∞ –≤—ã–∑–æ–≤–æ–≤.
---
6. –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `Array.from`
```javascript
const array = [1, 2, 3, 4, 5];
const reversedArray = Array.from(array).reverse();

console.log("–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤:", array);      // [1, 2, 3, 4, 5]
console.log("–†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", reversedArray); // [5, 4, 3, 2, 1]
```
–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:
- `Array.from(array)` —Å–æ–∑–¥–∞—ë—Ç –∫–æ–ø–∏—é –º–∞—Å—Å–∏–≤–∞, –ø–æ—ç—Ç–æ–º—É `reverse` –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª.
–ò—Ç–æ–≥
–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫–æ–π –º–µ—Ç–æ–¥:
1. `reverse`: –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –±—ã—Å—Ç—Ä–æ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫, –∏ –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω—ë–Ω.
2. –¶–∏–∫–ª `for`: –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤ –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º.
3. `reduce`: –ö–æ–≥–¥–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.
4. –î–≤–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è: –î–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏ –∏ —Ä–∞–±–æ—Ç—ã –Ω–∞ –º–µ—Å—Ç–µ.
5. –†–µ–∫—É—Ä—Å–∏—è: –î–ª—è —É—á–µ–±–Ω—ã—Ö —Ü–µ–ª–µ–π –∏–ª–∏ –∫–æ–≥–¥–∞ –º–∞—Å—Å–∏–≤—ã –Ω–µ–±–æ–ª—å—à–∏–µ.

Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ü–µ—Ä–µ–ª–æ–∂–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é:
---
‚åõ –ó–∞–¥–∞—á–∞: –ü–µ—Ä–µ–ª–æ–∂–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ–¥–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –¥—Ä—É–≥—É—é
üéØ –†–µ—à–µ–Ω–∏–µ: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤–∫–ª—é—á–∞–µ—Ç:
1. –ù–∞ —á–∏—Å—Ç–æ–º JavaScript (Vanilla): –†–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏, –æ–±—ä–µ–∫—Ç–∞–º–∏ –∏–ª–∏ –¥—Ä—É–≥–∏–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö.
2. –ù–∞ React: –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è (`useState`) –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.
---
1. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ JavaScript
–ü—Ä–∏–º–µ—Ä 1. –ü–µ—Ä–µ–Ω–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏–∑ –º–∞—Å—Å–∏–≤–∞ –≤ –º–∞—Å—Å–∏–≤
```javascript
function transferData(source, destination) {
  while (source.length > 0) {
    // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Ü–µ–ª–µ–≤–æ–π
    const item = source.shift();
    destination.push(item);
  }
}

const sourceArray = [1, 2, 3, 4, 5];
const destinationArray = [];

transferData(sourceArray, destinationArray);

console.log("Source:", sourceArray);       // []
console.log("Destination:", destinationArray); // [1, 2, 3, 4, 5]
```
---
–ü—Ä–∏–º–µ—Ä 2. –ü–µ—Ä–µ–Ω–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –≤ –æ–±—ä–µ–∫—Ç
```javascript
function transferObjectData(source, destination) {
  for (const key in source) {
    if (source.hasOwnProperty(key)) {
      destination[key] = source[key];
      delete source[key]; // –£–¥–∞–ª—è–µ–º –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    }
  }
}

const sourceObject = { a: 1, b: 2, c: 3 };
const destinationObject = {};

transferObjectData(sourceObject, destinationObject);

console.log("Source:", sourceObject);       // {}
console.log("Destination:", destinationObject); // { a: 1, b: 2, c: 3 }
```
---
–ü—Ä–∏–º–µ—Ä 3. –ü–µ—Ä–µ–Ω–æ—Å –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º
```javascript
function transferAndTransform(source, destination, transformFn) {
  while (source.length > 0) {
    const item = source.shift();
    destination.push(transformFn(item)); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —ç–ª–µ–º–µ–Ω—Ç –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º
  }
}

const sourceArray = [1, 2, 3, 4, 5];
const destinationArray = [];

// –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ 10 –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–Ω–æ—Å–æ–º
transferAndTransform(sourceArray, destinationArray, (x) => x + 10);

console.log("Source:", sourceArray);       // []
console.log("Destination:", destinationArray); // [11, 12, 13, 14, 15]
```
---
2. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ React
–í React –ø–µ—Ä–µ–Ω–æ—Å –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è (`useState`).
–ü—Ä–∏–º–µ—Ä 1. –ü–µ—Ä–µ–Ω–æ—Å —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ –æ–¥–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –≤ –¥—Ä—É–≥–æ–π
```jsx
import React, { useState } from "react";

function TransferList() {
  const [source, setSource] = useState([1, 2, 3, 4, 5]);
  const [destination, setDestination] = useState([]);

  const transferItem = () => {
    if (source.length > 0) {
      const item = source[0];
      setSource(source.slice(1)); // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
      setDestination([...destination, item]); // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ —Ü–µ–ª–µ–≤–æ–π —Å–ø–∏—Å–æ–∫
    }
  };

  return (
    <div>
      <h3>Source List</h3>
      <ul>
        {source.map((item, index) => (
          <li key={index}>{item}</li>
        ))}
      </ul>
      <h3>Destination List</h3>
      <ul>
        {destination.map((item, index) => (
          <li key={index}>{item}</li>
        ))}
      </ul>
      <button onClick={transferItem}>Transfer Next Item</button>
    </div>
  );
}

export default TransferList;
```
---
–ü—Ä–∏–º–µ—Ä 2. –ü–µ—Ä–µ–Ω–æ—Å –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
```jsx
import React, { useState } from "react";

function TransferAll() {
  const [source, setSource] = useState(["Apple", "Banana", "Cherry"]);
  const [destination, setDestination] = useState([]);

  const transferAllItems = () => {
    setDestination([...destination, ...source]); // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    setSource([]); // –û—á–∏—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Å–ø–∏—Å–æ–∫
  };

  return (
    <div>
      <h3>Source List</h3>
      <ul>
        {source.map((item, index) => (
          <li key={index}>{item}</li>
        ))}
      </ul>
      <h3>Destination List</h3>
      <ul>
        {destination.map((item, index) => (
          <li key={index}>{item}</li>
        ))}
      </ul>
      <button onClick={transferAllItems}>Transfer All Items</button>
    </div>
  );
}

export default TransferAll;
```
---
–ü—Ä–∏–º–µ—Ä 3. –ü–µ—Ä–µ–Ω–æ—Å —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –ø–æ –∫–ª–∏–∫—É
```jsx
import React, { useState } from "react";

function TransferOnClick() {
  const [source, setSource] = useState([1, 2, 3, 4, 5]);
  const [destination, setDestination] = useState([]);

  const transferItem = (item) => {
    setSource(source.filter((i) => i !== item)); // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    setDestination([...destination, item]); // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ü–µ–ª–µ–≤–æ–π —Å–ø–∏—Å–æ–∫
  };

  return (
    <div>
      <h3>Source List</h3>
      <ul>
        {source.map((item, index) => (
          <li key={index}>
            {item}{" "}
            <button onClick={() => transferItem(item)}>Transfer</button>
          </li>
        ))}
      </ul>
      <h3>Destination List</h3>
      <ul>
        {destination.map((item, index) => (
          <li key={index}>{item}</li>
        ))}
      </ul>
    </div>
  );
}

export default TransferOnClick;
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ React-–∫–æ–¥–æ–≤
1. –°–æ—Å—Ç–æ—è–Ω–∏–µ:
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `useState` –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π (`source` –∏ `destination`).
   - –ü–µ—Ä–µ–Ω–æ—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —ç—Ç–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π.
2. –ú–µ—Ç–æ–¥—ã:
   - –í –ø–µ—Ä–≤–æ–º –ø—Ä–∏–º–µ—Ä–µ: –ø–æ –æ–¥–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –∏–∑ `source` –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –≤ `destination`.
   - –í–æ –≤—Ç–æ—Ä–æ–º –ø—Ä–∏–º–µ—Ä–µ: –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ `source` –ø–µ—Ä–µ–º–µ—â–∞—é—Ç—Å—è –≤ `destination` –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º.
   - –í —Ç—Ä–µ—Ç—å–µ–º –ø—Ä–∏–º–µ—Ä–µ: —ç–ª–µ–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–Ω–æ—Å—è—Ç—Å—è —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –ø–æ –∫–ª–∏–∫—É.
3. –†–µ–Ω–¥–µ—Ä–∏–Ω–≥:
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–µ—Ç–æ–¥ `map` –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–≤.

Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –ü—Ä–æ–π—Ç–∏ —Ü–∏–∫–ª–æ–º –∏ —Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –æ—Ç—Ä–µ–∑–∫–∞:
---
üéØ –†–µ—à–µ–Ω–∏–µ: –í–æ—Ç –ø—Ä–∏–º–µ—Ä –∫–æ–¥–∞ –Ω–∞ JavaScript, –≥–¥–µ –¥–∞–Ω–Ω—ã–µ —Å—É–º–º–∏—Ä—É—é—Ç—Å—è, –∏—Å–∫–ª—é—á–∞—è —É–∫–∞–∑–∞–Ω–Ω—ã–π –æ—Ç—Ä–µ–∑–æ–∫ –∏–Ω–¥–µ–∫—Å–æ–≤:
–ö–æ–¥
```javascript
function sumExcludingRange(arr, start, end) {
  let sum = 0;

  for (let i = 0; i < arr.length; i++) {
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
    if (i >= start && i <= end) {
      continue;
    }

    sum += arr[i];
  }

  return sum;
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const data = [10, 20, 30, 40, 50, 60];
const startIndex = 2; // –ò–Ω–¥–µ–∫—Å –Ω–∞—á–∞–ª–∞ –æ—Ç—Ä–µ–∑–∫–∞ (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ)
const endIndex = 4;   // –ò–Ω–¥–µ–∫—Å –∫–æ–Ω—Ü–∞ –æ—Ç—Ä–µ–∑–∫–∞ (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ)

const result = sumExcludingRange(data, startIndex, endIndex);

console.log("–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞:", result); // 10 + 20 + 60 = 90
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –í—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:
   - `arr`: –ú–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ.
   - `start`: –ù–∞—á–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –æ—Ç—Ä–µ–∑–∫–∞ (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ).
   - `end`: –ö–æ–Ω–µ—á–Ω—ã–π –∏–Ω–¥–µ–∫—Å –æ—Ç—Ä–µ–∑–∫–∞ (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ).
2. –¶–∏–∫–ª `for`:
   - –ü–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞.
   - –° –ø–æ–º–æ—â—å—é `if (i >= start && i <= end)` –º—ã –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, –ø–æ–ø–∞–¥–∞–µ—Ç –ª–∏ —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å –≤ –∏—Å–∫–ª—é—á–∞–µ–º—ã–π –æ—Ç—Ä–µ–∑–æ–∫.
   - –ï—Å–ª–∏ –∏–Ω–¥–µ–∫—Å –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –∏—Å–∫–ª—é—á–∞–µ–º—ã–π –æ—Ç—Ä–µ–∑–æ–∫, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è `continue`, —á—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é.
3. –°–ª–æ–∂–µ–Ω–∏–µ:
   - –≠–ª–µ–º–µ–Ω—Ç—ã –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —Å—É–º–º–∏—Ä—É—é—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π `sum`.
4. –†–µ–∑—É–ª—å—Ç–∞—Ç:
   - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∏—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –∑–Ω–∞—á–µ–Ω–∏–π –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –æ—Ç—Ä–µ–∑–∫–µ.
---
–ü—Ä–∏–º–µ—Ä —Å –ø—É—Å—Ç—ã–º –æ—Ç—Ä–µ–∑–∫–æ–º
–ï—Å–ª–∏ –æ—Ç—Ä–µ–∑–æ–∫ –ø—É—Å—Ç–æ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, `startIndex > endIndex`), –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –±—É–¥—É—Ç —É—á—Ç–µ–Ω—ã:
```javascript
const data = [10, 20, 30, 40];
console.log(sumExcludingRange(data, 5, 3)); // –°—É–º–º–∞ –≤—Å–µ—Ö: 100
```
–ü—Ä–∏–º–µ—Ä —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `reduce`
–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ `reduce`:
```javascript
function sumExcludingRange(arr, start, end) {
  return arr.reduce((sum, value, index) => {
    return index >= start && index <= end ? sum : sum + value;
  }, 0);
}
// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const data = [10, 20, 30, 40, 50];
console.log(sumExcludingRange(data, 1, 3)); // –°—É–º–º–∞: 10 + 50 = 60
```

Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å DAO –¥–∞–æ—à–∫—É:
---
üéØ –†–µ—à–µ–Ω–∏–µ: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è DAO (Data Access Object)
DAO (Data Access Object) ‚Äî —ç—Ç–æ —à–∞–±–ª–æ–Ω –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏. –û–Ω –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, —Ñ–∞–π–ª–∞–º –∏–ª–∏ –¥—Ä—É–≥–∏–º —Ö—Ä–∞–Ω–∏–ª–∏—â–∞–º –¥–∞–Ω–Ω—ã—Ö.
–ú—ã —Ä–µ–∞–ª–∏–∑—É–µ–º DAO-—à–∫—É, –∫–æ—Ç–æ—Ä–∞—è:
1. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è —á—Ç–µ–Ω–∏—è, —Å–æ–∑–¥–∞–Ω–∏—è, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.
2. –ê–±—Å—Ç—Ä–∞–≥–∏—Ä—É–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö (–ª–æ–∫–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤, API, –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö).
---
1. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è DAO –Ω–∞ JavaScript (Vanilla)
–ö–æ–¥
```javascript
class UserDAO {
  constructor() {
    this.users = []; // –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö (–º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ API/–ë–î)
    this.nextId = 1; // –°—á—ë—Ç—á–∏–∫ –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID
  }

  // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  getAllUsers() {
    return this.users;
  }

  // –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
  getUserById(id) {
    return this.users.find((user) => user.id === id) || null;
  }

  // –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  addUser(user) {
    const newUser = { id: this.nextId++, ...user };
    this.users.push(newUser);
    return newUser;
  }

  // –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
  updateUser(id, updatedFields) {
    const user = this.getUserById(id);
    if (!user) return null;

    Object.assign(user, updatedFields);
    return user;
  }

  // –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
  deleteUser(id) {
    const index = this.users.findIndex((user) => user.id === id);
    if (index === -1) return false;

    this.users.splice(index, 1);
    return true;
  }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const userDAO = new UserDAO();

// –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
userDAO.addUser({ name: "Alice", age: 25 });
userDAO.addUser({ name: "Bob", age: 30 });

// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
console.log("–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:", userDAO.getAllUsers());

// –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
userDAO.updateUser(1, { age: 26 });
console.log("–û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", userDAO.getUserById(1));

// –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
userDAO.deleteUser(2);
console.log("–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è:", userDAO.getAllUsers());
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä:
   - –°–æ–∑–¥–∞—ë—Ç—Å—è –º–∞—Å—Å–∏–≤ `users` –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
   - `nextId` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤.
2. –ú–µ—Ç–æ–¥—ã:
   - `getAllUsers`: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
   - `getUserById`: –ò—â–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID.
   - `addUser`: –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
   - `updateUser`: –û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
   - `deleteUser`: –£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
---
2. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è DAO –Ω–∞ React
–í React –º—ã —Ä–µ–∞–ª–∏–∑—É–µ–º DAO –∫–∞–∫ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∫–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –∏–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.
–ö–æ–¥
1. –°–µ—Ä–≤–∏—Å–Ω—ã–π –∫–ª–∞—Å—Å (`UserDAO`)
```javascript
class UserDAO {
  constructor() {
    this.users = [];
    this.nextId = 1;
  }

  getAllUsers() {
    return this.users;
  }

  getUserById(id) {
    return this.users.find((user) => user.id === id) || null;
  }

  addUser(user) {
    const newUser = { id: this.nextId++, ...user };
    this.users.push(newUser);
    return newUser;
  }

  updateUser(id, updatedFields) {
    const user = this.getUserById(id);
    if (!user) return null;

    Object.assign(user, updatedFields);
    return user;
  }

  deleteUser(id) {
    const index = this.users.findIndex((user) => user.id === id);
    if (index === -1) return false;

    this.users.splice(index, 1);
    return true;
  }
}

export default new UserDAO(); // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä DAO
```
---
2. –ö–æ–º–ø–æ–Ω–µ–Ω—Ç React
```jsx
import React, { useState, useEffect } from "react";
import userDAO from "./UserDAO"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º DAO

function UserManager() {
  const [users, setUsers] = useState([]);
  const [newUser, setNewUser] = useState({ name: "", age: "" });

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    setUsers(userDAO.getAllUsers());
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const handleAddUser = () => {
    const addedUser = userDAO.addUser({
      name: newUser.name,
      age: parseInt(newUser.age),
    });
    setUsers([...users, addedUser]); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    setNewUser({ name: "", age: "" }); // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const handleDeleteUser = (id) => {
    userDAO.deleteUser(id);
    setUsers(userDAO.getAllUsers()); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  };

  return (
    <div style={styles.container}>
      <h1>User Manager</h1>
      <div style={styles.form}>
        <input
          style={styles.input}
          type="text"
          placeholder="Name"
          value={newUser.name}
          onChange={(e) => setNewUser({ ...newUser, name: e.target.value })}
        />
        <input
          style={styles.input}
          type="number"
          placeholder="Age"
          value={newUser.age}
          onChange={(e) => setNewUser({ ...newUser, age: e.target.value })}
        />
        <button style={styles.button} onClick={handleAddUser}>
          Add User
        </button>
      </div>
      <ul style={styles.list}>
        {users.map((user) => (
          <li key={user.id} style={styles.listItem}>
            {user.name} ({user.age} years old)
            <button
              style={styles.deleteButton}
              onClick={() => handleDeleteUser(user.id)}
            >
              Delete
            </button>
          </li>
        ))}
      </ul>
    </div>
  );
}

const styles = {
  container: {
    maxWidth: "500px",
    margin: "50px auto",
    padding: "20px",
    border: "1px solid #ccc",
    borderRadius: "8px",
    boxShadow: "0 4px 10px rgba(0, 0, 0, 0.1)",
  },
  form: {
    display: "flex",
    gap: "10px",
    marginBottom: "20px",
  },
  input: {
    flex: 1,
    padding: "10px",
    border: "1px solid #ccc",
    borderRadius: "5px",
  },
  button: {
    padding: "10px 20px",
    backgroundColor: "#007bff",
    color: "white",
    border: "none",
    borderRadius: "5px",
    cursor: "pointer",
  },
  list: {
    listStyle: "none",
    padding: "0",
  },
  listItem: {
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
    padding: "10px",
    borderBottom: "1px solid #ccc",
  },
  deleteButton: {
    backgroundColor: "#ff4d4d",
    color: "white",
    border: "none",
    padding: "5px 10px",
    borderRadius: "5px",
    cursor: "pointer",
  },
};

export default UserManager;
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –°–µ—Ä–≤–∏—Å–Ω—ã–π –∫–ª–∞—Å—Å `UserDAO`:
   - –ò–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ (CRUD).
   - –ú–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–º–µ–Ω—ë–Ω –Ω–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é —Å API –∏–ª–∏ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
2. React-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç `UserManager`:
   - –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ `UserDAO` –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç `useState` –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —Ñ–æ—Ä–º–æ–π.
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç `useEffect` –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏.
–ò—Ç–æ–≥
1. –ù–∞ JavaScript DAO –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
2. –ù–∞ React —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è UI –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å DAO.
3. DAO –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å REST API –∏–ª–∏ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.

Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ü–æ–ú–∞–ø–∏—Ç—å –∫–ª–∞—Å—Å—ã (map):
---
–ú–∞–ø–ø–∏–Ω–≥ –∫–ª–∞—Å—Å–æ–≤ –Ω–∞ JavaScript –∏ React
–ú–∞–ø–ø–∏–Ω–≥ –∫–ª–∞—Å—Å–æ–≤ ‚Äî —ç—Ç–æ –∑–∞–¥–∞—á–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –∫–ª–∞—Å—Å—ã –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è—Ç—å CSS-–∫–ª–∞—Å—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
1. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ —á–∏—Å—Ç–æ–º JavaScript
–í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã –º–∞–ø–ø–∏–º –∫–ª–∞—Å—Å—ã –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º —Å–ø–∏—Å–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø–æ–ª—É—á–∞–µ—Ç –∫–ª–∞—Å—Å `selected`).
–ö–æ–¥ JavaScript
```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Class Mapping</title>
  <style>
    .item {
      padding: 10px;
      margin: 5px 0;
      border: 1px solid #ccc;
      cursor: pointer;
    }

    .selected {
      background-color: #007bff;
      color: white;
    }

    .highlight {
      font-weight: bold;
    }
  </style>
</head>
<body>
  <ul id="itemList"></ul>

  <script>
    // –î–∞–Ω–Ω—ã–µ
    const items = [
      { id: 1, name: "Item 1", isSelected: false },
      { id: 2, name: "Item 2", isSelected: true },
      { id: 3, name: "Item 3", isSelected: false },
    ];

    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–ø–∏—Å–∫–∞
    const itemList = document.getElementById("itemList");

    // –†–µ–Ω–¥–µ—Ä–∏–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞
    function renderItems() {
      itemList.innerHTML = ""; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä

      items.forEach((item) => {
        const li = document.createElement("li");
        li.textContent = item.name;

        // –ú–∞–ø–ø–∏–º –∫–ª–∞—Å—Å—ã
        li.className = "item";
        if (item.isSelected) li.classList.add("selected");

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
        li.addEventListener("click", () => toggleSelection(item.id));

        itemList.appendChild(li);
      });
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è "isSelected"
    function toggleSelection(id) {
      items.forEach((item) => {
        item.isSelected = item.id === id ? !item.isSelected : false;
      });

      renderItems(); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
    }

    renderItems(); // –ü–µ—Ä–≤–∏—á–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä
  </script>
</body>
</html>
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ JavaScript-–∫–æ–¥–∞
1. –ú–∞–ø–ø–∏–Ω–≥ –∫–ª–∞—Å—Å–æ–≤:
   - –ö –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å `item`.
   - –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤—ã–±—Ä–∞–Ω (`isSelected`), –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫–ª–∞—Å—Å `selected`:
     ```javascript
     if (item.isSelected) li.classList.add("selected");
     ```
2. –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:
   - –ü—Ä–∏ –∫–ª–∏–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ (`isSelected`) –º–µ–Ω—è–µ—Ç—Å—è.
   - –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è `renderItems`, —á—Ç–æ–±—ã –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫.
---
2. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ React
–í React –º–∞–ø–ø–∏–Ω–≥ –∫–ª–∞—Å—Å–æ–≤ —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `classnames` –∏–ª–∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏.
üéØ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫
```jsx
import React, { useState } from "react";

function ClassMapper() {
  const [items, setItems] = useState([
    { id: 1, name: "Item 1", isSelected: false },
    { id: 2, name: "Item 2", isSelected: true },
    { id: 3, name: "Item 3", isSelected: false },
  ]);

  const toggleSelection = (id) => {
    setItems((prevItems) =>
      prevItems.map((item) =>
        item.id === id ? { ...item, isSelected: !item.isSelected } : { ...item, isSelected: false }
      )
    );
  };

  return (
    <ul>
      {items.map((item) => (
        <li
          key={item.id}
          className={`item ${item.isSelected ? "selected" : ""}`}
          onClick={() => toggleSelection(item.id)}
        >
          {item.name}
        </li>
      ))}
    </ul>
  );
}

export default ClassMapper;
```
üéØ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `classnames`
–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É:
```bash
npm install classnames
```
–ò—Å–ø–æ–ª—å–∑—É–µ–º `classnames` –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –º–∞–ø–ø–∏–Ω–≥–∞ –∫–ª–∞—Å—Å–æ–≤:
```jsx
import React, { useState } from "react";
import classNames from "classnames";

function ClassMapper() {
  const [items, setItems] = useState([
    { id: 1, name: "Item 1", isSelected: false },
    { id: 2, name: "Item 2", isSelected: true },
    { id: 3, name: "Item 3", isSelected: false },
  ]);

  const toggleSelection = (id) => {
    setItems((prevItems) =>
      prevItems.map((item) =>
        item.id === id ? { ...item, isSelected: !item.isSelected } : { ...item, isSelected: false }
      )
    );
  };

  return (
    <ul>
      {items.map((item) => (
        <li
          key={item.id}
          className={classNames("item", { selected: item.isSelected })}
          onClick={() => toggleSelection(item.id)}
        >
          {item.name}
        </li>
      ))}
    </ul>
  );
}

export default ClassMapper;
```
---
CSS –¥–ª—è React
```css
.item {
  padding: 10px;
  margin: 5px 0;
  border: 1px solid #ccc;
  cursor: pointer;
}

.selected {
  background-color: #007bff;
  color: white;
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ React-–∫–æ–¥–∞
1. –°–æ—Å—Ç–æ—è–Ω–∏–µ:
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `useState` –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.
2. –ú–∞–ø–ø–∏–Ω–≥ –∫–ª–∞—Å—Å–æ–≤:
   - –ë–µ–∑ `classnames`:
     ```jsx
     className={`item ${item.isSelected ? "selected" : ""}`}
     ```
   - –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `classnames`:
     ```jsx
     classNames("item", { selected: item.isSelected })
     ```
3. –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:
   - `setItems` –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–ø–∏—Å–∫–∞, —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞.
---
–°—Ä–∞–≤–Ω–µ–Ω–∏–µ JavaScript –∏ React
| –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞   | Vanilla JavaScript                             | React                                |
|-----------------------|----------------------------------------------------|------------------------------------------|
| –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö | –†—É—á–Ω–∞—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞ DOM                             | –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `state` –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–Ω–¥–µ—Ä |
| –ú–∞–ø–ø–∏–Ω–≥ –∫–ª–∞—Å—Å–æ–≤   | `classList.add` –∏ `classList.remove`               | –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `className` –∏–ª–∏ `classnames` |
| –ü—Ä–æ—Å—Ç–æ—Ç–∞ –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ | –ë—ã—Å—Ç—Ä–µ–µ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á                     | –ë–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ |

  
Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ –±–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –ø–∞–º—è—Ç–∏ –∏–ª–∏ –∫–∞–Ω—Å—Ç–æ–º–Ω—ã–π –ª–∏–Ω–∫–µ–¥ –ª–∏—Å—Ç, –æ–±—Ö–æ–¥ –≥—Ä–∞—Ñ–∞ –∑–∞ N —Å–ª–æ–∂–Ω–æ—Å—Ç—å:
---
üéØ –†–µ—à–µ–Ω–∏–µ: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–≤—è–∑–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∏ –æ–±—Ö–æ–¥–∞ –≥—Ä–∞—Ñ–∞
–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã —Ç—Ä–∏ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:
1. –ë–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫ (–ø–æ –º–∞—Å—Å–∏–≤—É).
2. –ö–∞—Å—Ç–æ–º–Ω—ã–π —Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫ (Linked List).
3. –û–±—Ö–æ–¥ –≥—Ä–∞—Ñ–∞ –∑–∞ –ª–∏–Ω–µ–π–Ω–æ–µ –≤—Ä–µ–º—è O(N) —Å –ø–æ–º–æ—â—å—é BFS –∏–ª–∏ DFS.
---
1. –ë–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫
–ë–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –º–∞—Å—Å–∏–≤–∞–º, –∏–º–µ–µ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç—å O(log N).
```javascript
function binarySearch(arr, target) {
  let left = 0;
  let right = arr.length - 1;

  while (left <= right) {
    const mid = Math.floor((left + right) / 2);

    if (arr[mid] === target) {
      return mid; // –≠–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω
    }

    if (arr[mid] < target) {
      left = mid + 1; // –ò—â–µ–º –≤ –ø—Ä–∞–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ
    } else {
      right = mid - 1; // –ò—â–µ–º –≤ –ª–µ–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ
    }
  }

  return -1; // –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const sortedArray = [1, 3, 5, 7, 9, 11];
const target = 7;
const result = binarySearch(sortedArray, target);

console.log(result); // –ò–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞: 3
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –ê–ª–≥–æ—Ä–∏—Ç–º:
   - –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ (`mid`).
   - –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å `target`.
   - –°—É–∂–∞–µ–º –æ–±–ª–∞—Å—Ç—å –ø–æ–∏—Å–∫–∞, —É–¥–∞–ª—è—è –ø–æ–ª–æ–≤–∏–Ω—É –º–∞—Å—Å–∏–≤–∞ –Ω–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏.
2. –°–ª–æ–∂–Ω–æ—Å—Ç—å:
   - –í—Ä–µ–º—è: O(log N), —Ç–∞–∫ –∫–∞–∫ –Ω–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –º—ã –¥–µ–ª–∏–º –º–∞—Å—Å–∏–≤ –ø–æ–ø–æ–ª–∞–º.
   - –ü–∞–º—è—Ç—å: O(1), —Ç–∞–∫ –∫–∞–∫ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–∫—É—Ä—Å–∏—è.
---
2. –ö–∞—Å—Ç–æ–º–Ω—ã–π —Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫
–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ `LinkedList`
```javascript
class Node {
  constructor(value) {
    this.value = value;
    this.next = null;
  }
}

class LinkedList {
  constructor() {
    this.head = null;
    this.tail = null;
    this.size = 0;
  }

  // –î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞
  append(value) {
    const newNode = new Node(value);

    if (!this.head) {
      this.head = newNode;
      this.tail = newNode;
    } else {
      this.tail.next = newNode;
      this.tail = newNode;
    }

    this.size++;
  }

  // –£–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç
  delete(value) {
    if (!this.head) return;

    // –£–¥–∞–ª—è–µ–º –≥–æ–ª–æ–≤—É
    if (this.head.value === value) {
      this.head = this.head.next;
      this.size--;
      return;
    }

    let current = this.head;

    while (current.next && current.next.value !== value) {
      current = current.next;
    }

    if (current.next) {
      current.next = current.next.next;
      this.size--;
    }

    if (!current.next) {
      this.tail = current; // –û–±–Ω–æ–≤–ª—è–µ–º —Ö–≤–æ—Å—Ç, –µ—Å–ª–∏ —É–¥–∞–ª—ë–Ω –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç
    }
  }

  // –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞
  find(value) {
    let current = this.head;

    while (current) {
      if (current.value === value) {
        return current;
      }
      current = current.next;
    }

    return null;
  }

  // –ü–µ—á–∞—Ç—å –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  print() {
    const elements = [];
    let current = this.head;

    while (current) {
      elements.push(current.value);
      current = current.next;
    }

    console.log(elements.join(" -> "));
  }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const list = new LinkedList();
list.append(10);
list.append(20);
list.append(30);

list.print(); // 10 -> 20 -> 30

list.delete(20);
list.print(); // 10 -> 30

console.log(list.find(10)); // Node { value: 10, next: Node { ... } }
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –û–ø–µ—Ä–∞—Ü–∏–∏:
   - `append(value)`: –î–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞. –°–ª–æ–∂–Ω–æ—Å—Ç—å O(1).
   - `delete(value)`: –£–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç. –°–ª–æ–∂–Ω–æ—Å—Ç—å O(N) –≤ —Ö—É–¥—à–µ–º —Å–ª—É—á–∞–µ.
   - `find(value)`: –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞. –°–ª–æ–∂–Ω–æ—Å—Ç—å O(N).
2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
   - –°–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª–µ–∑–µ–Ω –¥–ª—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤, –≥–¥–µ —á–∞—Å—Ç–æ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –∏–ª–∏ —É–¥–∞–ª—è—é—Ç—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã.
---
3. –û–±—Ö–æ–¥ –≥—Ä–∞—Ñ–∞ –∑–∞ –ª–∏–Ω–µ–π–Ω–æ–µ –≤—Ä–µ–º—è O(N)
–û–±—Ö–æ–¥ –≥—Ä–∞—Ñ–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º DFS (–≥–ª—É–±–∏–Ω–∞) –∏–ª–∏ BFS (—à–∏—Ä–∏–Ω–∞). –û–±–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –∏–º–µ—é—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç—å O(V + E), –≥–¥–µ:
- V ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ—Ä—à–∏–Ω.
- E ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—ë–±–µ—Ä.
–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ö–æ–¥–∞ –≤ —à–∏—Ä–∏–Ω—É (BFS)
```javascript
function bfs(graph, start) {
  const visited = new Set(); // –ß—Ç–æ–±—ã –Ω–µ –∑–∞—Ö–æ–¥–∏—Ç—å –≤ –æ–¥–Ω—É –≤–µ—Ä—à–∏–Ω—É –¥–≤–∞–∂–¥—ã
  const queue = [start]; // –û—á–µ—Ä–µ–¥—å –¥–ª—è BFS
  const result = [];

  while (queue.length > 0) {
    const current = queue.shift();

    if (!visited.has(current)) {
      visited.add(current);
      result.push(current);

      // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ—Ö —Å–æ—Å–µ–¥–µ–π –≤ –æ—á–µ—Ä–µ–¥—å
      for (const neighbor of graph[current]) {
        if (!visited.has(neighbor)) {
          queue.push(neighbor);
        }
      }
    }
  }

  return result;
}

// –ü—Ä–∏–º–µ—Ä –≥—Ä–∞—Ñ–∞
const graph = {
  1: [2, 3],
  2: [4],
  3: [4, 5],
  4: [],
  5: [6],
  6: [],
};

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const startNode = 1;
console.log(bfs(graph, startNode)); // [1, 2, 3, 4, 5, 6]
```
---
–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ö–æ–¥–∞ –≤ –≥–ª—É–±–∏–Ω—É (DFS)
```javascript
function dfs(graph, start, visited = new Set(), result = []) {
  if (visited.has(start)) return;

  visited.add(start);
  result.push(start);

  for (const neighbor of graph[start]) {
    if (!visited.has(neighbor)) {
      dfs(graph, neighbor, visited, result);
    }
  }

  return result;
}

// –ü—Ä–∏–º–µ—Ä –≥—Ä–∞—Ñ–∞
const graph = {
  1: [2, 3],
  2: [4],
  3: [4, 5],
  4: [],
  5: [6],
  6: [],
};

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const startNode = 1;
console.log(dfs(graph, startNode)); // [1, 2, 4, 3, 5, 6]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ BFS –∏ DFS:
1. BFS (—à–∏—Ä–∏–Ω–∞):
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –æ—á–µ—Ä–µ–¥—å (`queue`) –¥–ª—è –æ–±—Ö–æ–¥–∞.
   - –ü—Ä–æ—Ö–æ–¥–∏—Ç —É—Ä–æ–≤–µ–Ω—å –∑–∞ —É—Ä–æ–≤–Ω–µ–º.
2. DFS (–≥–ª—É–±–∏–Ω–∞):
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–µ–∫—É—Ä—Å–∏—é (–∏–ª–∏ —Å—Ç–µ–∫) –¥–ª—è –æ–±—Ö–æ–¥–∞.
   - –ü—Ä–æ—Ö–æ–¥–∏—Ç –¥–æ –∫–æ–Ω—Ü–∞ –æ–¥–Ω–æ–≥–æ –ø—É—Ç–∏, –∑–∞—Ç–µ–º –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è.
–í—ã–≤–æ–¥
- –ë–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫: –î–ª—è –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤, O(log N).
- –ö–∞—Å—Ç–æ–º–Ω—ã–π —Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫: –ì–∏–±–∫–æ—Å—Ç—å –≤ —Ä–∞–±–æ—Ç–µ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏, O(N) –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ–∏—Å–∫–∞/—É–¥–∞–ª–µ–Ω–∏—è.
- –û–±—Ö–æ–¥ –≥—Ä–∞—Ñ–∞:
  - BFS –∏ DFS –æ–±—Ö–æ–¥—è—Ç –≥—Ä–∞—Ñ –∑–∞ O(V + E).
  - –í—ã–±–æ—Ä –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∑–∞–¥–∞—á–∏ (–ø–æ–∏—Å–∫ –∫—Ä–∞—Ç—á–∞–π—à–µ–≥–æ –ø—É—Ç–∏ ‚Äî BFS, –ø–æ–∏—Å–∫ –ø—É—Ç–µ–π –≤–≥–ª—É–±—å ‚Äî DFS).


Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: !!!–ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≥–ª—É–±–æ–∫–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ —Å –¥–æ–ø —É—Å–ª–æ–≤–∏–µ–º - –≤–Ω—É—Ç—Ä–∏ –µ—Å—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –∏ –∏–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏, —Ç.–µ. –æ–±—ä–µ–∫—Ç - –Ω–µ –¥–µ—Ä–µ–≤–æ:
---
–ì–ª—É–±–æ–∫–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Å —É—á–µ—Ç–æ–º —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫ ‚Äî —ç—Ç–æ —Å–ª–æ–∂–Ω–∞—è –∑–∞–¥–∞—á–∞, –∫–æ—Ç–æ—Ä–∞—è —Ç—Ä–µ–±—É–µ—Ç —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–∂–µ –ø–æ—Å–µ—â—ë–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤. –î–ª—è –µ—ë —Ä–µ—à–µ–Ω–∏—è –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Map –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –∏ –∏–∑–±–µ–≥–∞–Ω–∏—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π —Ä–µ–∫—É—Ä—Å–∏–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function deepClone(obj, map = new Map()) {
  // –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º –∏–ª–∏ –º–∞—Å—Å–∏–≤–æ–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
  if (obj === null || typeof obj !== "object") {
    return obj;
  }

  // –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç —É–∂–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω (—Ü–∏–∫–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞), –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ –∫–æ–ø–∏—é –∏–∑ Map
  if (map.has(obj)) {
    return map.get(obj);
  }

  // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ –º–∞—Å—Å–∏–≤–∞
  const clone = Array.isArray(obj) ? [] : {};

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—ä–µ–∫—Ç –≤ Map, —á—Ç–æ–±—ã —É—á–µ—Å—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏
  map.set(obj, clone);

  // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∫–æ–ø–∏—Ä—É–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞
  for (const key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      clone[key] = deepClone(obj[key], map);
    }
  }

  return clone;
}
// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const obj = {
  a: 1,
  b: {
    c: 2,
    d: 3,
  },
};
obj.b.e = obj; // –¶–∏–∫–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞

const copiedObj = deepClone(obj);
console.log(copiedObj);
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞:
   - –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º –∏–ª–∏ –º–∞—Å—Å–∏–≤–æ–º (`typeof obj !== "object"`), –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–∏–º–∏—Ç–∏–≤—ã –∫–æ–ø–∏—Ä—É—é—Ç—Å—è –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é.
2. –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫:
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `Map`, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã.
   - –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ `Map`, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω–∞—è –∫–æ–ø–∏—è:
     ```javascript
     if (map.has(obj)) {
       return map.get(obj);
     }
     ```
3. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤:
   - –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ö–æ–¥–∏–º –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ —Å –ø–æ–º–æ—â—å—é `for...in` –∏ —Å–æ–∑–¥–∞—ë–º –∏—Ö –∫–æ–ø–∏–∏.
4. –†–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏:
   - –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç ‚Äî –º–∞—Å—Å–∏–≤, —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤:
     ```javascript
     const clone = Array.isArray(obj) ? [] : {};
     ```
5. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–ª–æ–∂–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤:
   - –ö–æ–ø–∏—Ä—É—é—Ç—Å—è —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –º–∞—Å—Å–∏–≤–æ–≤ –ª—é–±–æ–≥–æ —É—Ä–æ–≤–Ω—è –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏, –≤–∫–ª—é—á–∞—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏.
---
–¢–µ—Å—Ç—ã:
–ü—Ä–∏–º–µ—Ä —Å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–º–∏ —Å—Å—ã–ª–∫–∞–º–∏:
```javascript
const obj = { a: 1 };
obj.b = obj; // –¶–∏–∫–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞

const cloned = deepClone(obj);
console.log(cloned); // { a: 1, b: [Circular] }
console.log(cloned.b === cloned); // true
```
–ü—Ä–∏–º–µ—Ä —Å –º–∞—Å—Å–∏–≤–æ–º:
```javascript
const arr = [1, 2, 3];
arr.push(arr); // –¶–∏–∫–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞

const clonedArr = deepClone(arr);
console.log(clonedArr); // [1, 2, 3, [Circular]]
console.log(clonedArr[3] === clonedArr); // true
```
–£–ª—É—á—à–µ–Ω–∏–µ: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ç–∞–∫–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–∞–∫ `Date`, `Set`, `Map`, –º–æ–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é:
```javascript
function deepClone(obj, map = new Map()) {
  if (obj === null || typeof obj !== "object") {
    return obj;
  }

  if (map.has(obj)) {
    return map.get(obj);
  }

  // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
  if (obj instanceof Date) {
    return new Date(obj);
  }

  if (obj instanceof Map) {
    const clonedMap = new Map();
    map.set(obj, clonedMap);
    for (const [key, value] of obj.entries()) {
      clonedMap.set(deepClone(key, map), deepClone(value, map));
    }
    return clonedMap;
  }

  if (obj instanceof Set) {
    const clonedSet = new Set();
    map.set(obj, clonedSet);
    for (const value of obj.values()) {
      clonedSet.add(deepClone(value, map));
    }
    return clonedSet;
  }

  const clone = Array.isArray(obj) ? [] : {};
  map.set(obj, clone);

  for (const key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      clone[key] = deepClone(obj[key], map);
    }
  }

  return clone;
}
```
---
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å `Map` –∏ `Set`
```javascript
const complexObj = {
  date: new Date(),
  map: new Map([[1, "one"]]),
  set: new Set([1, 2, 3]),
};
complexObj.self = complexObj; // –¶–∏–∫–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞

const clonedComplexObj = deepClone(complexObj);
console.log(clonedComplexObj);
console.log(clonedComplexObj.map.get(1)); // "one"
console.log(clonedComplexObj.set.has(2)); // true
console.log(clonedComplexObj.self === clonedComplexObj); // true
```
–ò—Ç–æ–≥
- –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:
  - –ì–ª—É–±–æ–∫–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –º–∞—Å—Å–∏–≤–æ–≤.
  - –¶–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏.
  - –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã: `Date`, `Set`, `Map`.
- –†–µ—à–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª—é–±—ã–º–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, `RegExp`, —ç—Ç–æ –ª–µ–≥–∫–æ —Å–¥–µ–ª–∞—Ç—å.

Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –í —Ü–∏–∫–ª–µ –ø–µ—Ä–µ–ª–æ–∂–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã, –º–µ–Ω—è—è –ø–µ—Ä–≤—ã–µ —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏. (—Ñ–∏–ª—å—Ç—Ä-–æ—Ç—Å–µ–≤ –∫–∞–Ω–¥–∏—Ç–∞—Ç–æ–≤):
---
‚åõ –ó–∞–¥–∞—á–∞: –ü–µ—Ä–µ–ª–æ–∂–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ —Ç–∞–∫, —á—Ç–æ–±—ã –ø–µ—Ä–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç–∞–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏, –∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ ‚Äî –ø–µ—Ä–≤—ã–º–∏.
üéØ –†–µ—à–µ–Ω–∏–µ –Ω–∞ Vanilla JavaScript
```javascript
function reverseArray(arr) {
  const length = arr.length;
  for (let i = 0; i < length / 2; i++) {
    // –ú–µ–Ω—è–µ–º –ø–µ—Ä–≤—ã–π –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç—ã
    const temp = arr[i];
    arr[i] = arr[length - 1 - i];
    arr[length - 1 - i] = temp;
  }
  return arr;
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const array = [1, 2, 3, 4, 5];
console.log("–ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤:", array);
console.log("–ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", reverseArray(array));
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –ò—Ç–µ—Ä–∞—Ü–∏—è –¥–æ —Å–µ—Ä–µ–¥–∏–Ω—ã –º–∞—Å—Å–∏–≤–∞:
   - –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ü–∏–∫–ª `for` —Å —É—Å–ª–æ–≤–∏–µ–º `i < length / 2`, —á—Ç–æ–±—ã –æ–±–º–µ–Ω–∏–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Ç–æ–ª—å–∫–æ –¥–æ —Å–µ—Ä–µ–¥–∏–Ω—ã –º–∞—Å—Å–∏–≤–∞.
   - –≠—Ç–æ –∏—Å–∫–ª—é—á–∞–µ—Ç –ª–∏—à–Ω–∏–µ –æ–±–º–µ–Ω—ã, —Ç. –∫. —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ –Ω–µ —Ç—Ä–µ–±—É—é—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π.
2. –û–±–º–µ–Ω —ç–ª–µ–º–µ–Ω—Ç–æ–≤:
   - –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é `temp` –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞:
     ```javascript
     const temp = arr[i];
     arr[i] = arr[length - 1 - i];
     arr[length - 1 - i] = temp;
     ```
3. –†–µ–∑—É–ª—å—Ç–∞—Ç:
   - –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–µ–Ω—è–µ—Ç—Å—è –º–µ—Å—Ç–∞–º–∏ —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º, –≤—Ç–æ—Ä–æ–π ‚Äî —Å –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–º, –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.
---
üéØ –†–µ—à–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `reverse`:
```javascript
const array = [1, 2, 3, 4, 5];
const reversedArray = array.reverse();
console.log("–ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", reversedArray);
```
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤.
---
üéØ –ü—Ä–∏–º–µ—Ä –¥–ª—è —Å—Ç—Ä–æ–∫
–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–æ–∫—É:
```javascript
function reverseString(str) {
  return str.split("").reverse().join("");
}

console.log(reverseString("hello")); // "olleh"
```
---------------------------------------------------------------------------------------------  
