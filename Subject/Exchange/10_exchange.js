--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ó–∞–¥–∞—á–∞ ¬´–†–∞–∑–º–µ–Ω¬ª:
---
üîü –ó–∞–¥–∞—á–∞: –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–∞–∑–º–µ–Ω–∞ —Å—É–º–º—ã
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–∞–∑–º–µ–Ω–∞ —Å—É–º–º—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–æ–Ω–µ—Ç.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function getChangeCombinations(amount, coins) {
  const dp = Array(amount + 1).fill(null).map(() => []);
  dp[0] = [[]]; // –î–ª—è —Å—É–º–º—ã 0 –µ—Å—Ç—å 1 —Å–ø–æ—Å–æ–± (–Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ–Ω–µ—Ç—ã).

  for (let coin of coins) {
    for (let i = coin; i <= amount; i++) {
      for (let combination of dp[i - coin]) {
        dp[i].push([...combination, coin]);
      }
    }
  }

  return dp[amount];
}

console.log(getChangeCombinations(5, [1, 2, 5])); // [[1, 1, 1, 1, 1], [2, 2], [5]]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–∞–∑–º–µ–Ω–∞ —Å—É–º–º—ã —Å –ø–æ–º–æ—â—å—é –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏.
–≠—Ç–∏ –∑–∞–¥–∞—á–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ –ø–æ–¥–æ–π—Ç–∏ –∫ —Ä–µ—à–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º—ã —Ä–∞–∑–º–µ–Ω–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ä–∞–∑–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥–æ–≤, –≤–∫–ª—é—á–∞—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, —Ä–µ–∫—É—Ä—Å–∏—é, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –∏ –¥—Ä—É–≥–∏–µ.
--------------------------------------------------------------------------------------------- 
