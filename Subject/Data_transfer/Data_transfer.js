Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ü–µ—Ä–µ–ª–æ–∂–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é:
---
‚åõ –ó–∞–¥–∞—á–∞: –ü–µ—Ä–µ–ª–æ–∂–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ–¥–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –¥—Ä—É–≥—É—é
üéØ –†–µ—à–µ–Ω–∏–µ: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤–∫–ª—é—á–∞–µ—Ç:
1. –ù–∞ —á–∏—Å—Ç–æ–º JavaScript (Vanilla): –†–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏, –æ–±—ä–µ–∫—Ç–∞–º–∏ –∏–ª–∏ –¥—Ä—É–≥–∏–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö.
2. –ù–∞ React: –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è (`useState`) –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.
---
1. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ JavaScript
–ü—Ä–∏–º–µ—Ä 1. –ü–µ—Ä–µ–Ω–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏–∑ –º–∞—Å—Å–∏–≤–∞ –≤ –º–∞—Å—Å–∏–≤
```javascript
function transferData(source, destination) {
  while (source.length > 0) {
    // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Ü–µ–ª–µ–≤–æ–π
    const item = source.shift();
    destination.push(item);
  }
}

const sourceArray = [1, 2, 3, 4, 5];
const destinationArray = [];

transferData(sourceArray, destinationArray);

console.log("Source:", sourceArray);       // []
console.log("Destination:", destinationArray); // [1, 2, 3, 4, 5]
```
---
–ü—Ä–∏–º–µ—Ä 2. –ü–µ—Ä–µ–Ω–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –≤ –æ–±—ä–µ–∫—Ç
```javascript
function transferObjectData(source, destination) {
  for (const key in source) {
    if (source.hasOwnProperty(key)) {
      destination[key] = source[key];
      delete source[key]; // –£–¥–∞–ª—è–µ–º –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    }
  }
}

const sourceObject = { a: 1, b: 2, c: 3 };
const destinationObject = {};

transferObjectData(sourceObject, destinationObject);

console.log("Source:", sourceObject);       // {}
console.log("Destination:", destinationObject); // { a: 1, b: 2, c: 3 }
```
---
–ü—Ä–∏–º–µ—Ä 3. –ü–µ—Ä–µ–Ω–æ—Å –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º
```javascript
function transferAndTransform(source, destination, transformFn) {
  while (source.length > 0) {
    const item = source.shift();
    destination.push(transformFn(item)); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —ç–ª–µ–º–µ–Ω—Ç –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º
  }
}

const sourceArray = [1, 2, 3, 4, 5];
const destinationArray = [];

// –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ 10 –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–Ω–æ—Å–æ–º
transferAndTransform(sourceArray, destinationArray, (x) => x + 10);

console.log("Source:", sourceArray);       // []
console.log("Destination:", destinationArray); // [11, 12, 13, 14, 15]
```
---
2. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ React
–í React –ø–µ—Ä–µ–Ω–æ—Å –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è (`useState`).
–ü—Ä–∏–º–µ—Ä 1. –ü–µ—Ä–µ–Ω–æ—Å —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ –æ–¥–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –≤ –¥—Ä—É–≥–æ–π
```jsx
import React, { useState } from "react";

function TransferList() {
  const [source, setSource] = useState([1, 2, 3, 4, 5]);
  const [destination, setDestination] = useState([]);

  const transferItem = () => {
    if (source.length > 0) {
      const item = source[0];
      setSource(source.slice(1)); // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
      setDestination([...destination, item]); // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ —Ü–µ–ª–µ–≤–æ–π —Å–ø–∏—Å–æ–∫
    }
  };

  return (
    <div>
      <h3>Source List</h3>
      <ul>
        {source.map((item, index) => (
          <li key={index}>{item}</li>
        ))}
      </ul>
      <h3>Destination List</h3>
      <ul>
        {destination.map((item, index) => (
          <li key={index}>{item}</li>
        ))}
      </ul>
      <button onClick={transferItem}>Transfer Next Item</button>
    </div>
  );
}

export default TransferList;
```
---
–ü—Ä–∏–º–µ—Ä 2. –ü–µ—Ä–µ–Ω–æ—Å –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
```jsx
import React, { useState } from "react";

function TransferAll() {
  const [source, setSource] = useState(["Apple", "Banana", "Cherry"]);
  const [destination, setDestination] = useState([]);

  const transferAllItems = () => {
    setDestination([...destination, ...source]); // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    setSource([]); // –û—á–∏—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Å–ø–∏—Å–æ–∫
  };

  return (
    <div>
      <h3>Source List</h3>
      <ul>
        {source.map((item, index) => (
          <li key={index}>{item}</li>
        ))}
      </ul>
      <h3>Destination List</h3>
      <ul>
        {destination.map((item, index) => (
          <li key={index}>{item}</li>
        ))}
      </ul>
      <button onClick={transferAllItems}>Transfer All Items</button>
    </div>
  );
}

export default TransferAll;
```
---
–ü—Ä–∏–º–µ—Ä 3. –ü–µ—Ä–µ–Ω–æ—Å —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –ø–æ –∫–ª–∏–∫—É
```jsx
import React, { useState } from "react";

function TransferOnClick() {
  const [source, setSource] = useState([1, 2, 3, 4, 5]);
  const [destination, setDestination] = useState([]);

  const transferItem = (item) => {
    setSource(source.filter((i) => i !== item)); // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    setDestination([...destination, item]); // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ü–µ–ª–µ–≤–æ–π —Å–ø–∏—Å–æ–∫
  };

  return (
    <div>
      <h3>Source List</h3>
      <ul>
        {source.map((item, index) => (
          <li key={index}>
            {item}{" "}
            <button onClick={() => transferItem(item)}>Transfer</button>
          </li>
        ))}
      </ul>
      <h3>Destination List</h3>
      <ul>
        {destination.map((item, index) => (
          <li key={index}>{item}</li>
        ))}
      </ul>
    </div>
  );
}

export default TransferOnClick;
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ React-–∫–æ–¥–æ–≤
1. –°–æ—Å—Ç–æ—è–Ω–∏–µ:
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `useState` –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π (`source` –∏ `destination`).
   - –ü–µ—Ä–µ–Ω–æ—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —ç—Ç–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π.
2. –ú–µ—Ç–æ–¥—ã:
   - –í –ø–µ—Ä–≤–æ–º –ø—Ä–∏–º–µ—Ä–µ: –ø–æ –æ–¥–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –∏–∑ `source` –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –≤ `destination`.
   - –í–æ –≤—Ç–æ—Ä–æ–º –ø—Ä–∏–º–µ—Ä–µ: –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ `source` –ø–µ—Ä–µ–º–µ—â–∞—é—Ç—Å—è –≤ `destination` –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º.
   - –í —Ç—Ä–µ—Ç—å–µ–º –ø—Ä–∏–º–µ—Ä–µ: —ç–ª–µ–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–Ω–æ—Å—è—Ç—Å—è —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –ø–æ –∫–ª–∏–∫—É.
3. –†–µ–Ω–¥–µ—Ä–∏–Ω–≥:
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–µ—Ç–æ–¥ `map` –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–≤.

Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –í —Ü–∏–∫–ª–µ –ø–µ—Ä–µ–ª–æ–∂–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã, –º–µ–Ω—è—è –ø–µ—Ä–≤—ã–µ —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏. (—Ñ–∏–ª—å—Ç—Ä-–æ—Ç—Å–µ–≤ –∫–∞–Ω–¥–∏—Ç–∞—Ç–æ–≤):
---
‚åõ –ó–∞–¥–∞—á–∞: –ü–µ—Ä–µ–ª–æ–∂–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ —Ç–∞–∫, —á—Ç–æ–±—ã –ø–µ—Ä–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç–∞–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏, –∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ ‚Äî –ø–µ—Ä–≤—ã–º–∏.
üéØ –†–µ—à–µ–Ω–∏–µ –Ω–∞ Vanilla JavaScript
```javascript
function reverseArray(arr) {
  const length = arr.length;
  for (let i = 0; i < length / 2; i++) {
    // –ú–µ–Ω—è–µ–º –ø–µ—Ä–≤—ã–π –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç—ã
    const temp = arr[i];
    arr[i] = arr[length - 1 - i];
    arr[length - 1 - i] = temp;
  }
  return arr;
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const array = [1, 2, 3, 4, 5];
console.log("–ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤:", array);
console.log("–ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", reverseArray(array));
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –ò—Ç–µ—Ä–∞—Ü–∏—è –¥–æ —Å–µ—Ä–µ–¥–∏–Ω—ã –º–∞—Å—Å–∏–≤–∞:
   - –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ü–∏–∫–ª `for` —Å —É—Å–ª–æ–≤–∏–µ–º `i < length / 2`, —á—Ç–æ–±—ã –æ–±–º–µ–Ω–∏–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Ç–æ–ª—å–∫–æ –¥–æ —Å–µ—Ä–µ–¥–∏–Ω—ã –º–∞—Å—Å–∏–≤–∞.
   - –≠—Ç–æ –∏—Å–∫–ª—é—á–∞–µ—Ç –ª–∏—à–Ω–∏–µ –æ–±–º–µ–Ω—ã, —Ç. –∫. —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ –Ω–µ —Ç—Ä–µ–±—É—é—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π.
2. –û–±–º–µ–Ω —ç–ª–µ–º–µ–Ω—Ç–æ–≤:
   - –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é `temp` –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞:
     ```javascript
     const temp = arr[i];
     arr[i] = arr[length - 1 - i];
     arr[length - 1 - i] = temp;
     ```
3. –†–µ–∑—É–ª—å—Ç–∞—Ç:
   - –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–µ–Ω—è–µ—Ç—Å—è –º–µ—Å—Ç–∞–º–∏ —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º, –≤—Ç–æ—Ä–æ–π ‚Äî —Å –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–º, –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.
---
üéØ –†–µ—à–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `reverse`:
```javascript
const array = [1, 2, 3, 4, 5];
const reversedArray = array.reverse();
console.log("–ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", reversedArray);
```
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤.
---
üéØ –ü—Ä–∏–º–µ—Ä –¥–ª—è —Å—Ç—Ä–æ–∫
–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–æ–∫—É:
```javascript
function reverseString(str) {
  return str.split("").reverse().join("");
}

console.log(reverseString("hello")); // "olleh"
```
---------------------------------------------------------------------------------------------  
