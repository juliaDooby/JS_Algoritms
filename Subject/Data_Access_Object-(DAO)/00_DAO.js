---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å DAO –¥–∞–æ—à–∫—É:
---
0.
üéØ –†–µ—à–µ–Ω–∏–µ: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è DAO (Data Access Object)
DAO (Data Access Object) ‚Äî —ç—Ç–æ —à–∞–±–ª–æ–Ω –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏. –û–Ω –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, —Ñ–∞–π–ª–∞–º –∏–ª–∏ –¥—Ä—É–≥–∏–º —Ö—Ä–∞–Ω–∏–ª–∏—â–∞–º –¥–∞–Ω–Ω—ã—Ö.
–ú—ã —Ä–µ–∞–ª–∏–∑—É–µ–º DAO-—à–∫—É, –∫–æ—Ç–æ—Ä–∞—è:
1. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è —á—Ç–µ–Ω–∏—è, —Å–æ–∑–¥–∞–Ω–∏—è, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.
2. –ê–±—Å—Ç—Ä–∞–≥–∏—Ä—É–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö (–ª–æ–∫–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤, API, –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö).
---
1. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è DAO –Ω–∞ JavaScript (Vanilla)
–ö–æ–¥
```javascript
class UserDAO {
  constructor() {
    this.users = []; // –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö (–º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ API/–ë–î)
    this.nextId = 1; // –°—á—ë—Ç—á–∏–∫ –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID
  }

  // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  getAllUsers() {
    return this.users;
  }

  // –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
  getUserById(id) {
    return this.users.find((user) => user.id === id) || null;
  }

  // –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  addUser(user) {
    const newUser = { id: this.nextId++, ...user };
    this.users.push(newUser);
    return newUser;
  }

  // –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
  updateUser(id, updatedFields) {
    const user = this.getUserById(id);
    if (!user) return null;

    Object.assign(user, updatedFields);
    return user;
  }

  // –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
  deleteUser(id) {
    const index = this.users.findIndex((user) => user.id === id);
    if (index === -1) return false;

    this.users.splice(index, 1);
    return true;
  }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const userDAO = new UserDAO();

// –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
userDAO.addUser({ name: "Alice", age: 25 });
userDAO.addUser({ name: "Bob", age: 30 });

// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
console.log("–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:", userDAO.getAllUsers());

// –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
userDAO.updateUser(1, { age: 26 });
console.log("–û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", userDAO.getUserById(1));

// –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
userDAO.deleteUser(2);
console.log("–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è:", userDAO.getAllUsers());
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä:
   - –°–æ–∑–¥–∞—ë—Ç—Å—è –º–∞—Å—Å–∏–≤ `users` –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
   - `nextId` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤.
2. –ú–µ—Ç–æ–¥—ã:
   - `getAllUsers`: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
   - `getUserById`: –ò—â–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID.
   - `addUser`: –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
   - `updateUser`: –û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
   - `deleteUser`: –£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
--------------------------------------------------------------------------------------------- 
