--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ê–ª–≥–æ—Ä–∏—Ç–º—ã ¬´–†–∞–∑–¥–µ–ª—è–π –∏ –≤–ª–∞—Å—Ç–≤—É–π¬ª:
---
4. –ó–∞–¥–∞—á–∞: –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –Ω–∞ —á–∞—Å—Ç–∏
‚åõ –ó–∞–¥–∞—á–∞: –†–∞–∑–¥–µ–ª–∏—Ç—å –º–∞—Å—Å–∏–≤ –Ω–∞ –¥–≤–∞ –ø–æ–¥–º–∞—Å—Å–∏–≤–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ä–∞–∑–Ω–∏—Ü–µ–π –≤ –∏—Ö —Å—É–º–º–∞—Ö.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function minDifferencePartition(arr) {
    const totalSum = arr.reduce((sum, num) => sum + num, 0);
    const target = Math.floor(totalSum / 2);
    const dp = Array(arr.length + 1).fill(null).map(() => Array(target + 1).fill(false));
    dp[0][0] = true;

    for (let i = 1; i <= arr.length; i++) {
        for (let j = 0; j <= target; j++) {
            dp[i][j] = dp[i - 1][j];
            if (j >= arr[i - 1]) dp[i][j] = dp[i][j] || dp[i - 1][j - arr[i - 1]];
        }
    }

    for (let j = target; j >= 0; j--) {
        if (dp[arr.length][j]) {
            return totalSum - 2 * j;
        }
    }
}

console.log(minDifferencePartition([1, 2, 3, 9])); // –í—ã–≤–æ–¥–∏—Ç 3
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –≠—Ç–æ –∑–∞–¥–∞—á–∞ —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –Ω–æ –æ–Ω–∞ —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø "—Ä–∞–∑–¥–µ–ª—è–π –∏ –≤–ª–∞—Å—Ç–≤—É–π". –ú—ã –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–æ, —Å—É–º–º–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –∫–∞–∫ –º–æ–∂–Ω–æ –±–ª–∏–∂–µ –∫ –ø–æ–ª–æ–≤–∏–Ω–µ –æ–±—â–µ–π —Å—É–º–º—ã.
--------------------------------------------------------------------------------------------- 
