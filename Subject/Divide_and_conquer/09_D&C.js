--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ê–ª–≥–æ—Ä–∏—Ç–º—ã ¬´–†–∞–∑–¥–µ–ª—è–π –∏ –≤–ª–∞—Å—Ç–≤—É–π¬ª:
---
9. –ó–∞–¥–∞—á–∞: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–π –ø–æ–¥–º–∞—Ç—Ä–∏—Ü—ã
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–π –ø–æ–¥–º–∞—Ç—Ä–∏—Ü—ã –≤ –¥–≤—É–º–µ—Ä–Ω–æ–º –º–∞—Å—Å–∏–≤–µ.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function maxSumSubMatrix(matrix) {
    let maxSum = -Infinity;
    let n = matrix.length;
    let m = matrix[0].length;

    for (let top = 0; top < n; top++) {

 let temp = Array(m).fill(0);
        for (let bottom = top; bottom < n; bottom++) {
            for (let i = 0; i < m; i++) {
                temp[i] += matrix[bottom][i];
            }
            maxSum = Math.max(maxSum, maxSubArraySum(temp));
        }
    }

    return maxSum;
}

function maxSubArraySum(arr) {
    let max = -Infinity, sum = 0;
    for (let num of arr) {
        sum = Math.max(num, sum + num);
        max = Math.max(max, sum);
    }
    return max;
}

console.log(maxSumSubMatrix([[1, -2, 1], [1, -1, 3], [3, 1, -1]])); // –í—ã–≤–æ–¥–∏—Ç 5
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ê–ª–≥–æ—Ä–∏—Ç–º —Å–Ω–∞—á–∞–ª–∞ —Å—É–º–º–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫–∏ –∏ –∑–∞—Ç–µ–º –ø—Ä–∏–º–µ–Ω—è–µ—Ç –º–µ—Ç–æ–¥ –ø–æ–∏—Å–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã –ø–æ–¥–º–∞—Å—Å–∏–≤–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –≤–æ–∑–º–æ–∂–Ω–æ–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤ –¥–≤—É–º–µ—Ä–Ω–æ–º –º–∞—Å—Å–∏–≤–µ.
–ê–ª–≥–æ—Ä–∏—Ç–º—ã "–†–∞–∑–¥–µ–ª—è–π –∏ –≤–ª–∞—Å—Ç–≤—É–π" —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–µ—à–∞—é—Ç –∑–∞–¥–∞—á–∏, —Ä–∞–∑–¥–µ–ª—è—è –ø—Ä–æ–±–ª–µ–º—É –Ω–∞ –º–µ–Ω—å—à–∏–µ –ø–æ–¥–∑–∞–¥–∞—á–∏ –∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è –∏—Ö.
--------------------------------------------------------------------------------------------- 
