---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ü–æ–∏—Å–∫ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ:
---
19. –ú–µ—Ç–æ–¥ `map()` + `join()` (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è)
‚åõ –ó–∞–¥–∞—á–∞: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –ª–∏ `needle` –≤ `haystack`, –∏—Å–ø–æ–ª—å–∑—É—è `map()` –∏ `join()`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function checkSubstringMapJoin(haystack, needle) {
    return haystack.split("").map((char, i) => haystack.slice(i, i + needle.length)).join(" ").includes(needle);
}

console.log(checkSubstringMapJoin("hello world", "world")); // true
console.log(checkSubstringMapJoin("hello world", "abc"));   // false
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- `split("")` –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤.
- `map()` —Å–æ–∑–¥–∞–µ—Ç –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–æ–¥—Å—Ç—Ä–æ–∫ –¥–ª–∏–Ω—ã `needle.length`.
- `join(" ")` —Å–æ–µ–¥–∏–Ω—è–µ—Ç –∏—Ö –≤ —Å—Ç—Ä–æ–∫—É.
- `includes(needle)` –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∏—Å–∫–æ–º–æ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏.
---
–í—ã–≤–æ–¥:
1. `search()` –∏ `match()` —É–¥–æ–±–Ω—ã –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π.
2. `slice()` –ø–æ–º–æ–≥–∞–µ—Ç –æ–±–æ–π—Ç–∏—Å—å –±–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –ø–æ–∏—Å–∫–∞.
3. `split()` –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω, –Ω–æ –Ω–µ —Å–∞–º—ã–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π.
4. `map() + join()` ‚Äî –∑–∞–±–∞–≤–Ω—ã–π, –Ω–æ –Ω–µ—Ç–∏–ø–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–±.
---------------------------------------------------------------------------------------------
