---------------------------------------------------------------------------------------------
üìå [–ü—Ä–æ—Å—Ç—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã]:
---------------------
‚ãô ‚ùç –ü–æ–∏—Å–∫ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ:
---
12. –ê–ª–≥–æ—Ä–∏—Ç–º –¥–≤—É—Ö —É–∫–∞–∑–∞—Ç–µ–ª–µ–π (Brute Force)
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è `needle` –≤ `haystack` –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function bruteForceSearch(haystack, needle) {
    let n = haystack.length;
    let m = needle.length;

    for (let i = 0; i <= n - m; i++) {
        let j = 0;
        while (j < m && haystack[i + j] === needle[j]) {
            j++;
        }
        if (j === m) return i;
    }

    return -1;
}

console.log(bruteForceSearch("hello world", "world")); // 6
console.log(bruteForceSearch("hello world", "abc"));   // -1
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ `haystack` –æ—Ç `i = 0` –¥–æ `i = N - M`.
2. –î–ª—è –∫–∞–∂–¥–æ–≥–æ `i` –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ `needle` —Å `haystack[i ... i+M]`.
3. –ï—Å–ª–∏ –Ω–∞—à–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º `i`.
4. –†–∞–±–æ—Ç–∞–µ—Ç –∑–∞ O(N * M) –≤ —Ö—É–¥—à–µ–º —Å–ª—É—á–∞–µ.
---------------------------------------------------------------------------------------------
