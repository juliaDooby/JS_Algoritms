---------------------------------------------------------------------------------------------
üìå [–ü—Ä–æ—Å—Ç—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã]:
---------------------
‚ãô ‚ùç –ü–æ–∏—Å–∫ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ:
---
17. –ú–µ—Ç–æ–¥ `slice()` + —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è `needle` –≤ `haystack`, –∏—Å–ø–æ–ª—å–∑—É—è `slice()`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function sliceSearch(haystack, needle) {
    let n = haystack.length;
    let m = needle.length;

    for (let i = 0; i <= n - m; i++) {
        if (haystack.slice(i, i + m) === needle) {
            return i;
        }
    }

    return -1;
}

console.log(sliceSearch("hello world", "world")); // 6
console.log(sliceSearch("hello world", "abc"));   // -1
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –í–º–µ—Å—Ç–æ –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º `slice(i, i + m)`.
- –†–∞–±–æ—Ç–∞–µ—Ç –∑–∞ O(N * M) –≤ —Ö—É–¥—à–µ–º —Å–ª—É—á–∞–µ.
---------------------------------------------------------------------------------------------
