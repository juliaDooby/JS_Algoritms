---------------------------------------------------------------------------------------------
‚ãô ‚ùç –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö:
---
7Ô∏è‚É£ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ—á–µ—Ä–µ–¥—å: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ—á–µ—Ä–µ–¥–∏ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—É—é –æ—á–µ—Ä–µ–¥—å —Å –º–µ—Ç–æ–¥–∞–º–∏ `enqueue` –∏ `dequeue`, –≥–¥–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –±–æ–ª—å—à–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —Ä–∞–Ω—å—à–µ.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
class PriorityQueue {
  constructor() {
    this.items = [];
  }

  enqueue(element, priority) {
    const newNode = { element, priority };
    if (this.items.length === 0) {
      this.items.push(newNode);
    } else {
      let added = false;
      for (let i = 0; i < this.items.length; i++) {
        if (newNode.priority > this.items[i].priority) {
          this.items.splice(i, 0, newNode);
          added = true;
          break;
        }
      }
      if (!added) {
        this.items.push(newNode);
      }
    }
  }

  dequeue() {
    return this.items.shift();
  }

  peek() {
    return this.items[0];
  }
}

const pq = new PriorityQueue();
pq.enqueue('task1', 1);
pq.enqueue('task2', 3);
pq.enqueue('task3', 2);
console.log(pq.peek()); // { element: 'task2', priority: 3 }
pq.dequeue();
console.log(pq.peek()); // { element: 'task3', priority: 2 }
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ—á–µ—Ä–µ–¥—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É. –ú–µ—Ç–æ–¥ `enqueue` –¥–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –≤ –æ—á–µ—Ä–µ–¥—å —Å —É—á—ë—Ç–æ–º –µ–≥–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞.
---------------------------------------------------------------------------------------------
