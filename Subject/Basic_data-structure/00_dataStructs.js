---------------------------------------------------------------------------------------------
‚ãô ‚ùç –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö:
---
–≠—Ç–∏ –∑–∞–¥–∞—á–∏ –ø–æ–º–æ–≥—É—Ç –≤–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Ç–∞–∫–∏–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö, –∫–∞–∫ –º–∞—Å—Å–∏–≤—ã, —Å—Ç–µ–∫–∏, –æ—á–µ—Ä–µ–¥–∏, –º–Ω–æ–∂–µ—Å—Ç–≤–∞, —Å–ª–æ–≤–∞—Ä–∏ (–æ–±—ä–µ–∫—Ç—ã), –¥–≤—É—Å–≤—è–∑–Ω—ã–µ –∏ –æ–¥–Ω–æ—Å–≤—è–∑–Ω—ã–µ —Å–ø–∏—Å–∫–∏.
1Ô∏è‚É£ –†–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏: –°—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—É–º–º—É.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function sumArray(arr) {
  return arr.reduce((acc, val) => acc + val, 0);
}

console.log(sumArray([1, 2, 3, 4, 5])); // 15
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ `reduce()` –¥–ª—è —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞. –û–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä –∏ —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç. –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä —Ä–∞–≤–µ–Ω 0.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö:
---
2Ô∏è‚É£ –°—Ç–µ–∫: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–µ–∫–∞
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å—Ç–µ–∫ —Å –º–µ—Ç–æ–¥–∞–º–∏ `push`, `pop` –∏ `peek` (–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–µ—Ä—Ö–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç).
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
class Stack {
  constructor() {
    this.items = [];
  }

  push(element) {
    this.items.push(element);
  }

  pop() {
    return this.items.pop();
  }

  peek() {
    return this.items[this.items.length - 1];
  }

  isEmpty() {
    return this.items.length === 0;
  }
}

const stack = new Stack();
stack.push(10);
stack.push(20);
console.log(stack.peek()); // 20
stack.pop();
console.log(stack.peek()); // 10
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –°—Ç–µ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É LIFO (–ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ—à—ë–ª ‚Äî –ø–µ—Ä–≤—ã–π –≤—ã—à–µ–ª). –ú—ã —Ä–µ–∞–ª–∏–∑—É–µ–º –º–µ—Ç–æ–¥—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, —É–¥–∞–ª–µ–Ω–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ—Ä—Ö–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö:
---
3Ô∏è‚É£ –û—á–µ—Ä–µ–¥—å: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ—á–µ—Ä–µ–¥–∏
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –æ—á–µ—Ä–µ–¥—å —Å –º–µ—Ç–æ–¥–∞–º–∏ `enqueue`, `dequeue`, `peek`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
class Queue {
  constructor() {
    this.items = [];
  }

  enqueue(element) {
    this.items.push(element);
  }

  dequeue() {
    return this.items.shift();
  }

  peek() {
    return this.items[0];
  }

  isEmpty() {
    return this.items.length === 0;
  }
}

const queue = new Queue();
queue.enqueue(10);
queue.enqueue(20);
console.log(queue.peek()); // 10
queue.dequeue();
console.log(queue.peek()); // 20
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –û—á–µ—Ä–µ–¥—å —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É FIFO (–ø–µ—Ä–≤—ã–π –≤–æ—à—ë–ª ‚Äî –ø–µ—Ä–≤—ã–π –≤—ã—à–µ–ª). –ú—ã –¥–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü –æ—á–µ—Ä–µ–¥–∏ –∏ —É–¥–∞–ª—è–µ–º –∏–∑ –Ω–∞—á–∞–ª–∞.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö:
---
4Ô∏è‚É£ –ú–Ω–æ–∂–µ—Å—Ç–≤–æ: –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function getUnique(arr) {
  return [...new Set(arr)];
}

console.log(getUnique([1, 2, 2, 3, 4, 4, 5])); // [1, 2, 3, 4, 5]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú–Ω–æ–∂–µ—Å—Ç–≤–æ (`Set`) –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç—ã. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö:
---
5Ô∏è‚É£ –°–ª–æ–≤–∞—Ä—å (–û–±—ä–µ–∫—Ç): –ü–æ–¥—Å—á—ë—Ç —á–∞—Å—Ç–æ—Ç—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç —á–∞—Å—Ç–æ—Ç—É –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function countFrequency(arr) {
  let frequency = {};
  arr.forEach(item => {
    frequency[item] = (frequency[item] || 0) + 1;
  });
  return frequency;
}

console.log(countFrequency([1, 2, 2, 3, 3, 3])); // {1: 1, 2: 2, 3: 3}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç –∫–∞–∫ —Å–ª–æ–≤–∞—Ä—å, –≥–¥–µ –∫–ª—é—á–∏ ‚Äî —ç—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏—è ‚Äî —ç—Ç–æ –∏—Ö —á–∞—Å—Ç–æ—Ç–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è. –í —Ü–∏–∫–ª–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö:
---
6Ô∏è‚É£ –û–¥–Ω–æ—Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –æ–¥–Ω–æ—Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏ –¥–æ–±–∞–≤—å—Ç–µ —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
class Node {
  constructor(data) {
    this.data = data;
    this.next = null;
  }
}

class SinglyLinkedList {
  constructor() {
    this.head = null;
  }

  add(value) {
    const newNode = new Node(value);
    if (this.head === null) {
      this.head = newNode;
    } else {
      let current = this.head;
      while (current.next !== null) {
        current = current.next;
      }
      current.next = newNode;
    }
  }

  print() {
    let current = this.head;
    let result = '';
    while (current !== null) {
      result += current.data + ' -> ';
      current = current.next;
    }
    console.log(result.slice(0, -4));
  }
}

const list = new SinglyLinkedList();
list.add(10);
list.add(20);
list.add(30);
list.print(); // 10 -> 20 -> 30
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã —Ä–µ–∞–ª–∏–∑—É–µ–º –æ–¥–Ω–æ—Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫. –ú–µ—Ç–æ–¥ `add` –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —É–∑–µ–ª –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞, –æ–±–Ω–æ–≤–ª—è—è —É–∫–∞–∑–∞—Ç–µ–ª—å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —É–∑–ª–∞.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö:
---
7Ô∏è‚É£ –î–≤—É—Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –Ω–∞—á–∞–ª–æ
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –¥–≤—É—Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏ –¥–æ–±–∞–≤—å—Ç–µ —ç–ª–µ–º–µ–Ω—Ç –≤ –Ω–∞—á–∞–ª–æ.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
class Node {
  constructor(data) {
    this.data = data;
    this.next = null;
    this.prev = null;
  }
}

class DoublyLinkedList {
  constructor() {
    this.head = null;
  }

  addToFront(value) {
    const newNode = new Node(value);
    if (this.head === null) {
      this.head = newNode;
    } else {
      newNode.next = this.head;
      this.head.prev = newNode;
      this.head = newNode;
    }
  }

  print() {
    let current = this.head;
    let result = '';
    while (current !== null) {
      result += current.data + ' <-> ';
      current = current.next;
    }
    console.log(result.slice(0, -4));
  }
}

const list = new DoublyLinkedList();
list.addToFront(10);
list.addToFront(20);
list.addToFront(30);
list.print(); // 30 <-> 20 <-> 10
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –í –¥–≤—É—Å–≤—è–∑–Ω–æ–º —Å–ø–∏—Å–∫–µ –∫–∞–∂–¥—ã–π —É–∑–µ–ª —Ö—Ä–∞–Ω–∏—Ç —Å—Å—ã–ª–∫–∏ –∫–∞–∫ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç, —Ç–∞–∫ –∏ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π. –ú–µ—Ç–æ–¥ `addToFront` –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —É–∑–µ–ª –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö:
---
8Ô∏è‚É£ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ—á–µ—Ä–µ–¥—å: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ—á–µ—Ä–µ–¥–∏ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—É—é –æ—á–µ—Ä–µ–¥—å —Å –º–µ—Ç–æ–¥–∞–º–∏ `enqueue` –∏ `dequeue`, –≥–¥–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –±–æ–ª—å—à–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —Ä–∞–Ω—å—à–µ.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
class PriorityQueue {
  constructor() {
    this.items = [];
  }

  enqueue(element, priority) {
    const newNode = { element, priority };
    if (this.items.length === 0) {
      this.items.push(newNode);
    } else {
      let added = false;
      for (let i = 0; i < this.items.length; i++) {
        if (newNode.priority > this.items[i].priority) {
          this.items.splice(i, 0, newNode);
          added = true;
          break;
        }
      }
      if (!added) {
        this.items.push(newNode);
      }
    }
  }

  dequeue() {
    return this.items.shift();
  }

  peek() {
    return this.items[0];
  }
}

const pq = new PriorityQueue();
pq.enqueue('task1', 1);
pq.enqueue('task2', 3);
pq.enqueue('task3', 2);
console.log(pq.peek()); // { element: 'task2', priority: 3 }
pq.dequeue();
console.log(pq.peek()); // { element: 'task3', priority: 2 }
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ—á–µ—Ä–µ–¥—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É. –ú–µ—Ç–æ–¥ `enqueue` –¥–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –≤ –æ—á–µ—Ä–µ–¥—å —Å —É—á—ë—Ç–æ–º –µ–≥–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö:
---
9Ô∏è‚É£ –•–µ—à-—Ç–∞–±–ª–∏—Ü–∞: –û–ø–µ—Ä–∞—Ü–∏–∏ –≤—Å—Ç–∞–≤–∫–∏ –∏ –ø–æ–∏—Å–∫–∞
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –ø—Ä–æ—Å—Ç—É—é —Ö–µ—à-—Ç–∞–±–ª–∏—Ü—É —Å –º–µ—Ç–æ–¥–∞–º–∏ –≤—Å—Ç–∞–≤–∫–∏ –∏ –ø–æ–∏—Å–∫–∞.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
class HashTable {
  constructor(size = 4) {
    this.table = new Array(size);
  }

  hash(key) {
    let hash = 0;
    for (let i = 0; i < key.length; i++) {
      hash += key.charCodeAt(i);
    }
    return hash % this.table.length;
  }

  insert(key, value) {
    const index = this.hash(key);
    this.table[index] = value;
  }

  search(key) {
    const index = this.hash(key);
    return this.table[index];
  }
}

const hashTable = new HashTable();
hashTable.insert('name', 'John');
hashTable.insert('age', 30);
console.log(hashTable.search('name')); // John
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –•–µ—à-—Ç–∞–±–ª–∏—Ü–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ö–µ—à-—Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞ —ç–ª–µ–º–µ–Ω—Ç–∞. –í —ç—Ç–æ–π –ø—Ä–æ—Å—Ç–µ–π—à–µ–π –≤–µ—Ä—Å–∏–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –º–∞—Å—Å–∏–≤–µ.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö:
---
üîü –ê–ª–≥–æ—Ä–∏—Ç–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Å–ª–∏—è–Ω–∏–µ–º
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –º–∞—Å—Å–∏–≤–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Å–ª–∏—è–Ω–∏–µ–º.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function mergeSort(arr) {
  if (arr.length <= 1) return arr;

  const mid = Math.floor(arr.length / 2);
  const left = mergeSort(arr.slice(0, mid));
  const right = mergeSort(arr.slice(mid));

  return merge(left, right);
}

function merge(left, right) {
  let result = [];
  let i = 0, j = 0;

  while (i < left.length && j < right.length) {
    if (left[i] < right[j]) {
      result.push(left[i]);
      i++;
    } else {
      result.push(right[j]);
      j++;
    }
  }

  return result.concat(left.slice(i)).concat(right.slice(j));
}

console.log(mergeSort([10, 2, 3, 4, 1])); // [1, 2, 3, 4, 10]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ê–ª–≥–æ—Ä–∏—Ç–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Å–ª–∏—è–Ω–∏–µ–º –¥–µ–ª–∏—Ç –º–∞—Å—Å–∏–≤ –Ω–∞ –±–æ–ª–µ–µ –º–µ–ª–∫–∏–µ —á–∞—Å—Ç–∏, —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏—Ö —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∏ –∑–∞—Ç–µ–º —Å–ª–∏–≤–∞–µ—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∞—Å—Ç–∏ –≤ –æ–¥–∏–Ω –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤.
---------------------------------------------------------------------------------------------
