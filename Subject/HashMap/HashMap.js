---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –•—ç—à-—Ç–∞–±–ª–∏—Ü—ã (!—Ö—ç—à–º–∞–ø)(–º–∞—Å—Å–∏–≤, –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –∏ –¥–≤–∞ –≤–∏–¥–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–æ–ª–ª–∏–∑–∏–π —Ä–∞–∑—Ä–µ—à–∞—é—Ç—Å—è —Å–≤—è–∑–∞–Ω–Ω—ã–º —Å–ø–∏—Å–∫–æ–º):
---
–†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—ã —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º –∫–æ–ª–ª–∏–∑–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—É, –∏—Å–ø–æ–ª—å–∑—É—è –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –º–µ—Ç–æ–¥ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–æ–ª–ª–∏–∑–∏–π —á–µ—Ä–µ–∑ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏. –í —Ö—ç—à-—Ç–∞–±–ª–∏—Ü–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ –≤–∏–¥–µ –ø–∞—Ä –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ. –ü—Ä–∏ –∫–æ–ª–ª–∏–∑–∏–∏ (–∫–æ–≥–¥–∞ –¥–≤–∞ –∫–ª—é—á–∞ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ö—ç—à) —ç–ª–µ–º–µ–Ω—Ç—ã –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ —Å–≤—è–∑–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ.
üéØ –†–µ—à–µ–Ω–∏–µ:
1. –ú–∞—Å—Å–∏–≤ –∫–∞–∫ –±–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: –•—ç—à-—Ç–∞–±–ª–∏—Ü–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –ò–Ω–¥–µ–∫—Å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –±—É–¥–µ—Ç –≤—ã—á–∏—Å–ª—è—Ç—å—Å—è –∫–∞–∫ –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è —Ö—ç—à-—Ñ—É–Ω–∫—Ü–∏–∏.
2. –•—ç—à-—Ñ—É–Ω–∫—Ü–∏—è: –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞ –º—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Å—Ç—É—é —Ö—ç—à-—Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ —Ä–∞–∑–º–µ—Ä –º–∞—Å—Å–∏–≤–∞.
3. –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–ª–ª–∏–∑–∏–π: –í —Å–ª—É—á–∞–µ –∫–æ–ª–ª–∏–∑–∏–π (–∫–æ–≥–¥–∞ –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å) –º—ã –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–≤—è–∑–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ –Ω–∞ —ç—Ç–æ–º –∏–Ω–¥–µ–∫—Å–µ. –°–≤—è–∑–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º —Ö—ç—à–æ–º.
4. –û–ø–µ—Ä–∞—Ü–∏–∏:
   - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ö—ç—à-—Ñ—É–Ω–∫—Ü–∏–∏.
   - –ü–æ–∏—Å–∫: –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Ö—ç—à-—Ç–∞–±–ª–∏—Ü–µ –ø–æ –∫–ª—é—á—É.
   - –£–¥–∞–ª–µ–Ω–∏–µ: –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—ã.
---
–†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—ã —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º –∫–æ–ª–ª–∏–∑–∏–π —á–µ—Ä–µ–∑ —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
–®–∞–≥ 1: –û–ø—Ä–µ–¥–µ–ª–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.
```javascript
class ListNode {
  constructor(key, value) {
    this.key = key;
    this.value = value;
    this.next = null;
  }
}
```
- `ListNode` –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —ç–ª–µ–º–µ–Ω—Ç —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞. –ö–∞–∂–¥—ã–π —É–∑–µ–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–∞—Ä—É `key-value` –∏ —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É–∑–µ–ª.
–®–∞–≥ 2: –†–µ–∞–ª–∏–∑—É–µ–º —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—É.
```javascript
class HashTable {
  constructor(size = 10) {
    this.size = size;
    this.table = new Array(size); // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤
  }

  // –•—ç—à-—Ñ—É–Ω–∫—Ü–∏—è (–æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è)
  hash(key) {
    let hash = 0;
    for (let i = 0; i < key.length; i++) {
      hash = (hash + key.charCodeAt(i)) % this.size;
    }
    return hash;
  }

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—É
  set(key, value) {
    const index = this.hash(key);

    // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —É–∑–µ–ª
    const newNode = new ListNode(key, value);

    if (!this.table[index]) {
      // –ï—Å–ª–∏ –Ω–∞ —ç—Ç–æ–º –∏–Ω–¥–µ–∫—Å–µ –Ω–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π
      this.table[index] = newNode;
    } else {
      // –ï—Å–ª–∏ –Ω–∞ –∏–Ω–¥–µ–∫—Å–µ —É–∂–µ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã, —Ä–∞–∑—Ä–µ—à–∞–µ–º –∫–æ–ª–ª–∏–∑–∏—é —á–µ—Ä–µ–∑ —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
      let current = this.table[index];

      // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç–ª–µ–º–µ–Ω—Ç —Å —Ç–∞–∫–∏–º –∂–µ –∫–ª—é—á–æ–º
      while (current) {
        if (current.key === key) {
          current.value = value; // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–ª—é—á –Ω–∞–π–¥–µ–Ω
          return;
        }
        if (!current.next) break;
        current = current.next;
      }

      // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —Å —Ç–∞–∫–∏–º –∫–ª—é—á–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –∫–æ–Ω–µ—Ü —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
      current.next = newNode;
    }
  }

  // –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ –∫–ª—é—á—É
  get(key) {
    const index = this.hash(key);
    let current = this.table[index];

    // –ü—Ä–æ–±–µ–≥–∞–µ–º –ø–æ —Å–≤—è–∑–∞–Ω–Ω–æ–º—É —Å–ø–∏—Å–∫—É
    while (current) {
      if (current.key === key) {
        return current.value; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–ª—é—á –Ω–∞–π–¥–µ–Ω
      }
      current = current.next;
    }

    return undefined; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º undefined, –µ—Å–ª–∏ –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ –∫–ª—é—á—É
  remove(key) {
    const index = this.hash(key);
    let current = this.table[index];
    let prev = null;

    // –ü—Ä–æ–±–µ–≥–∞–µ–º –ø–æ —Å–≤—è–∑–∞–Ω–Ω–æ–º—É —Å–ø–∏—Å–∫—É
    while (current) {
      if (current.key === key) {
        if (prev) {
          // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –ø–µ—Ä–≤—ã–π –≤ —Å–ø–∏—Å–∫–µ, —É–¥–∞–ª—è–µ–º –µ–≥–æ
          prev.next = current.next;
        } else {
          // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –ø–µ—Ä–≤—ã–π, –ø—Ä–æ—Å—Ç–æ –º–µ–Ω—è–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å
          this.table[index] = current.next;
        }
        return true; // –≠–ª–µ–º–µ–Ω—Ç —É–¥–∞–ª–µ–Ω
      }
      prev = current;
      current = current.next;
    }

    return false; // –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
  }
}
```
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—ã
```javascript
const hashTable = new HashTable();

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
hashTable.set("name", "Alice");
hashTable.set("age", 25);
hashTable.set("occupation", "developer");

// –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
console.log(hashTable.get("name")); // Alice
console.log(hashTable.get("age")); // 25
console.log(hashTable.get("occupation")); // developer

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
hashTable.set("age", 26);
console.log(hashTable.get("age")); // 26

// –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
hashTable.remove("age");
console.log(hashTable.get("age")); // undefined
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –•—ç—à-—Ñ—É–Ω–∫—Ü–∏—è: –ü—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ö—ç—à–∞, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –Ω–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ —Å—É–º–º—ã –∫–æ–¥–æ–≤ —Å–∏–º–≤–æ–ª–æ–≤ –∏ –≤–∑—è—Ç–∏–∏ –æ—Å—Ç–∞—Ç–∫–∞ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ —Ä–∞–∑–º–µ—Ä —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—ã.
2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–ª–∏–∑–∏–π: –ï—Å–ª–∏ –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ö—ç—à, –æ–Ω–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ —Å–≤—è–∑–Ω–æ–º —Å–ø–∏—Å–∫–µ –Ω–∞ –æ–¥–Ω–æ–º –∏–Ω–¥–µ–∫—Å–µ –º–∞—Å—Å–∏–≤–∞. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –ø–µ—Ä–µ–±–æ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π.
3. –û–ø–µ—Ä–∞—Ü–∏–∏:
   - `set()`: –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π.
   - `get()`: –ò—â–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∫–ª—é—á—É, –ø—Ä–æ–±–µ–≥–∞—è –ø–æ —Å–≤—è–∑–∞–Ω–Ω–æ–º—É —Å–ø–∏—Å–∫—É, –µ—Å–ª–∏ –∫–æ–ª–ª–∏–∑–∏—è –ø—Ä–æ–∏–∑–æ—à–ª–∞.
   - `remove()`: –£–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∫–ª—é—á—É, —Ç–∞–∫–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—è —Å–ª—É—á–∞–∏ —Å –∫–æ–ª–ª–∏–∑–∏—è–º–∏.
–†–µ–∑—é–º–µ:
- –•—ç—à-—Ç–∞–±–ª–∏—Ü–∞ ‚Äî —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É—é—â–∞—è —Ö—ç—à-—Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
- –°–≤—è–∑–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–æ–ª–ª–∏–∑–∏–π, –∫–æ–≥–¥–∞ –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ö—ç—à.
- –≠—Ç–æ —Ä–µ—à–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –∑–∞–¥–∞—á, –≥–¥–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ö—Ä–∞–Ω–∏—Ç—å –∏ –±—ã—Å—Ç—Ä–æ –∏—Å–∫–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –∫–ª—é—á—É.
 ~~~ 

Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –†–∞–∑–≤–æ—Ä–æ—Ç –º–∞—Å—Å–∏–≤–∞:
---
–†–∞–∑–≤–æ—Ä–æ—Ç –º–∞—Å—Å–∏–≤–∞ ‚Äî —ç—Ç–æ –æ–ø–µ—Ä–∞—Ü–∏—è, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –º–µ–Ω—è—é—Ç –ø–æ—Ä—è–¥–æ–∫ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π.
üéØ –†–µ—à–µ–Ω–∏–µ: –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞ JavaScript:
1. –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ `reverse`
–°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± ‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ `reverse`:
```javascript
const array = [1, 2, 3, 4, 5];
const reversedArray = array.reverse();

console.log("–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤:", array);      // [5, 4, 3, 2, 1]
console.log("–†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", reversedArray); // [5, 4, 3, 2, 1]
```
–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:
- `reverse` –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤, —Ç–∞–∫ —á—Ç–æ –±—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏.
---
2. –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ü–∏–∫–ª–∞ `for`
–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞:
```javascript
function reverseArray(arr) {
  const reversed = [];
  for (let i = arr.length - 1; i >= 0; i--) {
    reversed.push(arr[i]);
  }
  return reversed;
}

const array = [1, 2, 3, 4, 5];
const reversedArray = reverseArray(array);

console.log("–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤:", array);      // [1, 2, 3, 4, 5]
console.log("–†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", reversedArray); // [5, 4, 3, 2, 1]
```
---
3. –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏ –∏ `reduce`
```javascript
function reverseArray(arr) {
  return arr.reduce((acc, curr) => [curr, ...acc], []);
}
const array = [1, 2, 3, 4, 5];
const reversedArray = reverseArray(array);
console.log("–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤:", array);      // [1, 2, 3, 4, 5]
console.log("–†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", reversedArray); // [5, 4, 3, 2, 1]
```
–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:
- –§—É–Ω–∫—Ü–∏—è `reduce` –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ –Ω–∞—á–∞–ª–æ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–≥–æ –º–∞—Å—Å–∏–≤–∞.
---
4. –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –¥–≤—É—Ö —É–∫–∞–∑–∞—Ç–µ–ª–µ–π
–≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ –Ω–∞ –º–µ—Å—Ç–µ, –º–∏–Ω–∏–º–∏–∑–∏—Ä—É—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:
```javascript
function reverseArrayInPlace(arr) {
  let left = 0;
  let right = arr.length - 1;

  while (left < right) {
    // –ú–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏ —ç–ª–µ–º–µ–Ω—Ç—ã
    [arr[left], arr[right]] = [arr[right], arr[left]];
    left++;
    right--;
  }
  return arr;
}

const array = [1, 2, 3, 4, 5];
reverseArrayInPlace(array);

console.log("–†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", array); // [5, 4, 3, 2, 1]
```
–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:
- –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –Ω–µ —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏ —ç–∫–æ–Ω–æ–º–∏—Ç –ø–∞–º—è—Ç—å.
- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –æ–±–º–µ–Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–µ—Å—Ç–∞–º–∏.
---
5. –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ä–µ–∫—É—Ä—Å–∏–∏
```javascript
function reverseArray(arr) {
  if (arr.length === 0) return [];
  return [arr[arr.length - 1]].concat(reverseArray(arr.slice(0, -1)));
}

const array = [1, 2, 3, 4, 5];
const reversedArray = reverseArray(array);

console.log("–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤:", array);      // [1, 2, 3, 4, 5]
console.log("–†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", reversedArray); // [5, 4, 3, 2, 1]
```
–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:
- –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Ö–æ—Ä–æ—à–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö –º–∞—Å—Å–∏–≤–æ–≤.
- –ü—Ä–∏ –±–æ–ª—å—à–∏—Ö –º–∞—Å—Å–∏–≤–∞—Ö –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–µ–∫–∞ –≤—ã–∑–æ–≤–æ–≤.
---
6. –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `Array.from`
```javascript
const array = [1, 2, 3, 4, 5];
const reversedArray = Array.from(array).reverse();

console.log("–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤:", array);      // [1, 2, 3, 4, 5]
console.log("–†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", reversedArray); // [5, 4, 3, 2, 1]
```
–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:
- `Array.from(array)` —Å–æ–∑–¥–∞—ë—Ç –∫–æ–ø–∏—é –º–∞—Å—Å–∏–≤–∞, –ø–æ—ç—Ç–æ–º—É `reverse` –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª.
–ò—Ç–æ–≥
–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫–æ–π –º–µ—Ç–æ–¥:
1. `reverse`: –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –±—ã—Å—Ç—Ä–æ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫, –∏ –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω—ë–Ω.
2. –¶–∏–∫–ª `for`: –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤ –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º.
3. `reduce`: –ö–æ–≥–¥–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.
4. –î–≤–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è: –î–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –ø–∞–º—è—Ç–∏ –∏ —Ä–∞–±–æ—Ç—ã –Ω–∞ –º–µ—Å—Ç–µ.
5. –†–µ–∫—É—Ä—Å–∏—è: –î–ª—è —É—á–µ–±–Ω—ã—Ö —Ü–µ–ª–µ–π –∏–ª–∏ –∫–æ–≥–¥–∞ –º–∞—Å—Å–∏–≤—ã –Ω–µ–±–æ–ª—å—à–∏–µ.






Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ü–æ–ú–∞–ø–∏—Ç—å –∫–ª–∞—Å—Å—ã (map):
---
–ú–∞–ø–ø–∏–Ω–≥ –∫–ª–∞—Å—Å–æ–≤ –Ω–∞ JavaScript –∏ React
–ú–∞–ø–ø–∏–Ω–≥ –∫–ª–∞—Å—Å–æ–≤ ‚Äî —ç—Ç–æ –∑–∞–¥–∞—á–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –∫–ª–∞—Å—Å—ã –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è—Ç—å CSS-–∫–ª–∞—Å—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
1. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ —á–∏—Å—Ç–æ–º JavaScript
–í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã –º–∞–ø–ø–∏–º –∫–ª–∞—Å—Å—ã –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º —Å–ø–∏—Å–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø–æ–ª—É—á–∞–µ—Ç –∫–ª–∞—Å—Å `selected`).
–ö–æ–¥ JavaScript
```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Class Mapping</title>
  <style>
    .item {
      padding: 10px;
      margin: 5px 0;
      border: 1px solid #ccc;
      cursor: pointer;
    }

    .selected {
      background-color: #007bff;
      color: white;
    }

    .highlight {
      font-weight: bold;
    }
  </style>
</head>
<body>
  <ul id="itemList"></ul>

  <script>
    // –î–∞–Ω–Ω—ã–µ
    const items = [
      { id: 1, name: "Item 1", isSelected: false },
      { id: 2, name: "Item 2", isSelected: true },
      { id: 3, name: "Item 3", isSelected: false },
    ];

    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–ø–∏—Å–∫–∞
    const itemList = document.getElementById("itemList");

    // –†–µ–Ω–¥–µ—Ä–∏–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞
    function renderItems() {
      itemList.innerHTML = ""; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä

      items.forEach((item) => {
        const li = document.createElement("li");
        li.textContent = item.name;

        // –ú–∞–ø–ø–∏–º –∫–ª–∞—Å—Å—ã
        li.className = "item";
        if (item.isSelected) li.classList.add("selected");

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
        li.addEventListener("click", () => toggleSelection(item.id));

        itemList.appendChild(li);
      });
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è "isSelected"
    function toggleSelection(id) {
      items.forEach((item) => {
        item.isSelected = item.id === id ? !item.isSelected : false;
      });

      renderItems(); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
    }

    renderItems(); // –ü–µ—Ä–≤–∏—á–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä
  </script>
</body>
</html>
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ JavaScript-–∫–æ–¥–∞
1. –ú–∞–ø–ø–∏–Ω–≥ –∫–ª–∞—Å—Å–æ–≤:
   - –ö –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å `item`.
   - –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤—ã–±—Ä–∞–Ω (`isSelected`), –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫–ª–∞—Å—Å `selected`:
     ```javascript
     if (item.isSelected) li.classList.add("selected");
     ```
2. –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:
   - –ü—Ä–∏ –∫–ª–∏–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ (`isSelected`) –º–µ–Ω—è–µ—Ç—Å—è.
   - –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è `renderItems`, —á—Ç–æ–±—ã –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫.
---
2. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ React
–í React –º–∞–ø–ø–∏–Ω–≥ –∫–ª–∞—Å—Å–æ–≤ —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `classnames` –∏–ª–∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏.
üéØ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫
```jsx
import React, { useState } from "react";

function ClassMapper() {
  const [items, setItems] = useState([
    { id: 1, name: "Item 1", isSelected: false },
    { id: 2, name: "Item 2", isSelected: true },
    { id: 3, name: "Item 3", isSelected: false },
  ]);

  const toggleSelection = (id) => {
    setItems((prevItems) =>
      prevItems.map((item) =>
        item.id === id ? { ...item, isSelected: !item.isSelected } : { ...item, isSelected: false }
      )
    );
  };

  return (
    <ul>
      {items.map((item) => (
        <li
          key={item.id}
          className={`item ${item.isSelected ? "selected" : ""}`}
          onClick={() => toggleSelection(item.id)}
        >
          {item.name}
        </li>
      ))}
    </ul>
  );
}

export default ClassMapper;
```
üéØ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `classnames`
–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É:
```bash
npm install classnames
```
–ò—Å–ø–æ–ª—å–∑—É–µ–º `classnames` –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –º–∞–ø–ø–∏–Ω–≥–∞ –∫–ª–∞—Å—Å–æ–≤:
```jsx
import React, { useState } from "react";
import classNames from "classnames";

function ClassMapper() {
  const [items, setItems] = useState([
    { id: 1, name: "Item 1", isSelected: false },
    { id: 2, name: "Item 2", isSelected: true },
    { id: 3, name: "Item 3", isSelected: false },
  ]);

  const toggleSelection = (id) => {
    setItems((prevItems) =>
      prevItems.map((item) =>
        item.id === id ? { ...item, isSelected: !item.isSelected } : { ...item, isSelected: false }
      )
    );
  };

  return (
    <ul>
      {items.map((item) => (
        <li
          key={item.id}
          className={classNames("item", { selected: item.isSelected })}
          onClick={() => toggleSelection(item.id)}
        >
          {item.name}
        </li>
      ))}
    </ul>
  );
}

export default ClassMapper;
```
---
CSS –¥–ª—è React
```css
.item {
  padding: 10px;
  margin: 5px 0;
  border: 1px solid #ccc;
  cursor: pointer;
}

.selected {
  background-color: #007bff;
  color: white;
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ React-–∫–æ–¥–∞
1. –°–æ—Å—Ç–æ—è–Ω–∏–µ:
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `useState` –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.
2. –ú–∞–ø–ø–∏–Ω–≥ –∫–ª–∞—Å—Å–æ–≤:
   - –ë–µ–∑ `classnames`:
     ```jsx
     className={`item ${item.isSelected ? "selected" : ""}`}
     ```
   - –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `classnames`:
     ```jsx
     classNames("item", { selected: item.isSelected })
     ```
3. –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:
   - `setItems` –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–ø–∏—Å–∫–∞, —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞.
---
–°—Ä–∞–≤–Ω–µ–Ω–∏–µ JavaScript –∏ React
| –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞   | Vanilla JavaScript                             | React                                |
|-----------------------|----------------------------------------------------|------------------------------------------|
| –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö | –†—É—á–Ω–∞—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞ DOM                             | –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `state` –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–Ω–¥–µ—Ä |
| –ú–∞–ø–ø–∏–Ω–≥ –∫–ª–∞—Å—Å–æ–≤   | `classList.add` –∏ `classList.remove`               | –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `className` –∏–ª–∏ `classnames` |
| –ü—Ä–æ—Å—Ç–æ—Ç–∞ –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ | –ë—ã—Å—Ç—Ä–µ–µ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á                     | –ë–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ |

  
Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ –±–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –ø–∞–º—è—Ç–∏ –∏–ª–∏ –∫–∞–Ω—Å—Ç–æ–º–Ω—ã–π –ª–∏–Ω–∫–µ–¥ –ª–∏—Å—Ç, –æ–±—Ö–æ–¥ –≥—Ä–∞—Ñ–∞ –∑–∞ N —Å–ª–æ–∂–Ω–æ—Å—Ç—å:
---
üéØ –†–µ—à–µ–Ω–∏–µ: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–≤—è–∑–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∏ –æ–±—Ö–æ–¥–∞ –≥—Ä–∞—Ñ–∞
–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã —Ç—Ä–∏ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:
1. –ë–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫ (–ø–æ –º–∞—Å—Å–∏–≤—É).
2. –ö–∞—Å—Ç–æ–º–Ω—ã–π —Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫ (Linked List).
3. –û–±—Ö–æ–¥ –≥—Ä–∞—Ñ–∞ –∑–∞ –ª–∏–Ω–µ–π–Ω–æ–µ –≤—Ä–µ–º—è O(N) —Å –ø–æ–º–æ—â—å—é BFS –∏–ª–∏ DFS.
---
1. –ë–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫
–ë–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –º–∞—Å—Å–∏–≤–∞–º, –∏–º–µ–µ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç—å O(log N).
```javascript
function binarySearch(arr, target) {
  let left = 0;
  let right = arr.length - 1;

  while (left <= right) {
    const mid = Math.floor((left + right) / 2);

    if (arr[mid] === target) {
      return mid; // –≠–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω
    }

    if (arr[mid] < target) {
      left = mid + 1; // –ò—â–µ–º –≤ –ø—Ä–∞–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ
    } else {
      right = mid - 1; // –ò—â–µ–º –≤ –ª–µ–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ
    }
  }

  return -1; // –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const sortedArray = [1, 3, 5, 7, 9, 11];
const target = 7;
const result = binarySearch(sortedArray, target);

console.log(result); // –ò–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞: 3
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –ê–ª–≥–æ—Ä–∏—Ç–º:
   - –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ (`mid`).
   - –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å `target`.
   - –°—É–∂–∞–µ–º –æ–±–ª–∞—Å—Ç—å –ø–æ–∏—Å–∫–∞, —É–¥–∞–ª—è—è –ø–æ–ª–æ–≤–∏–Ω—É –º–∞—Å—Å–∏–≤–∞ –Ω–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏.
2. –°–ª–æ–∂–Ω–æ—Å—Ç—å:
   - –í—Ä–µ–º—è: O(log N), —Ç–∞–∫ –∫–∞–∫ –Ω–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –º—ã –¥–µ–ª–∏–º –º–∞—Å—Å–∏–≤ –ø–æ–ø–æ–ª–∞–º.
   - –ü–∞–º—è—Ç—å: O(1), —Ç–∞–∫ –∫–∞–∫ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–∫—É—Ä—Å–∏—è.
---
2. –ö–∞—Å—Ç–æ–º–Ω—ã–π —Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫
–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ `LinkedList`
```javascript
class Node {
  constructor(value) {
    this.value = value;
    this.next = null;
  }
}

class LinkedList {
  constructor() {
    this.head = null;
    this.tail = null;
    this.size = 0;
  }

  // –î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞
  append(value) {
    const newNode = new Node(value);

    if (!this.head) {
      this.head = newNode;
      this.tail = newNode;
    } else {
      this.tail.next = newNode;
      this.tail = newNode;
    }

    this.size++;
  }

  // –£–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç
  delete(value) {
    if (!this.head) return;

    // –£–¥–∞–ª—è–µ–º –≥–æ–ª–æ–≤—É
    if (this.head.value === value) {
      this.head = this.head.next;
      this.size--;
      return;
    }

    let current = this.head;

    while (current.next && current.next.value !== value) {
      current = current.next;
    }

    if (current.next) {
      current.next = current.next.next;
      this.size--;
    }

    if (!current.next) {
      this.tail = current; // –û–±–Ω–æ–≤–ª—è–µ–º —Ö–≤–æ—Å—Ç, –µ—Å–ª–∏ —É–¥–∞–ª—ë–Ω –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç
    }
  }

  // –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞
  find(value) {
    let current = this.head;

    while (current) {
      if (current.value === value) {
        return current;
      }
      current = current.next;
    }

    return null;
  }

  // –ü–µ—á–∞—Ç—å –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  print() {
    const elements = [];
    let current = this.head;

    while (current) {
      elements.push(current.value);
      current = current.next;
    }

    console.log(elements.join(" -> "));
  }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const list = new LinkedList();
list.append(10);
list.append(20);
list.append(30);

list.print(); // 10 -> 20 -> 30

list.delete(20);
list.print(); // 10 -> 30

console.log(list.find(10)); // Node { value: 10, next: Node { ... } }
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –û–ø–µ—Ä–∞—Ü–∏–∏:
   - `append(value)`: –î–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞. –°–ª–æ–∂–Ω–æ—Å—Ç—å O(1).
   - `delete(value)`: –£–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç. –°–ª–æ–∂–Ω–æ—Å—Ç—å O(N) –≤ —Ö—É–¥—à–µ–º —Å–ª—É—á–∞–µ.
   - `find(value)`: –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞. –°–ª–æ–∂–Ω–æ—Å—Ç—å O(N).
2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
   - –°–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª–µ–∑–µ–Ω –¥–ª—è —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤, –≥–¥–µ —á–∞—Å—Ç–æ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –∏–ª–∏ —É–¥–∞–ª—è—é—Ç—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã.
---
3. –û–±—Ö–æ–¥ –≥—Ä–∞—Ñ–∞ –∑–∞ –ª–∏–Ω–µ–π–Ω–æ–µ –≤—Ä–µ–º—è O(N)
–û–±—Ö–æ–¥ –≥—Ä–∞—Ñ–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º DFS (–≥–ª—É–±–∏–Ω–∞) –∏–ª–∏ BFS (—à–∏—Ä–∏–Ω–∞). –û–±–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –∏–º–µ—é—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç—å O(V + E), –≥–¥–µ:
- V ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ—Ä—à–∏–Ω.
- E ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—ë–±–µ—Ä.
–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ö–æ–¥–∞ –≤ —à–∏—Ä–∏–Ω—É (BFS)
```javascript
function bfs(graph, start) {
  const visited = new Set(); // –ß—Ç–æ–±—ã –Ω–µ –∑–∞—Ö–æ–¥–∏—Ç—å –≤ –æ–¥–Ω—É –≤–µ—Ä—à–∏–Ω—É –¥–≤–∞–∂–¥—ã
  const queue = [start]; // –û—á–µ—Ä–µ–¥—å –¥–ª—è BFS
  const result = [];

  while (queue.length > 0) {
    const current = queue.shift();

    if (!visited.has(current)) {
      visited.add(current);
      result.push(current);

      // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ—Ö —Å–æ—Å–µ–¥–µ–π –≤ –æ—á–µ—Ä–µ–¥—å
      for (const neighbor of graph[current]) {
        if (!visited.has(neighbor)) {
          queue.push(neighbor);
        }
      }
    }
  }

  return result;
}

// –ü—Ä–∏–º–µ—Ä –≥—Ä–∞—Ñ–∞
const graph = {
  1: [2, 3],
  2: [4],
  3: [4, 5],
  4: [],
  5: [6],
  6: [],
};

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const startNode = 1;
console.log(bfs(graph, startNode)); // [1, 2, 3, 4, 5, 6]
```
---
–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ö–æ–¥–∞ –≤ –≥–ª—É–±–∏–Ω—É (DFS)
```javascript
function dfs(graph, start, visited = new Set(), result = []) {
  if (visited.has(start)) return;

  visited.add(start);
  result.push(start);

  for (const neighbor of graph[start]) {
    if (!visited.has(neighbor)) {
      dfs(graph, neighbor, visited, result);
    }
  }

  return result;
}

// –ü—Ä–∏–º–µ—Ä –≥—Ä–∞—Ñ–∞
const graph = {
  1: [2, 3],
  2: [4],
  3: [4, 5],
  4: [],
  5: [6],
  6: [],
};

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const startNode = 1;
console.log(dfs(graph, startNode)); // [1, 2, 4, 3, 5, 6]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ BFS –∏ DFS:
1. BFS (—à–∏—Ä–∏–Ω–∞):
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –æ—á–µ—Ä–µ–¥—å (`queue`) –¥–ª—è –æ–±—Ö–æ–¥–∞.
   - –ü—Ä–æ—Ö–æ–¥–∏—Ç —É—Ä–æ–≤–µ–Ω—å –∑–∞ —É—Ä–æ–≤–Ω–µ–º.
2. DFS (–≥–ª—É–±–∏–Ω–∞):
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–µ–∫—É—Ä—Å–∏—é (–∏–ª–∏ —Å—Ç–µ–∫) –¥–ª—è –æ–±—Ö–æ–¥–∞.
   - –ü—Ä–æ—Ö–æ–¥–∏—Ç –¥–æ –∫–æ–Ω—Ü–∞ –æ–¥–Ω–æ–≥–æ –ø—É—Ç–∏, –∑–∞—Ç–µ–º –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è.
–í—ã–≤–æ–¥
- –ë–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫: –î–ª—è –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤, O(log N).
- –ö–∞—Å—Ç–æ–º–Ω—ã–π —Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫: –ì–∏–±–∫–æ—Å—Ç—å –≤ —Ä–∞–±–æ—Ç–µ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏, O(N) –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ–∏—Å–∫–∞/—É–¥–∞–ª–µ–Ω–∏—è.
- –û–±—Ö–æ–¥ –≥—Ä–∞—Ñ–∞:
  - BFS –∏ DFS –æ–±—Ö–æ–¥—è—Ç –≥—Ä–∞—Ñ –∑–∞ O(V + E).
  - –í—ã–±–æ—Ä –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∑–∞–¥–∞—á–∏ (–ø–æ–∏—Å–∫ –∫—Ä–∞—Ç—á–∞–π—à–µ–≥–æ –ø—É—Ç–∏ ‚Äî BFS, –ø–æ–∏—Å–∫ –ø—É—Ç–µ–π –≤–≥–ª—É–±—å ‚Äî DFS).


Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: !!!–ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≥–ª—É–±–æ–∫–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ —Å –¥–æ–ø —É—Å–ª–æ–≤–∏–µ–º - –≤–Ω—É—Ç—Ä–∏ –µ—Å—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –∏ –∏–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏, —Ç.–µ. –æ–±—ä–µ–∫—Ç - –Ω–µ –¥–µ—Ä–µ–≤–æ:
---
–ì–ª—É–±–æ–∫–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Å —É—á–µ—Ç–æ–º —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫ ‚Äî —ç—Ç–æ —Å–ª–æ–∂–Ω–∞—è –∑–∞–¥–∞—á–∞, –∫–æ—Ç–æ—Ä–∞—è —Ç—Ä–µ–±—É–µ—Ç —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–∂–µ –ø–æ—Å–µ—â—ë–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤. –î–ª—è –µ—ë —Ä–µ—à–µ–Ω–∏—è –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Map –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –∏ –∏–∑–±–µ–≥–∞–Ω–∏—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π —Ä–µ–∫—É—Ä—Å–∏–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function deepClone(obj, map = new Map()) {
  // –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º –∏–ª–∏ –º–∞—Å—Å–∏–≤–æ–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
  if (obj === null || typeof obj !== "object") {
    return obj;
  }

  // –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç —É–∂–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω (—Ü–∏–∫–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞), –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ –∫–æ–ø–∏—é –∏–∑ Map
  if (map.has(obj)) {
    return map.get(obj);
  }

  // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ –º–∞—Å—Å–∏–≤–∞
  const clone = Array.isArray(obj) ? [] : {};

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—ä–µ–∫—Ç –≤ Map, —á—Ç–æ–±—ã —É—á–µ—Å—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏
  map.set(obj, clone);

  // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∫–æ–ø–∏—Ä—É–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞
  for (const key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      clone[key] = deepClone(obj[key], map);
    }
  }

  return clone;
}
// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const obj = {
  a: 1,
  b: {
    c: 2,
    d: 3,
  },
};
obj.b.e = obj; // –¶–∏–∫–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞

const copiedObj = deepClone(obj);
console.log(copiedObj);
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞:
   - –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º –∏–ª–∏ –º–∞—Å—Å–∏–≤–æ–º (`typeof obj !== "object"`), –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–∏–º–∏—Ç–∏–≤—ã –∫–æ–ø–∏—Ä—É—é—Ç—Å—è –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é.
2. –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫:
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `Map`, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã.
   - –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ `Map`, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω–∞—è –∫–æ–ø–∏—è:
     ```javascript
     if (map.has(obj)) {
       return map.get(obj);
     }
     ```
3. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤:
   - –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ö–æ–¥–∏–º –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ —Å –ø–æ–º–æ—â—å—é `for...in` –∏ —Å–æ–∑–¥–∞—ë–º –∏—Ö –∫–æ–ø–∏–∏.
4. –†–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏:
   - –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç ‚Äî –º–∞—Å—Å–∏–≤, —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤:
     ```javascript
     const clone = Array.isArray(obj) ? [] : {};
     ```
5. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–ª–æ–∂–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤:
   - –ö–æ–ø–∏—Ä—É—é—Ç—Å—è —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –º–∞—Å—Å–∏–≤–æ–≤ –ª—é–±–æ–≥–æ —É—Ä–æ–≤–Ω—è –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏, –≤–∫–ª—é—á–∞—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏.
---
–¢–µ—Å—Ç—ã:
–ü—Ä–∏–º–µ—Ä —Å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–º–∏ —Å—Å—ã–ª–∫–∞–º–∏:
```javascript
const obj = { a: 1 };
obj.b = obj; // –¶–∏–∫–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞

const cloned = deepClone(obj);
console.log(cloned); // { a: 1, b: [Circular] }
console.log(cloned.b === cloned); // true
```
–ü—Ä–∏–º–µ—Ä —Å –º–∞—Å—Å–∏–≤–æ–º:
```javascript
const arr = [1, 2, 3];
arr.push(arr); // –¶–∏–∫–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞

const clonedArr = deepClone(arr);
console.log(clonedArr); // [1, 2, 3, [Circular]]
console.log(clonedArr[3] === clonedArr); // true
```
–£–ª—É—á—à–µ–Ω–∏–µ: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ç–∞–∫–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–∞–∫ `Date`, `Set`, `Map`, –º–æ–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é:
```javascript
function deepClone(obj, map = new Map()) {
  if (obj === null || typeof obj !== "object") {
    return obj;
  }

  if (map.has(obj)) {
    return map.get(obj);
  }

  // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
  if (obj instanceof Date) {
    return new Date(obj);
  }

  if (obj instanceof Map) {
    const clonedMap = new Map();
    map.set(obj, clonedMap);
    for (const [key, value] of obj.entries()) {
      clonedMap.set(deepClone(key, map), deepClone(value, map));
    }
    return clonedMap;
  }

  if (obj instanceof Set) {
    const clonedSet = new Set();
    map.set(obj, clonedSet);
    for (const value of obj.values()) {
      clonedSet.add(deepClone(value, map));
    }
    return clonedSet;
  }

  const clone = Array.isArray(obj) ? [] : {};
  map.set(obj, clone);

  for (const key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      clone[key] = deepClone(obj[key], map);
    }
  }

  return clone;
}
```
---
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å `Map` –∏ `Set`
```javascript
const complexObj = {
  date: new Date(),
  map: new Map([[1, "one"]]),
  set: new Set([1, 2, 3]),
};
complexObj.self = complexObj; // –¶–∏–∫–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞

const clonedComplexObj = deepClone(complexObj);
console.log(clonedComplexObj);
console.log(clonedComplexObj.map.get(1)); // "one"
console.log(clonedComplexObj.set.has(2)); // true
console.log(clonedComplexObj.self === clonedComplexObj); // true
```
–ò—Ç–æ–≥
- –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:
  - –ì–ª—É–±–æ–∫–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –º–∞—Å—Å–∏–≤–æ–≤.
  - –¶–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏.
  - –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã: `Date`, `Set`, `Map`.
- –†–µ—à–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª—é–±—ã–º–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, `RegExp`, —ç—Ç–æ –ª–µ–≥–∫–æ —Å–¥–µ–ª–∞—Ç—å.

Z
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –í —Ü–∏–∫–ª–µ –ø–µ—Ä–µ–ª–æ–∂–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã, –º–µ–Ω—è—è –ø–µ—Ä–≤—ã–µ —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏. (—Ñ–∏–ª—å—Ç—Ä-–æ—Ç—Å–µ–≤ –∫–∞–Ω–¥–∏—Ç–∞—Ç–æ–≤):
---
‚åõ –ó–∞–¥–∞—á–∞: –ü–µ—Ä–µ–ª–æ–∂–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ —Ç–∞–∫, —á—Ç–æ–±—ã –ø–µ—Ä–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç–∞–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏, –∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ ‚Äî –ø–µ—Ä–≤—ã–º–∏.
üéØ –†–µ—à–µ–Ω–∏–µ –Ω–∞ Vanilla JavaScript
```javascript
function reverseArray(arr) {
  const length = arr.length;
  for (let i = 0; i < length / 2; i++) {
    // –ú–µ–Ω—è–µ–º –ø–µ—Ä–≤—ã–π –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç—ã
    const temp = arr[i];
    arr[i] = arr[length - 1 - i];
    arr[length - 1 - i] = temp;
  }
  return arr;
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const array = [1, 2, 3, 4, 5];
console.log("–ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤:", array);
console.log("–ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", reverseArray(array));
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –ò—Ç–µ—Ä–∞—Ü–∏—è –¥–æ —Å–µ—Ä–µ–¥–∏–Ω—ã –º–∞—Å—Å–∏–≤–∞:
   - –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ü–∏–∫–ª `for` —Å —É—Å–ª–æ–≤–∏–µ–º `i < length / 2`, —á—Ç–æ–±—ã –æ–±–º–µ–Ω–∏–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Ç–æ–ª—å–∫–æ –¥–æ —Å–µ—Ä–µ–¥–∏–Ω—ã –º–∞—Å—Å–∏–≤–∞.
   - –≠—Ç–æ –∏—Å–∫–ª—é—á–∞–µ—Ç –ª–∏—à–Ω–∏–µ –æ–±–º–µ–Ω—ã, —Ç. –∫. —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ –Ω–µ —Ç—Ä–µ–±—É—é—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π.
2. –û–±–º–µ–Ω —ç–ª–µ–º–µ–Ω—Ç–æ–≤:
   - –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é `temp` –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞:
     ```javascript
     const temp = arr[i];
     arr[i] = arr[length - 1 - i];
     arr[length - 1 - i] = temp;
     ```
3. –†–µ–∑—É–ª—å—Ç–∞—Ç:
   - –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–µ–Ω—è–µ—Ç—Å—è –º–µ—Å—Ç–∞–º–∏ —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º, –≤—Ç–æ—Ä–æ–π ‚Äî —Å –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–º, –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.
---
üéØ –†–µ—à–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `reverse`:
```javascript
const array = [1, 2, 3, 4, 5];
const reversedArray = array.reverse();
console.log("–ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤:", reversedArray);
```
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤.
---
üéØ –ü—Ä–∏–º–µ—Ä –¥–ª—è —Å—Ç—Ä–æ–∫
–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–æ–∫—É:
```javascript
function reverseString(str) {
  return str.split("").reverse().join("");
}

console.log(reverseString("hello")); // "olleh"
```
---------------------------------------------------------------------------------------------  
