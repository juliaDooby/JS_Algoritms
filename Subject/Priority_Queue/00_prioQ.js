---------------------------------------------------------------------------------------------
‚ãô ‚ùç –û—á–µ—Ä–µ–¥—å —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º:
---
–ß—Ç–æ —Ç–∞–∫–æ–µ –æ—á–µ—Ä–µ–¥—å —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º?
–û—á–µ—Ä–µ–¥—å —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º ‚Äî —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, –ø–æ—Ö–æ–∂–∞—è –Ω–∞ –æ–±—ã—á–Ω—É—é –æ—á–µ—Ä–µ–¥—å, –Ω–æ —Å –æ–¥–Ω–æ–π –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å—é: —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑–≤–ª–µ–∫–∞—é—Ç—Å—è –Ω–µ –≤ –ø–æ—Ä—è–¥–∫–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, –∞ –≤ –ø–æ—Ä—è–¥–∫–µ –∏—Ö –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞.
–û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
1. enqueue (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º)
2. dequeue (–∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å –Ω–∞–∏–≤—ã—Å—à–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º)
3. peek (–ø—Ä–æ—Å–º–æ—Ç—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ —Å –Ω–∞–∏–≤—ã—Å—à–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º, –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è)
4. isEmpty (–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ—Ç—É)
5. size (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
---
0. üéØ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ—á–µ—Ä–µ–¥–∏ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
–û–±—ã—á–Ω–æ –æ—á–µ—Ä–µ–¥—å —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è —Å –º–∞—Å—Å–∏–≤–æ–º (–º–µ–Ω–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ) –∏–ª–∏ –±–∏–Ω–∞—Ä–Ω–æ–π –∫—É—á–µ–π (–±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ).
–ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ –º–∞—Å—Å–∏–≤–µ (O(n) –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, O(1) –Ω–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ)
```js
class PriorityQueue {
  constructor() {
    this.queue = [];
  }

  enqueue(element, priority) {
    this.queue.push({ element, priority });
    this.queue.sort((a, b) => a.priority - b.priority); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É (O(n log n))
  }

  dequeue() {
    return this.queue.shift(); // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –Ω–∞–∏–≤—ã—Å—à–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º (O(1))
  }

  peek() {
    return this.queue[0]; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –Ω–∞–∏–≤—ã—Å—à–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è
  }

  isEmpty() {
    return this.queue.length === 0;
  }

  size() {
    return this.queue.length;
  }
}

const pq = new PriorityQueue();
pq.enqueue("–õ–µ–≥–∫–∞—è –∑–∞–¥–∞—á–∞", 3);
pq.enqueue("–°—Ä–æ—á–Ω–∞—è –∑–∞–¥–∞—á–∞", 1);
pq.enqueue("–°—Ä–µ–¥–Ω—è—è –∑–∞–¥–∞—á–∞", 2);
console.log(pq.dequeue()); // { element: '–°—Ä–æ—á–Ω–∞—è –∑–∞–¥–∞—á–∞', priority: 1 }
```
---------------------------------------------------------------------------------------------
