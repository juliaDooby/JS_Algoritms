---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: Deep Equal:
---
üéØ –†–µ—à–µ–Ω–∏–µ 1: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–æ–≤ –∏ –æ–±—ä–µ–∫—Ç–æ–≤
–≠—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–∞–∫ –º–∞—Å—Å–∏–≤–æ–≤, —Ç–∞–∫ –∏ –æ–±—ä–µ–∫—Ç–æ–≤.
–ö–æ–¥:
```javascript
function deepEqual(obj1, obj2) {
  // –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç—ã –∏–¥–µ–Ω—Ç–∏—á–Ω—ã
  if (obj1 === obj2) return true;

  // –ï—Å–ª–∏ —ç—Ç–æ –º–∞—Å—Å–∏–≤—ã
  if (Array.isArray(obj1) && Array.isArray(obj2)) {
    if (obj1.length !== obj2.length) return false;
    return obj1.every((value, index) => deepEqual(value, obj2[index]));
  }

  // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ–±—ä–µ–∫—Ç—ã –∏–ª–∏ null
  if (obj1 == null || typeof obj1 !== 'object' || obj2 == null || typeof obj2 !== 'object') {
    return false;
  }

  // –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ä–µ–∫—Ç—ã
  const keys1 = Object.keys(obj1);
  const keys2 = Object.keys(obj2);

  if (keys1.length !== keys2.length) return false;

  return keys1.every(key => deepEqual(obj1[key], obj2[key]));
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
const arr1 = [1, { a: 1 }, [2, 3]];
const arr2 = [1, { a: 1 }, [2, 3]];
const arr3 = [1, { a: 2 }, [2, 3]];

console.log(deepEqual(arr1, arr2)); // true
console.log(deepEqual(arr1, arr3)); // false
```
--------------------------------------------------------------------------------------------- 
