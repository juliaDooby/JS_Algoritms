---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –ê–Ω–∞–≥—Ä–∞–º–º—ã:
---
2. üéØ –†–µ—à–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `Map`
–î–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `Map` –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ —Å–∏–º–≤–æ–ª–æ–≤.
üéØ –†–µ—à–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `Map`:
```javascript
function areAnagrams(str1, str2) {
  if (str1.length !== str2.length) return false;

  const countMap = new Map();

  // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∏–º–≤–æ–ª—ã –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ
  for (let char of str1) {
    countMap.set(char, (countMap.get(char) || 0) + 1);
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∏–µ –∂–µ —Å–∏–º–≤–æ–ª—ã –≤–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ
  for (let char of str2) {
    if (!countMap.has(char)) {
      return false;
    }
    countMap.set(char, countMap.get(char) - 1);
  }

  // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ countMap —Ä–∞–≤–Ω—ã 0
  for (let count of countMap.values()) {
    if (count !== 0) {
      return false;
    }
  }

  return true;
}

console.log(areAnagrams("listen", "silent")); // true
console.log(areAnagrams("hello", "world"));   // false
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º `Map` –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö.
- –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ –º—ã —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–ª–∏ —É–º–µ–Ω—å—à–∞–µ–º –µ–≥–æ —Å—á–µ—Ç—á–∏–∫ –≤ `Map`.
- –í –∫–æ–Ω—Ü–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Å—á—ë—Ç—á–∏–∫–∏ —Ä–∞–≤–Ω—ã –Ω—É–ª—é, —á—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ —Å—Ç—Ä–æ–∫–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã.
---------------------------------------------------------------------------------------------  
