--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ü–æ–¥—Å—á—ë—Ç –∏–Ω–≤–µ—Ä—Å–∏–π:
---
1. ‚åõ –ó–∞–¥–∞—á–∞: –ü–æ–¥—Å—á—ë—Ç –∏–Ω–≤–µ—Ä—Å–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Å–ª–∏—è–Ω–∏–µ–º
–£—Å–ª–æ–≤–∏–µ:
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –ø–æ–¥—Å—á—ë—Ç –∏–Ω–≤–µ—Ä—Å–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Å–ª–∏—è–Ω–∏–µ–º. –≠—Ç–æ —Ä–µ—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –ø—Ä—è–º–æ–π –ø–æ–¥—Å—á—ë—Ç —Å –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ —Ü–∏–∫–ª–∞–º–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function mergeCount(arr, tempArr, left, right) {
  if (left === right) return 0;
  const mid = Math.floor((left + right) / 2);
  let invCount = mergeCount(arr, tempArr, left, mid);
  invCount += mergeCount(arr, tempArr, mid + 1, right);
  invCount += merge(arr, tempArr, left, mid, right);
  return invCount;
}

function merge(arr, tempArr, left, mid, right) {
  let i = left; // Starting index for left subarray
  let j = mid + 1; // Starting index for right subarray
  let k = left; // Starting index to be sorted
  let invCount = 0;

  while (i <= mid && j <= right) {
    if (arr[i] <= arr[j]) {
      tempArr[k++] = arr[i++];
    } else {
      tempArr[k++] = arr[j++];
      invCount += (mid - i + 1); // All remaining elements in left subarray are greater
    }
  }

  while (i <= mid) {
    tempArr[k++] = arr[i++];
  }
  while (j <= right) {
    tempArr[k++] = arr[j++];
  }

  for (let i = left; i <= right; i++) {
    arr[i] = tempArr[i];
  }

  return invCount;
}

function countInversions(arr) {
  let tempArr = new Array(arr.length);
  return mergeCount(arr, tempArr, 0, arr.length - 1);
}

console.log(countInversions([1, 3, 2, 3, 1]));  // 4
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
–≠—Ç–æ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Å–ª–∏—è–Ω–∏–µ–º. –ü—Ä–∏ —Å–ª–∏—è–Ω–∏–∏ –¥–≤—É—Ö –ø–æ–¥–º–∞—Å—Å–∏–≤–æ–≤ –º—ã —Å—á–∏—Ç–∞–µ–º, —Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏ –º–∞—Å—Å–∏–≤–∞ –º–µ–Ω—å—à–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ –ª–µ–≤–æ–π, —á—Ç–æ –¥–∞—ë—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω–≤–µ—Ä—Å–∏–π.
--------------------------------------------------------------------------------------------- 
