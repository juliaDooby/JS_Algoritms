---------------------------------------------------------------------------------------------
‚ãô ‚ùç –î–µ–∫:
---
–î–µ–∫ (Deque) –≤ JavaScript:
–ß—Ç–æ —Ç–∞–∫–æ–µ –¥–µ–∫?
–î–µ–∫ (–¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è –æ—á–µ—Ä–µ–¥—å, deque ‚Äî double-ended queue) ‚Äî —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, –≤ –∫–æ—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç—ã –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –∏ —É–¥–∞–ª—è—Ç—å —Å –æ–±–æ–∏—Ö –∫–æ–Ω—Ü–æ–≤. –î–µ–∫ –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å—Ç–µ–∫–∞ (LIFO) –∏ –æ—á–µ—Ä–µ–¥–∏ (FIFO).
–û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–µ–∫–∞
- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ (`unshift()`) –∏ –≤ –∫–æ–Ω–µ—Ü (`push()`).
- –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –Ω–∞—á–∞–ª–∞ (`shift()`) –∏ –∏–∑ –∫–æ–Ω—Ü–∞ (`pop()`).
- –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–µ—Ä–≤–æ–≥–æ (`front()`) –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ (`back()`) —ç–ª–µ–º–µ–Ω—Ç–∞.
- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ—Ç—É (`isEmpty()`).
---
üéØ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–∫–∞
JavaScript –Ω–µ –∏–º–µ–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ `Deque`, –Ω–æ –º—ã –º–æ–∂–µ–º —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –µ–≥–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–∞—Å—Å–∏–≤–∞ –∏–ª–∏ –æ–±—ä–µ–∫—Ç–∞.
üéØ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ –º–∞—Å—Å–∏–≤–µ
```js
class Deque {
  constructor() {
    this.items = [];
  }

  pushBack(item) { this.items.push(item); }  // –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ–Ω–µ—Ü
  pushFront(item) { this.items.unshift(item); } // –î–æ–±–∞–≤–∏—Ç—å –≤ –Ω–∞—á–∞–ª–æ
  popBack() { return this.items.pop(); } // –£–¥–∞–ª–∏—Ç—å —Å –∫–æ–Ω—Ü–∞
  popFront() { return this.items.shift(); } // –£–¥–∞–ª–∏—Ç—å —Å –Ω–∞—á–∞–ª–∞
  front() { return this.items[0]; } // –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
  back() { return this.items[this.items.length - 1]; } // –ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç
  isEmpty() { return this.items.length === 0; } // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ—Ç—É
  size() { return this.items.length; } // –†–∞–∑–º–µ—Ä –¥–µ–∫–∞
  display() { console.log(this.items); } // –í—ã–≤–µ—Å—Ç–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
}

const deque = new Deque();
deque.pushFront(1);
deque.pushBack(2);
deque.pushFront(3);
deque.display(); // [3, 1, 2]
```
------------------
0Ô∏è‚É£ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–∫–∞ —Å –ø–æ–º–æ—â—å—é –æ–±—ä–µ–∫—Ç–∞ (–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è)
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–µ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–±—ä–µ–∫—Ç–∞ (–±–µ–∑ `unshift()`, –∫–æ—Ç–æ—Ä—ã–π –º–µ–¥–ª–µ–Ω–Ω—ã–π).
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
class Deque {
  constructor() {
    this.items = {};
    this.frontIndex = 0;
    this.backIndex = 0;
  }

  pushFront(item) {
    this.frontIndex--;
    this.items[this.frontIndex] = item;
  }

  pushBack(item) {
    this.items[this.backIndex] = item;
    this.backIndex++;
  }

  popFront() {
    if (this.isEmpty()) return undefined;
    const item = this.items[this.frontIndex];
    delete this.items[this.frontIndex];
    this.frontIndex++;
    return item;
  }

  popBack() {
    if (this.isEmpty()) return undefined;
    this.backIndex--;
    const item = this.items[this.backIndex];
    delete this.items[this.backIndex];
    return item;
  }

  isEmpty() { return this.frontIndex === this.backIndex; }
  size() { return this.backIndex - this.frontIndex; }
  front() { return this.items[this.frontIndex]; }
  back() { return this.items[this.backIndex - 1]; }
}

const deque = new Deque();
deque.pushFront(10);
deque.pushBack(20);
console.log(deque.popFront()); // 10
console.log(deque.popBack()); // 20
```
---------------------------------------------------------------------------------------------
