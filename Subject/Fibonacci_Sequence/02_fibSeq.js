---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –§–∏–±–æ–Ω–∞—á—á–∏:
---
2. –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–µ–∫—É—Ä—Å–∏—è —Å –º–µ–º–æ–∏–∑–∞—Ü–∏–µ–π
–ú–µ–º–æ–∏–∑–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —É–∂–µ –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö —Ä–∞—Å—á—ë—Ç–æ–≤.
üéØ –†–µ—à–µ–Ω–∏–µ:
–ö–æ–¥:
```javascript
function fibonacciMemoized(n, memo = {}) {
  if (n in memo) return memo[n];
  if (n <= 1) return n;

  memo[n] = fibonacciMemoized(n - 1, memo) + fibonacciMemoized(n - 2, memo);
  return memo[n];
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
function generateFibonacciMemoized(n) {
  const sequence = [];
  for (let i = 0; i < n; i++) {
    sequence.push(fibonacciMemoized(i));
  }
  return sequence;
}

console.log(generateFibonacciMemoized(10)); // [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç `memo` –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–∂–µ –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.
- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ `memo`. –ï—Å–ª–∏ –¥–∞, —Ç–æ –æ–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è, –∏–Ω–∞—á–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ.
–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
- –°–ª–æ–∂–Ω–æ—Å—Ç—å —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –¥–æ O(n).
---------------------------------------------------------------------------------------------  
