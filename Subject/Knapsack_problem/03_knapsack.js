---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ:
---
3Ô∏è‚É£ –ó–∞–¥–∞—á–∞ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º —á–∏—Å–ª–æ–º –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
‚åõ–ó–∞–¥–∞—á–∞: –ö–∞–∂–¥—ã–π –ø—Ä–µ–¥–º–µ—Ç –º–æ–∂–Ω–æ –ø–æ–ª–æ–∂–∏—Ç—å –≤ —Ä—é–∫–∑–∞–∫ –Ω–µ –±–æ–ª–µ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ —Ä–∞–∑. –ù–∞–ø–∏—à–∏—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –∑–∞–¥–∞—á–∏ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function boundedKnapsack(items, capacity) {
  const dp = Array(capacity + 1).fill(0);

  items.forEach(item => {
    for (let i = 0; i < item.quantity; i++) {
      for (let w = capacity; w >= item.weight; w--) {
        dp[w] = Math.max(dp[w], dp[w - item.weight] + item.value);
      }
    }
  });

  return dp[capacity];
}

const items = [
  { value: 60, weight: 10, quantity: 2 },
  { value: 100, weight: 20, quantity: 1 },
  { value: 120, weight: 30, quantity: 3 }
];

console.log(boundedKnapsack(items, 50)); // 240
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –º—ã –ø–æ–æ—á–µ—Ä–µ–¥–Ω–æ —É—á–∏—Ç—ã–≤–∞–µ–º –µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–º —É—á–∏—Ç—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.
---------------------------------------------------------------------------------------------
