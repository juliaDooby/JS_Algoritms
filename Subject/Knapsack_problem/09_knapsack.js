---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ:
---
9. –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –ø–æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
‚åõ–ó–∞–¥–∞—á–∞: –†–µ—à–∏—Ç–µ –∑–∞–¥–∞—á—É –æ —Ä—é–∫–∑–∞–∫–µ, –≥–¥–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å —Ä—é–∫–∑–∞–∫–∞.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function knapsackWithConstraints(items, capacity, costLimit) {
  const dp = Array(capacity + 1).fill(0);

  items.forEach(item => {
    if (item.value <= costLimit) {
      for (let w = capacity; w >= item.weight; w--) {
        dp[w] = Math.max(dp[w], dp[w - item.weight] + item.value);
      }
    }
  });

  return dp[capacity];
}

const items = [
  { value: 60, weight: 10 },
  { value: 100, weight: 20 },
  { value: 120, weight: 30 }
];

console.log(knapsackWithConstraints(items, 50, 100)); // 220
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –¥–æ–±–∞–≤–∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω—ã.
---------------------------------------------------------------------------------------------
