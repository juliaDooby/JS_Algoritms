---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ü—Ä–∏—Ä–æ–¥–∞ –≥—Ä–∞—Ñ–∞:
---
8. ‚åõ –ó–∞–¥–∞—á–∞: –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≥—Ä–∞—Ñ –ø–ª–∞–Ω–∞—Ä–Ω—ã–º
–ì—Ä–∞—Ñ –ø–ª–∞–Ω–∞—Ä–Ω—ã–π, –µ—Å–ª–∏ –µ–≥–æ –º–æ–∂–Ω–æ –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –ø–ª–æ—Å–∫–æ—Å—Ç–∏ –±–µ–∑ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è —Ä—ë–±–µ—Ä.
üéØ –†–µ—à–µ–Ω–∏–µ:
–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ—Ä–º—É–ª—É –≠–π–ª–µ—Ä–∞ –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –≥—Ä–∞—Ñ–∞:
\[
V - E + F = 2
\]
–≥–¥–µ `V` ‚Äî –≤–µ—Ä—à–∏–Ω—ã, `E` ‚Äî —Ä—ë–±—Ä–∞, `F` ‚Äî –≥—Ä–∞–Ω–∏. –î–ª—è –≥—Ä–∞—Ñ–æ–≤ –±–µ–∑ –≥—Ä–∞–Ω–µ–π –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–æ.
- –í –Ω–µ–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≥—Ä–∞—Ñ–µ –±–µ–∑ —Ü–∏–∫–ª–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å `E ‚â§ 3V - 6`.
- –í –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≥—Ä–∞—Ñ–µ `E ‚â§ 2V - 4`.
```javascript
const isPlanarGraph = (graph) => {
  const V = Object.keys(graph).length;
  let E = 0;

  for (let node in graph) {
    E += graph[node].length;
  }
  E /= 2; // –ö–∞–∂–¥–æ–µ —Ä–µ–±—Ä–æ –ø–æ—Å—á–∏—Ç–∞–Ω–æ –¥–≤–∞–∂–¥—ã

  return E <= 3 * V - 6;
};

const graph1 = { 0: [1, 2], 1: [0, 2], 2: [0, 1] }; // –ü–æ–ª–Ω—ã–π –≥—Ä–∞—Ñ K3 (–ø–ª–∞–Ω–∞—Ä–Ω—ã–π)
const graph2 = { 0: [1, 2, 3], 1: [0, 2, 3], 2: [0, 1, 3], 3: [0, 1, 2] }; // –ü–æ–ª–Ω—ã–π –≥—Ä–∞—Ñ K4 (–ø–ª–∞–Ω–∞—Ä–Ω—ã–π)
const graph3 = { 0: [1, 2, 3, 4], 1: [0, 2, 3, 4], 2: [0, 1, 3, 4], 3: [0, 1, 2, 4], 4: [0, 1, 2, 3] }; // –ü–æ–ª–Ω—ã–π –≥—Ä–∞—Ñ K5 (–Ω–µ –ø–ª–∞–Ω–∞—Ä–Ω—ã–π)

console.log(isPlanarGraph(graph1)); // true
console.log(isPlanarGraph(graph2)); // true
console.log(isPlanarGraph(graph3)); // false
```
---------------------------------------------------------------------------------------------
