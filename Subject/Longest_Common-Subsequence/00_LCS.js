---------------------------------------------------------------------------------------------
⋙ ❍ Задача LCS:
---
Задача: Longest Common Subsequence (LCS) — это классическая задача динамического программирования, которая заключается в нахождении наибольшей общей подпоследовательности двух строк. Подпоследовательность — это последовательность символов, которая может быть получена из другой строки путем удаления некоторых (или вообще всех) символов, не меняя порядка оставшихся символов.
Пример: для строк `"AGGTAB"` и `"GXTXAYB"`, наибольшая общая подпоследовательность — это `"GTAB"`.
0️⃣ Базовая задача LC
⌛ Задача: Найдите наибольшую общую подпоследовательность (LCS) двух строк.
🎯 Решение:
```js
function lcs(str1, str2) {
  const m = str1.length, n = str2.length;
  const dp = Array(m + 1).fill().map(() => Array(n + 1).fill(0));

  for (let i = 1; i <= m; i++) {
    for (let j = 1; j <= n; j++) {
      if (str1[i - 1] === str2[j - 1]) {
        dp[i][j] = dp[i - 1][j - 1] + 1;
      } else {
        dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
      }
    }
  }

  return dp[m][n];
}

console.log(lcs("AGGTAB", "GXTXAYB")); // 4
```Объяснение В этом решении мы используем таблицу динамического программирования (`dp`), чтобы хранить длину LCS для каждой подстроки. Каждый элемент `dp[i][j]` представляет длину LCS для первых `i` символов строки `str1` и первых `j` символов строки `str2`.
---------------------------------------------------------------------------------------------
