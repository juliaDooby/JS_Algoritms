---------------------------------------------------------------------------------------------
üìå [–ñ–∞–¥–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã]:
---
1. –ó–∞–¥–∞—á–∞: –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ (0/1)
‚åõ –ó–∞–¥–∞—á–∞: –ò–∑ –Ω–∞–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –≤–µ—Å–∞–º–∏ –∏ —Ü–µ–Ω–∞–º–∏ –≤—ã–±—Ä–∞—Ç—å —Ç–∞–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã, —á—Ç–æ–±—ã –∏—Ö —Å—É–º–º–∞—Ä–Ω—ã–π –≤–µ—Å –Ω–µ –ø—Ä–µ–≤—ã—à–∞–ª –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, –ø—Ä–∏ —ç—Ç–æ–º —Å—É–º–º–∞—Ä–Ω–∞—è —Ü–µ–Ω–∞ –±—ã–ª–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function knapsack(weights, values, capacity) {
    let n = weights.length;
    let dp = Array(capacity + 1).fill(0); // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω –¥–ª—è –∫–∞–∂–¥–æ–π –µ–º–∫–æ—Å—Ç–∏ —Ä—é–∫–∑–∞–∫–∞

    for (let i = 0; i < n; i++) {
        for (let w = capacity; w >= weights[i]; w--) {
            dp[w] = Math.max(dp[w], dp[w - weights[i]] + values[i]);
        }
    }

    return dp[capacity];
}

const weights = [2, 3, 4, 5];
const values = [3, 4, 5, 6];
const capacity = 5;
console.log(knapsack(weights, values, capacity)); // –í—ã–≤–æ–¥–∏—Ç 7 (–í—ã–±–∏—Ä–∞–µ–º 2-–π –∏ 3-–π –ø—Ä–µ–¥–º–µ—Ç—ã)
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, –Ω–æ –∂–∞–¥–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤ —á–∞—Å—Ç–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –∑–∞–¥–∞—á–∏, –∫–æ–≥–¥–∞ –º—ã –º–æ–∂–µ–º –≤—Å–µ–≥–¥–∞ –≤—ã–±—Ä–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É.
--------------------------------------------------------------------------------------------- 
