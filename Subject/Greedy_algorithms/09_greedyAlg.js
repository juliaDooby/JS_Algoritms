---------------------------------------------------------------------------------------------
üìå [–ñ–∞–¥–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã]:
---
9. –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ä–∞–∑–Ω–∏—Ü—É –≤ –Ω–∞–±–æ—Ä–µ
‚åõ –ó–∞–¥–∞—á–∞: –î–∞–Ω–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª, –Ω—É–∂–Ω–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –µ–≥–æ –Ω–∞ –¥–≤–µ –≥—Ä—É–ø–ø—ã, —á—Ç–æ–±—ã —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É —Å—É–º–º–∞–º–∏ —ç—Ç–∏—Ö –≥—Ä—É–ø–ø –±—ã–ª–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function minDifferencePartition(arr) {
    const totalSum = arr.reduce((a, b) => a + b, 0);
    let closestSum = 0;

    function subsetSum(index, currentSum) {
        if (index === arr.length) {
            closestSum = Math.max(closestSum, currentSum);
            return;
        }

        subsetSum(index + 1, currentSum + arr[index]);
        subsetSum(index + 1, currentSum);
    }

    subsetSum(0, 0);
    return Math.abs(totalSum - 2 * closestSum);
}

const arr = [1, 2, 3, 9];
console.log(minDifferencePartition(arr)); // –í—ã–≤–æ–¥–∏—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ä–∞–∑–Ω–∏—Ü—É 3
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –Ω–∞ –¥–≤–µ –≥—Ä—É–ø–ø—ã, —á—Ç–æ–±—ã —Ä–∞–∑–Ω–∏—Ü–∞ –≤ –∏—Ö —Å—É–º–º–∞—Ö –±—ã–ª–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π, –∏—Å–ø–æ–ª—å–∑—É—è –∂–∞–¥–Ω—ã–π –ø–æ–¥—Ö–æ–¥.
--------------------------------------------------------------------------------------------- 
