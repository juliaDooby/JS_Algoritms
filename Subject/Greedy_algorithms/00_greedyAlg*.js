--------------------------------------------------------------------------------------------- 
üìå [–ñ–∞–¥–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã]:
---
–ñ–∞–¥–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã ‚Äî —ç—Ç–æ –∞–ª–≥–æ—Ä–∏—Ç–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –ª–æ–∫–∞–ª—å–Ω–æ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º, —á—Ç–æ —ç—Ç–æ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –≥–ª–æ–±–∞–ª—å–Ω–æ–º—É –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–º—É —Ä–µ—à–µ–Ω–∏—é.
0. –ó–∞–¥–∞—á–∞: –ó–∞–¥–∞—á–∞ –æ –º–æ–Ω–µ—Ç–∞—Ö (–ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –º–æ–Ω–µ—Ç)
‚åõ –ó–∞–¥–∞—á–∞: –î–∞–Ω–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç —Ä–∞–∑–Ω—ã—Ö –Ω–æ–º–∏–Ω–∞–ª–æ–≤ –∏ —Å—É–º–º–∞. –ù–∞–π—Ç–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —ç—Ç–æ–π —Å—É–º–º—ã.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function minCoins(coins, amount) {
    coins.sort((a, b) => b - a); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–Ω–µ—Ç—ã –ø–æ —É–±—ã–≤–∞–Ω–∏—é

    let count = 0;
    for (let coin of coins) {
        while (amount >= coin) {
            amount -= coin;
            count++;
        }
    }

    return amount === 0 ? count : -1; // –ï—Å–ª–∏ —Å—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º -1
}

const coins = [1, 5, 10, 25];
const amount = 30;
console.log(minCoins(coins, amount)); // –í—ã–≤–æ–¥–∏—Ç 2 (25 + 5)
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã —Å–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–Ω–µ—Ç—ã –ø–æ —É–±—ã–≤–∞–Ω–∏—é –∏ –Ω–∞—á–∏–Ω–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ–Ω–µ—Ç—ã —Å–∞–º–æ–≥–æ –±–æ–ª—å—à–æ–≥–æ –Ω–æ–º–∏–Ω–∞–ª–∞. –ï—Å–ª–∏ —Å—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º -1.
--------------------------------------------------------------------------------------------- 
---------------------------------------------------------------------------------------------
üìå [–ñ–∞–¥–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã]:
---
1. –ó–∞–¥–∞—á–∞: –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ (0/1)
‚åõ –ó–∞–¥–∞—á–∞: –ò–∑ –Ω–∞–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –≤–µ—Å–∞–º–∏ –∏ —Ü–µ–Ω–∞–º–∏ –≤—ã–±—Ä–∞—Ç—å —Ç–∞–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã, —á—Ç–æ–±—ã –∏—Ö —Å—É–º–º–∞—Ä–Ω—ã–π –≤–µ—Å –Ω–µ –ø—Ä–µ–≤—ã—à–∞–ª –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, –ø—Ä–∏ —ç—Ç–æ–º —Å—É–º–º–∞—Ä–Ω–∞—è —Ü–µ–Ω–∞ –±—ã–ª–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function knapsack(weights, values, capacity) {
    let n = weights.length;
    let dp = Array(capacity + 1).fill(0); // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω –¥–ª—è –∫–∞–∂–¥–æ–π –µ–º–∫–æ—Å—Ç–∏ —Ä—é–∫–∑–∞–∫–∞

    for (let i = 0; i < n; i++) {
        for (let w = capacity; w >= weights[i]; w--) {
            dp[w] = Math.max(dp[w], dp[w - weights[i]] + values[i]);
        }
    }

    return dp[capacity];
}

const weights = [2, 3, 4, 5];
const values = [3, 4, 5, 6];
const capacity = 5;
console.log(knapsack(weights, values, capacity)); // –í—ã–≤–æ–¥–∏—Ç 7 (–í—ã–±–∏—Ä–∞–µ–º 2-–π –∏ 3-–π –ø—Ä–µ–¥–º–µ—Ç—ã)
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, –Ω–æ –∂–∞–¥–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤ —á–∞—Å—Ç–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –∑–∞–¥–∞—á–∏, –∫–æ–≥–¥–∞ –º—ã –º–æ–∂–µ–º –≤—Å–µ–≥–¥–∞ –≤—ã–±—Ä–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É.
--------------------------------------------------------------------------------------------- 
---------------------------------------------------------------------------------------------
üìå [–ñ–∞–¥–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã]:
---
2. –ó–∞–¥–∞—á–∞: –ó–∞–¥–∞—á–∞ –æ –Ω–∞–∏–±–æ–ª—å—à–µ–º —á–∏—Å–ª–µ (–ø–æ—Ä–∞–∑—Ä—è–¥–Ω–æ–µ —É–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–Ω–∏–µ)
‚åõ –ó–∞–¥–∞—á–∞: –î–∞–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∏—Å–µ–ª. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∏–∑ –Ω–∏—Ö –Ω–∞–∏–±–æ–ª—å—à–µ–µ –≤–æ–∑–º–æ–∂–Ω–æ–µ —á–∏—Å–ª–æ.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function largestNumber(nums) {
    nums.sort((a, b) => (b + '' + a) - (a + '' + b));
    return nums[0] === 0 ? '0' : nums.join('');
}

const nums = [3, 30, 34, 5, 9];
console.log(largestNumber(nums)); // –í—ã–≤–æ–¥–∏—Ç "9534330"
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã —Å–æ—Ä—Ç–∏—Ä—É–µ–º —á–∏—Å–ª–∞ —Ç–∞–∫, —á—Ç–æ–±—ã –∏–∑ –∏—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–∞–∏–±–æ–ª—å—à–µ–µ —á–∏—Å–ª–æ. –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —á–∏—Å–ª–∞ –≤ —Å—Ç—Ä–æ–∫–∏ –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∏—Ö –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏.
--------------------------------------------------------------------------------------------- 
---------------------------------------------------------------------------------------------
üìå [–ñ–∞–¥–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã]:
---
3. –ó–∞–¥–∞—á–∞: –ó–∞–¥–∞—á–∞ –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è—Ö
‚åõ –ó–∞–¥–∞—á–∞: –ï—Å—Ç—å N —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –∏ N –∑–∞–¥–∞–Ω–∏–π, –∫–∞–∂–¥—ã–π —Ä–∞–±–æ—Ç–Ω–∏–∫ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è —Å —Ä–∞–∑–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é. –ù—É–∂–Ω–æ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏—è —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º —Ç–∞–∫, —á—Ç–æ–±—ã –æ–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π –±—ã–ª–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function assignTasks(costs) {
    let n = costs.length;
    let dp = Array(n + 1).fill(0);

    for (let i = 1; i <= n; i++) {
        for (let j = i; j <= n; j++) {
            dp[j] = Math.max(dp[j], dp[j - 1] + costs[i - 1][j - 1]);
        }
    }

    return dp[n];
}

const costs = [
  [10, 2, 8],
  [5, 9, 7],
  [1, 6, 4]
];
console.log(assignTasks(costs)); // –í—ã–≤–æ–¥–∏—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –≠—Ç–æ –∑–∞–¥–∞—á–∞ –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è—Ö, –≥–¥–µ –º—ã –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏—è —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –≤—ã–≥–æ–¥–æ–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞.
--------------------------------------------------------------------------------------------- 
---------------------------------------------------------------------------------------------
üìå [–ñ–∞–¥–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã]:
---
4. –ó–∞–¥–∞—á–∞: –ñ–∞–¥–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—É—Ç–∏ –≤ –≥—Ä–∞—Ñ–µ (–ê–ª–≥–æ—Ä–∏—Ç–º –î–µ–π–∫—Å—Ç—Ä—ã)
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –∫—Ä–∞—Ç—á–∞–π—à–∏–π –ø—É—Ç—å –æ—Ç –∏—Å—Ö–æ–¥–Ω–æ–π –≤–µ—Ä—à–∏–Ω—ã –¥–æ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –≤–µ—Ä—à–∏–Ω –≤ –≥—Ä–∞—Ñ–µ —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ –≤–µ—Å–∞–º–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function dijkstra(graph, start) {
    const dist = {};
    const visited = new Set();
    const queue = [[start, 0]];

    graph.forEach((_, vertex) => {
        dist[vertex] = Infinity;
    });
    dist[start] = 0;

    while (queue.length > 0) {
        const [vertex, distance] = queue.pop();
        if (visited.has(vertex)) continue;
        visited.add(vertex);

        for (let [neighbor, weight] of graph[vertex]) {
            const newDist = distance + weight;
            if (newDist < dist[neighbor]) {
                dist[neighbor] = newDist;
                queue.push([neighbor, newDist]);
            }
        }
    }

    return dist;
}

const graph = {
    A: [['B', 1], ['C', 4]],
    B: [['A', 1], ['C', 2], ['D', 5]],
    C: [['A', 4], ['B', 2], ['D', 1]],
    D: [['B', 5], ['C', 1]],
};
console.log(dijkstra(graph, 'A')); // –í—ã–≤–æ–¥–∏—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –æ—Ç –≤–µ—Ä—à–∏–Ω—ã A
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –∂–∞–¥–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –î–µ–π–∫—Å—Ç—Ä—ã –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –∫—Ä–∞—Ç—á–∞–π—à–∏—Ö –ø—É—Ç–µ–π –≤ –≥—Ä–∞—Ñ–µ —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ –≤–µ—Å–∞–º–∏.
--------------------------------------------------------------------------------------------- 
---------------------------------------------------------------------------------------------
üìå [–ñ–∞–¥–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã]:
---
5. –ó–∞–¥–∞—á–∞: –ó–∞–¥–∞—á–∞ –æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º –æ—Å—Ç–æ–≤–Ω–æ–º –¥–µ—Ä–µ–≤–µ (–ê–ª–≥–æ—Ä–∏—Ç–º –ü—Ä–∏–º–∞)
‚åõ –ó–∞–¥–∞—á–∞: –î–ª—è —Å–≤—è–∑–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∞ —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ –≤–µ—Å–∞–º–∏ –Ω–∞–π—Ç–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –æ—Å—Ç–æ–≤–Ω–æ–µ –¥–µ—Ä–µ–≤–æ.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function prim(graph) {
    const mst = [];
    const visited = new Set();
    const edges = [[0, 0, 0]]; // [—Å—Ç–æ–∏–º–æ—Å—Ç—å, –≤–µ—Ä—à–∏–Ω–∞, —Å–æ—Å–µ–¥–Ω—è—è –≤–µ—Ä—à–∏–Ω–∞]

    while (edges.length > 0) {
        edges.sort((a, b) => a[0] - b[0]); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–µ–±—Ä–∞
        const [cost, from, to] = edges.shift();

        if (visited.has(to)) continue;
        visited.add(to);
        mst.push([from, to, cost]);

        for (let [neighbor, weight] of graph[to]) {
            if (!visited.has(neighbor)) {
                edges.push([weight, to, neighbor]);
            }
        }
    }

    return mst;
}

const graph = {
    0: [[1, 1], [2, 4]],
    1: [[0, 1], [2, 2], [3, 5]],
    2: [[0, 4], [1, 2], [3, 1]],
    3: [[1, 5], [2, 1]],
};
console.log(prim(graph)); // –í—ã–≤–æ–¥–∏—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –æ—Å—Ç–æ–≤–Ω–æ–µ –¥–µ—Ä–µ–≤–æ
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ê–ª–≥–æ—Ä–∏—Ç–º –ü—Ä–∏–º–∞ —Å—Ç—Ä–æ–∏—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –æ—Å—Ç–æ–≤–Ω–æ–µ –¥–µ—Ä–µ–≤–æ, –Ω–∞—á–∏–Ω–∞—è —Å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –≤–µ—Ä—à–∏–Ω—ã –∏ –¥–æ–±–∞–≤–ª—è—è –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–µ–±—Ä–∞, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–µ–¥–∏–Ω—è—é—Ç –Ω–æ–≤—É—é –≤–µ—Ä—à–∏–Ω—É —Å –¥–µ—Ä–µ–≤–æ–º.
--------------------------------------------------------------------------------------------- 
---------------------------------------------------------------------------------------------
üìå [–ñ–∞–¥–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã]:
---
6. –ó–∞–¥–∞—á–∞: –ó–∞–¥–∞—á–∞ –æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∑–∞–¥–∞—á–µ (–û–∂–∏–¥–∞–µ–º–æ–µ –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ)
‚åõ –ó–∞–¥–∞—á–∞: –£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞—á —Å —Ä–∞–∑–Ω—ã–º–∏ —É—Ä–æ–≤–Ω—è–º–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏. –ù–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω—É –∑–∞–¥–∞—á—É. –í–∞–º –Ω—É–∂–Ω–æ –º–∞–∫—Å–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –µ—Å–ª–∏ –≤—ã–±–∏—Ä–∞—Ç—å –∑–∞–¥–∞—á–∏ –≤ –ø–æ—Ä—è–¥–∫–µ –∏—Ö –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function maxTaskValue(tasks) {
    tasks.sort((a, b) => a.difficulty - b.difficulty); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
    let totalValue = 0;
    for (let task of tasks) {
        totalValue += task.value;
    }
    return totalValue;
}

const tasks = [
  {difficulty: 2, value: 10},
  {difficulty: 1, value: 5},
  {difficulty: 3, value: 20}
];
console.log(maxTaskValue(tasks)); // –í—ã–≤–æ–¥–∏—Ç 35 (—Å—É–º–º–∞ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π)
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –°–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –ø–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏ –∑–∞—Ç–µ–º —Å—É–º–º–∏—Ä—É–µ–º –∏—Ö —Å—Ç–æ–∏–º–æ—Å—Ç—å.
--------------------------------------------------------------------------------------------- 
---------------------------------------------------------------------------------------------
üìå [–ñ–∞–¥–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã]:
---
7. –ó–∞–¥–∞—á–∞: –ü–æ–∂–∞—Ä–Ω—ã–µ –º–∞—à–∏–Ω—ã
‚åõ –ó–∞–¥–∞—á–∞: –ï—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–∂–∞—Ä–æ–æ–ø–∞—Å–Ω—ã—Ö —É—á–∞—Å—Ç–∫–æ–≤ –≤ –≥–æ—Ä–æ–¥–µ. –î–ª—è –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω —Ä–∞–¥–∏—É—Å –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–∂–∞—Ä–Ω—ã—Ö –º–∞—à–∏–Ω. –ù—É–∂–Ω–æ –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—à–∏–Ω –¥–ª—è –ø–æ–∫—Ä—ã—Ç–∏—è –≤—Å–µ—Ö —É—á–∞—Å—Ç–∫–æ–≤.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function minFireTrucks(ranges) {
    ranges.sort((a, b) => a[0] - b[0]); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –Ω–∞—á–∞–ª—å–Ω–æ–π —Ç–æ—á–∫–µ

    let count = 0;
    let end = -Infinity;

    for (let range of ranges) {
        if (range[0] > end) {
            count++;
            end = range[1];
        }
    }

    return count;
}

const ranges = [[1, 5], [2, 6], [4, 8], [7, 9]];
console.log(minFireTrucks(ranges)); // –í—ã–≤–æ–¥–∏—Ç 3
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑—É–µ–º –∂–∞–¥–Ω—ã–π –ø–æ–¥—Ö–æ–¥, —á—Ç–æ–±—ã –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—à–∏–Ω, –ø–æ–∫—Ä—ã—Ç–∏—è —É—á–∞—Å—Ç–∫–æ–≤.
--------------------------------------------------------------------------------------------- 
---------------------------------------------------------------------------------------------
üìå [–ñ–∞–¥–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã]:
---
8. –ó–∞–¥–∞—á–∞: –ñ–∞–¥–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ —á–∞—Å—Ç–æ—Ç–µ
‚åõ –ó–∞–¥–∞—á–∞: –ù—É–∂–Ω–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –ø–æ —á–∞—Å—Ç–æ—Ç–µ –∏—Ö –ø–æ—è–≤–ª–µ–Ω–∏—è, –æ—Ç —Å–∞–º–æ–π —á–∞—Å—Ç–æ–π –∫ —Å–∞–º–æ–π —Ä–µ–¥–∫–æ–π.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function frequencySort(arr) {
    const freqMap = new Map();
    for (let num of arr) {
        freqMap.set(num, (freqMap.get(num) || 0) + 1);
    }

    return arr.sort((a, b) => freqMap.get(b) - freqMap.get(a));
}

const arr = [3, 3, 2, 2, 1, 1, 1];
console.log(frequencySort(arr)); // –í—ã–≤–æ–¥–∏—Ç [1, 1, 1, 3, 3, 2, 2]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã —Å–Ω–∞—á–∞–ª–∞ —Å—Ç—Ä–æ–∏–º –∫–∞—Ä—Ç—É —á–∞—Å—Ç–æ—Ç –∏ –ø–æ—Ç–æ–º —Å–æ—Ä—Ç–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –ø–æ —ç—Ç–∏–º —á–∞—Å—Ç–æ—Ç–∞–º.
--------------------------------------------------------------------------------------------- 
---------------------------------------------------------------------------------------------
üìå [–ñ–∞–¥–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã]:
---
9. –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ä–∞–∑–Ω–∏—Ü—É –≤ –Ω–∞–±–æ—Ä–µ
‚åõ –ó–∞–¥–∞—á–∞: –î–∞–Ω–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª, –Ω—É–∂–Ω–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –µ–≥–æ –Ω–∞ –¥–≤–µ –≥—Ä—É–ø–ø—ã, —á—Ç–æ–±—ã —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É —Å—É–º–º–∞–º–∏ —ç—Ç–∏—Ö –≥—Ä—É–ø–ø –±—ã–ª–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function minDifferencePartition(arr) {
    const totalSum = arr.reduce((a, b) => a + b, 0);
    let closestSum = 0;

    function subsetSum(index, currentSum) {
        if (index === arr.length) {
            closestSum = Math.max(closestSum, currentSum);
            return;
        }

        subsetSum(index + 1, currentSum + arr[index]);
        subsetSum(index + 1, currentSum);
    }

    subsetSum(0, 0);
    return Math.abs(totalSum - 2 * closestSum);
}

const arr = [1, 2, 3, 9];
console.log(minDifferencePartition(arr)); // –í—ã–≤–æ–¥–∏—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ä–∞–∑–Ω–∏—Ü—É 3
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –Ω–∞ –¥–≤–µ –≥—Ä—É–ø–ø—ã, —á—Ç–æ–±—ã —Ä–∞–∑–Ω–∏—Ü–∞ –≤ –∏—Ö —Å—É–º–º–∞—Ö –±—ã–ª–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π, –∏—Å–ø–æ–ª—å–∑—É—è –∂–∞–¥–Ω—ã–π –ø–æ–¥—Ö–æ–¥.
--------------------------------------------------------------------------------------------- 
