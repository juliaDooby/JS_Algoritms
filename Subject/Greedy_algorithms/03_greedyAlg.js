---------------------------------------------------------------------------------------------
üìå [–ñ–∞–¥–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã]:
---
3. –ó–∞–¥–∞—á–∞: –ó–∞–¥–∞—á–∞ –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è—Ö
‚åõ –ó–∞–¥–∞—á–∞: –ï—Å—Ç—å N —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –∏ N –∑–∞–¥–∞–Ω–∏–π, –∫–∞–∂–¥—ã–π —Ä–∞–±–æ—Ç–Ω–∏–∫ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è —Å —Ä–∞–∑–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é. –ù—É–∂–Ω–æ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏—è —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º —Ç–∞–∫, —á—Ç–æ–±—ã –æ–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π –±—ã–ª–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function assignTasks(costs) {
    let n = costs.length;
    let dp = Array(n + 1).fill(0);

    for (let i = 1; i <= n; i++) {
        for (let j = i; j <= n; j++) {
            dp[j] = Math.max(dp[j], dp[j - 1] + costs[i - 1][j - 1]);
        }
    }

    return dp[n];
}

const costs = [
  [10, 2, 8],
  [5, 9, 7],
  [1, 6, 4]
];
console.log(assignTasks(costs)); // –í—ã–≤–æ–¥–∏—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –≠—Ç–æ –∑–∞–¥–∞—á–∞ –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è—Ö, –≥–¥–µ –º—ã –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏—è —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –≤—ã–≥–æ–¥–æ–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞.
--------------------------------------------------------------------------------------------- 
