---------------------------------------------------------------------------------------------
üìå [–°–ª–æ–∂–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã]:
---------------------
‚ãô ‚ùç –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–±–æ—Ä –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–±–æ—Ä–∞:
---
2. –ó–∞–¥–∞—á–∞: –°—É–º–º–∞ —á–∏—Å–µ–ª, —Ä–∞–≤–Ω–∞—è –∑–∞–¥–∞–Ω–Ω–æ–º—É —á–∏—Å–ª—É
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –≤—Å–µ –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–∞ –º–∞—Å—Å–∏–≤–∞, —Å—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–≤–Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–º—É —á–∏—Å–ª—É.
üéØ –†–µ—à–µ–Ω–∏–µ —Å –ø–æ–ª–Ω—ã–º –ø–µ—Ä–µ–±–æ—Ä–æ–º:
```javascript
function findSubsets(arr, target) {
    const subsets = [];

    function helper(index, currentSubset, currentSum) {
        if (currentSum === target) {
            subsets.push([...currentSubset]);
            return;
        }

        for (let i = index; i < arr.length; i++) {
            currentSubset.push(arr[i]);
            helper(i + 1, currentSubset, currentSum + arr[i]);
            currentSubset.pop();
        }
    }

    helper(0, [], 0);
    return subsets;
}

console.log(findSubsets([1, 2, 3, 4, 5], 5)); // –í—ã–≤–æ–¥–∏—Ç [[2, 3], [5]]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–∞ —Å –ø–æ–º–æ—â—å—é —Ä–µ–∫—É—Ä—Å–∏–∏ –∏ –≤—ã–±–∏—Ä–∞–µ–º —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –¥–∞—é—Ç –∑–∞–¥–∞–Ω–Ω—É—é —Å—É–º–º—É.
---------------------------------------------------------------------------------------------
