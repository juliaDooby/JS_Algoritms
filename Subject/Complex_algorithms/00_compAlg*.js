---------------------------------------------------------------------------------------------
üìå [–°–ª–æ–∂–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã]:
---------------------
‚ãô ‚ùç –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–±–æ—Ä –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–±–æ—Ä–∞:
---
0. –ó–∞–¥–∞—á–∞: –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã –ø–æ–¥–º–∞—Å—Å–∏–≤–∞
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –ø–æ–¥–º–∞—Å—Å–∏–≤ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º–æ–π –≤ –º–∞—Å—Å–∏–≤–µ —á–∏—Å–µ–ª.
üéØ –†–µ—à–µ–Ω–∏–µ —Å –ø–æ–ª–Ω—ã–º –ø–µ—Ä–µ–±–æ—Ä–æ–º:
```javascript
function maxSubarraySum(arr) {
    let maxSum = -Infinity; // –ù–∞—á–∞–ª—å–Ω–∞—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞

    for (let i = 0; i < arr.length; i++) {
        for (let j = i; j < arr.length; j++) {
            let currentSum = 0;
            for (let k = i; k <= j; k++) {
                currentSum += arr[k];
            }
            maxSum = Math.max(maxSum, currentSum);
        }
    }
    return maxSum;
}

const arr = [-2, 1, -3, 4, -1, 2, 1, -5, 4];
console.log(maxSubarraySum(arr)); // –í—ã–≤–æ–¥–∏—Ç 6 (–ø–æ–¥–º–∞—Å—Å–∏–≤ [4, -1, 2, 1])
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ó–¥–µ—Å—å –º—ã –ø—Ä–æ—Ö–æ–¥–∏–º —á–µ—Ä–µ–∑ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ–¥–º–∞—Å—Å–∏–≤—ã —Å –ø–æ–º–æ—â—å—é —Ç—Ä–µ—Ö –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ü–∏–∫–ª–æ–≤ –∏ —Å—á–∏—Ç–∞–µ–º –∏—Ö —Å—É–º–º—ã.
–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:
–ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º –ö–∞–¥–∞–Ω–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã –ø–æ–¥–º–∞—Å—Å–∏–≤–∞ –∑–∞ O(n):
```javascript
function maxSubarraySumOptimized(arr) {
    let maxSum = arr[0];
    let currentSum = arr[0];

    for (let i = 1; i < arr.length; i++) {
        currentSum = Math.max(arr[i], currentSum + arr[i]);
        maxSum = Math.max(maxSum, currentSum);
    }
    return maxSum;
}

console.log(maxSubarraySumOptimized(arr)); // –í—ã–≤–æ–¥–∏—Ç 6
```
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–±–æ—Ä –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–±–æ—Ä–∞:
---
1. –ó–∞–¥–∞—á–∞: –ü–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç—Ä–æ–∫–∏
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –≤—Å–µ –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç—Ä–æ–∫–∏.
üéØ –†–µ—à–µ–Ω–∏–µ —Å –ø–æ–ª–Ω—ã–º –ø–µ—Ä–µ–±–æ—Ä–æ–º:
```javascript
function getPermutations(str) {
    if (str.length === 0) return [''];

    let result = [];
    for (let i = 0; i < str.length; i++) {
        let char = str[i];
        let remaining = str.slice(0, i) + str.slice(i + 1);
        let perms = getPermutations(remaining);
        for (let perm of perms) {
            result.push(char + perm);
        }
    }
    return result;
}

console.log(getPermutations('abc')); // –í—ã–≤–æ–¥–∏—Ç –≤—Å–µ –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∏ ['abc', 'acb', 'bac', 'bca', 'cab', 'cba']
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å—Ç—Ä–æ–∫–∏.
–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:
–ú–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –∞–ª–≥–æ—Ä–∏—Ç–º –∏–º–µ–µ—Ç —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª—å–Ω—É—é —Å–ª–æ–∂–Ω–æ—Å—Ç—å O(n!).
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–±–æ—Ä –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–±–æ—Ä–∞:
---
2. –ó–∞–¥–∞—á–∞: –°—É–º–º–∞ —á–∏—Å–µ–ª, —Ä–∞–≤–Ω–∞—è –∑–∞–¥–∞–Ω–Ω–æ–º—É —á–∏—Å–ª—É
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –≤—Å–µ –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–∞ –º–∞—Å—Å–∏–≤–∞, —Å—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–≤–Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–º—É —á–∏—Å–ª—É.
üéØ –†–µ—à–µ–Ω–∏–µ —Å –ø–æ–ª–Ω—ã–º –ø–µ—Ä–µ–±–æ—Ä–æ–º:
```javascript
function findSubsets(arr, target) {
    const subsets = [];

    function helper(index, currentSubset, currentSum) {
        if (currentSum === target) {
            subsets.push([...currentSubset]);
            return;
        }

        for (let i = index; i < arr.length; i++) {
            currentSubset.push(arr[i]);
            helper(i + 1, currentSubset, currentSum + arr[i]);
            currentSubset.pop();
        }
    }

    helper(0, [], 0);
    return subsets;
}

console.log(findSubsets([1, 2, 3, 4, 5], 5)); // –í—ã–≤–æ–¥–∏—Ç [[2, 3], [5]]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–∞ —Å –ø–æ–º–æ—â—å—é —Ä–µ–∫—É—Ä—Å–∏–∏ –∏ –≤—ã–±–∏—Ä–∞–µ–º —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –¥–∞—é—Ç –∑–∞–¥–∞–Ω–Ω—É—é —Å—É–º–º—É.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–±–æ—Ä –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–±–æ—Ä–∞:
---
3. –ó–∞–¥–∞—á–∞: –°—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –≤—Å–µ –ø–∞—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ, —Å—É–º–º–∞ –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–≤–Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–º—É —á–∏—Å–ª—É.
üéØ –†–µ—à–µ–Ω–∏–µ —Å –ø–æ–ª–Ω—ã–º –ø–µ—Ä–µ–±–æ—Ä–æ–º:
```javascript
function findPairs(arr, target) {
    let pairs = [];
    for (let i = 0; i < arr.length; i++) {
        for (let j = i + 1; j < arr.length; j++) {
            if (arr[i] + arr[j] === target) {
                pairs.push([arr[i], arr[j]]);
            }
        }
    }
    return pairs;
}

console.log(findPairs([1, 2, 3, 4, 5], 5)); // –í—ã–≤–æ–¥–∏—Ç [[1, 4], [2, 3]]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–∞—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Ö —Å—É–º–º—É.
–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:
–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö–µ—à-—Ç–∞–±–ª–∏—Ü—É –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞:
```javascript
function findPairsOptimized(arr, target) {
    let seen = new Set();
    let pairs = [];

    for (let num of arr) {
        let complement = target - num;
        if (seen.has(complement)) {
            pairs.push([complement, num]);
        }
        seen.add(num);
    }

    return pairs;
}

console.log(findPairsOptimized([1, 2, 3, 4, 5], 5)); // –í—ã–≤–æ–¥–∏—Ç [[1, 4], [2, 3]]
```
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–±–æ—Ä –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–±–æ—Ä–∞:
---
4. –ó–∞–¥–∞—á–∞: –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–∞.
üéØ –†–µ—à–µ–Ω–∏–µ —Å –ø–æ–ª–Ω—ã–º –ø–µ—Ä–µ–±–æ—Ä–æ–º:
```javascript
function getSubsets(arr) {
    const result = [];
    const n = arr.length;

    for (let i = 0; i < (1 << n); i++) {
        let subset = [];
        for (let j = 0; j < n; j++) {
            if (i & (1 << j)) {
                subset.push(arr[j]);
            }
        }
        result.push(subset);
    }

    return result;
}

console.log(getSubsets([1, 2, 3])); // –í—ã–≤–æ–¥–∏—Ç –≤—Å–µ –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–∞: [[], [1], [2], [3], [1, 2], [1, 3], [2, 3], [1, 2, 3]]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–≤–æ–∏—á–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–±–æ—Ä –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–±–æ—Ä–∞:
---
5. –ó–∞–¥–∞—á–∞: –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ä–∞–∑–Ω–∏—Ü—ã –≤ –º–∞—Å—Å–∏–≤–µ
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –ø–∞—Ä—É —á–∏—Å–µ–ª –≤ –º–∞—Å—Å–∏–≤–µ, —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –∫–æ—Ç–æ—Ä—ã–º–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞.
üéØ –†–µ—à–µ–Ω–∏–µ —Å –ø–æ–ª–Ω—ã–º –ø–µ—Ä–µ–±–æ—Ä–æ–º:
```javascript
function minDifference(arr) {
    let minDiff = Infinity;
    let pair = [];

    for (let i = 0; i < arr.length; i++) {
        for (let j = i + 1; j < arr.length; j++) {
            let diff = Math.abs(arr[i] - arr[j]);
            if (diff < minDiff) {
                minDiff = diff;
                pair = [arr[i], arr[j]];
            }
        }
    }

    return pair;
}

console.log(minDifference([3, 8, 15, 17, 1])); // –í—ã–≤–æ–¥–∏—Ç [15, 17]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–∞—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –Ω–∞—Ö–æ–¥–∏–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ä–∞–∑–Ω–∏—Ü—É.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–±–æ—Ä –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–±–æ—Ä–∞:
---
6. –ó–∞–¥–∞—á–∞: –°—É–º–º–∞ —á–∏—Å–µ–ª –≤ —Å–æ—á–µ—Ç–∞–Ω–∏—è—Ö
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –≤—Å–µ —Å–æ—á–µ—Ç–∞–Ω–∏—è —á–∏—Å–µ–ª –∏–∑ –º–∞—Å—Å–∏–≤–∞, —Å—É–º–º–∞ –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–≤–Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–º—É —á–∏—Å–ª—É.
üéØ –†–µ—à–µ–Ω–∏–µ —Å –ø–æ–ª–Ω—ã–º –ø–µ—Ä–µ–±–æ—Ä–æ–º:
```javascript
function combinationSum(arr, target) {
    const result = [];

    function findCombination(start, currentSum, currentCombo) {
        if (currentSum === target) {
            result.push([...currentCombo]);
            return;
        }
        for (let i = start; i < arr.length; i++) {
            if (currentSum + arr[i] > target) continue;
            currentCombo.push(arr[i]);
            findCombination(i, currentSum + arr[i], currentCombo);
            currentCombo.pop();
        }
    }

    findCombination(0, 0, []);
    return result;
}

console.log(combinationSum([2, 3, 6, 7], 7)); // –í—ã–≤–æ–¥–∏—Ç [[7], [2, 2, 3]]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –≠—Ç–æ —Ä–µ—à–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–æ—á–µ—Ç–∞–Ω–∏—è —á–∏—Å–µ–ª –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç —Ç–µ, —Å—É–º–º–∞ –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–≤–Ω–∞ —Ü–µ–ª–µ–≤–æ–º—É —á–∏—Å–ª—É.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–±–æ—Ä –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–±–æ—Ä–∞:
---
7. –ó–∞–¥–∞—á–∞: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π
‚åõ –ó–∞–¥–∞—á–∞: –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞.
üéØ –†–µ—à–µ–Ω–∏–µ —Å –ø–æ–ª–Ω—ã–º –ø–µ—Ä–µ–±–æ—Ä–æ–º:
```javascript
function getCombinations(arr) {
    const result = [];

    function generateComb(start, currentCombo) {
        result.push([...currentCombo]);

        for (let i = start; i < arr.length; i++) {
            currentCombo.push(arr[i]);
            generateComb(i + 1, currentCombo);
            currentCombo.pop();
        }
    }

    generateComb(0, []);
    return result;
}

console.log(getCombinations([1, 2, 3])); // –í—ã–≤–æ–¥–∏—Ç –≤—Å–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏: [[], [1], [1, 2], [1, 2, 3], [2], [2, 3], [3]]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ —Ä–µ–∫—É—Ä—Å–∏—é.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–±–æ—Ä –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–±–æ—Ä–∞:
---
8. –ó–∞–¥–∞—á–∞: –ü–æ–∏—Å–∫ –≤—Å–µ—Ö —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –≤ –º–∞—Å—Å–∏–≤–µ
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –≤—Å–µ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –≤ –º–∞—Å—Å–∏–≤–µ.
üéØ –†–µ—à–µ–Ω–∏–µ —Å –ø–æ–ª–Ω—ã–º –ø–µ—Ä–µ–±–æ—Ä–æ–º:
```javascript
function findEvenNumbers(arr) {
    let evens = [];
    for (let i = 0; i < arr.length; i++) {
        if (arr[i] % 2 === 0) {
            evens.push(arr[i]);
        }
    }
    return evens;
}

console.log(findEvenNumbers([1, 2, 3, 4, 5, 6])); // –í—ã–≤–æ–¥–∏—Ç [2, 4, 6]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ –∏ –¥–æ–±–∞–≤–ª—è–µ–º —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–±–æ—Ä –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–±–æ—Ä–∞:
---
9. –ó–∞–¥–∞—á–∞: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º
‚åõ –ó–∞–¥–∞—á–∞: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.
üéØ –†–µ—à–µ–Ω–∏–µ —Å –ø–æ–ª–Ω—ã–º –ø–µ—Ä–µ–±–æ—Ä–æ–º:
```javascript
function isPalindrome(str) {
    for (let i = 0; i < str.length / 2; i++) {
        if (str[i] !== str[str.length - 1 - i]) {
            return false;
        }
    }
    return true;
}

console.log(isPalindrome("racecar")); // –í—ã–≤–æ–¥–∏—Ç true
console.log(isPalindrome("hello")); // –í—ã–≤–æ–¥–∏—Ç false
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª—ã —Å—Ç—Ä–æ–∫–∏ –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∏—Ö —Å –∑–µ—Ä–∫–∞–ª—å–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏ —Å –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã.
---------------------------------------------------------------------------------------------
