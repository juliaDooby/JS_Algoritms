--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –†–∞–Ω–¥–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã:
---
15. –ó–∞–¥–∞—á–∞: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ç—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ä–∞–Ω–¥–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
‚åõ –ó–∞–¥–∞—á–∞: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ –ø—Ä–æ—Å—Ç—ã–º, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–∞–Ω–¥–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ—Å—Ç –ú–∏–ª–ª–µ—Ä–∞-–†–∞–±–∏–Ω–∞.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function isPrime(n, k = 5) {
    if (n <= 1) return false;
    if (n === 2) return true;

    if (n % 2 === 0) return false;

    let d = n - 1;
    let r = 0;
    while (d % 2 === 0) {
        d /= 2;
        r++;
    }

    for (let i = 0; i < k; i++) {
        let a = Math.floor(Math.random() * (n - 1)) + 1;
        let x = modPow(a, d, n);

        if (x === 1 || x === n - 1) continue;

        let isComposite = true;
        for (let j = 0; j < r - 1; j++) {
            x = modPow(x, 2, n);
            if (x === n - 1) {
                isComposite = false;
                break;
            }
        }
        if (isComposite) return false;
    }

    return true;
}

function modPow(base, exp, mod) {
    let result = 1;
    base = base % mod;
    while (exp > 0) {
        if (exp % 2 === 1) result = (result * base) % mod;
        base = (base * base) % mod;
        exp = Math.floor(exp / 2);
    }
    return result;
}

console.log(isPrime(11));  // –í—ã–≤–æ–¥–∏—Ç true
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ê–ª–≥–æ—Ä–∏—Ç–º –ú–∏–ª–ª–µ—Ä–∞-–†–∞–±–∏–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–µ —á–∏—Å–ª–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ –ø—Ä–æ—Å—Ç—ã–º. –û–Ω –≤—ã–ø–æ–ª–Ω—è–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞—É–Ω–¥–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏.
--------------------------------------------------------------------------------------------- 
