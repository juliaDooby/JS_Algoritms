---------------------------------------------------------------------------------------------
‚ãô ‚ùç –û–±—Ö–æ–¥—ã –≥—Ä–∞—Ñ–∞:
---
8. –û–±—Ö–æ–¥ –≥—Ä–∞—Ñ–∞ —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–∏ (DFS)
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±—Ö–æ–¥–∞ –≥—Ä–∞—Ñ–∞ –≤ –≥–ª—É–±–∏–Ω—É, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –≤—Ä–µ–º—è –≤—Ö–æ–¥–∞ –∏ –≤—ã—Ö–æ–¥–∞ –∏–∑ –∫–∞–∂–¥–æ–π –≤–µ—Ä—à–∏–Ω—ã.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function dfsWithTime(graph, start) {
    let visited = new Set();
    let result = [];
    let time = 0;

    function visit(node) {
        visited.add(node);
        time++;
        result.push(`Node ${node} entered at time ${time}`);

        for (let neighbor of graph[node] || []) {
            if (!visited.has(neighbor)) {
                visit(neighbor);
            }
        }

        time++;
        result.push(`Node ${node} exited at time ${time}`);
    }

    visit(start);
    return result;
}

const graph5 = {
    A: ["B", "C"],
    B: ["A"],
    C: ["A"]
};

console.log(dfsWithTime(graph5, "A"));
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤—Ä–µ–º—è –≤—Ö–æ–¥–∞ –∏ –≤—ã—Ö–æ–¥–∞ –∏–∑ –∫–∞–∂–¥–æ–π –≤–µ—Ä—à–∏–Ω—ã, —á—Ç–æ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤, —Ç—Ä–µ–±—É—é—â–∏—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–æ—Å—Ç–æ–≤ –∏ –∞—Ä–æ–∫).
- –°–ª–æ–∂–Ω–æ—Å—Ç—å: O(V + E).
---------------------------------------------------------------------------------------------
