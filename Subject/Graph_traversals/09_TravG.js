---------------------------------------------------------------------------------------------
‚ãô ‚ùç –û–±—Ö–æ–¥—ã –≥—Ä–∞—Ñ–∞:
---
9. –û–±—Ö–æ–¥ –≥—Ä–∞—Ñ–∞ —Å –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ–º –ø—É—Ç–∏ –¥–æ –∫–∞–∂–¥–æ–π –≤–µ—Ä—à–∏–Ω—ã (BFS)
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±—Ö–æ–¥–∞ –≥—Ä–∞—Ñ–∞ –≤ —à–∏—Ä–∏–Ω—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—É—Ç—å –¥–æ –∫–∞–∂–¥–æ–π –≤–µ—Ä—à–∏–Ω—ã.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function bfsWithPath(graph, start) {
    let visited = new Set();
    let queue = [start];
    let parent = { [start]: null };
    let result = [];

    while (queue.length) {
        let node = queue.shift();

        for (let neighbor of graph[node] || []) {
            if (!visited.has(neighbor)) {
                visited.add(neighbor);
                queue.push(neighbor);
                parent[neighbor] = node;
            }
        }
    }

    for (let node in parent) {
        let path = [];
        let current = node;
        while (current !== null) {
            path.unshift(current);
            current = parent[current];
        }
        result.push(path);
    }

    return result;
}

console.log(bfsWithPath(graph3, "A")); // [["A", "B", "D"], ["A", "C"]]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø—É—Ç—å –¥–æ –∫–∞–∂–¥–æ–π –≤–µ—Ä—à–∏–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É—è –æ–±—ä–µ–∫—Ç `parent`, –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—Ä–µ–¥–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –≤–µ—Ä—à–∏–Ω—ã.
- –°–ª–æ–∂–Ω–æ—Å—Ç—å: O(V + E).
---------------------------------------------------------------------------------------------
