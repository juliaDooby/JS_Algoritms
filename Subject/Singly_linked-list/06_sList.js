---------------------------------------------------------------------------------------------
‚ãô ‚ùç –û–¥–Ω–æ—Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫:
---
6Ô∏è‚É£ –†–µ–≤–µ—Ä—Å –æ–¥–Ω–æ—Å–≤—è–∑–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥ –¥–ª—è —Ä–µ–≤–µ—Ä—Å–∏—Ä–æ–≤–∞–Ω–∏—è (–ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è) –æ–¥–Ω–æ—Å–≤—è–∑–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
class SinglyLinkedList {
  constructor() {
    this.head = null;
  }

  add(value) {
    const newNode = new Node(value);
    if (this.head === null) {
      this.head = newNode;
    } else {
      let current = this.head;
      while (current.next !== null) {
        current = current.next;
      }
      current.next = newNode;
    }
  }

  reverse() {
    let prev = null;
    let current = this.head;
    while (current !== null) {
      let nextNode = current.next;
      current.next = prev;
      prev = current;
      current = nextNode;
    }
    this.head = prev;
  }

  print() {
    let current = this.head;
    let result = '';
    while (current !== null) {
      result += current.data + ' -> ';
      current = current.next;
    }
    console.log(result.slice(0, -4));
  }
}

const list = new SinglyLinkedList();
list.add(10);
list.add(20);
list.add(30);
list.print(); // 10 -> 20 -> 30
list.reverse();
list.print(); // 30 -> 20 -> 10
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú–µ—Ç–æ–¥ `reverse()` –º–µ–Ω—è–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫ –≤ —Å–ø–∏—Å–∫–µ, –ø—Ä–µ–≤—Ä–∞—â–∞—è –µ–≥–æ –≤ –æ–±—Ä–∞—Ç–Ω—ã–π.
---------------------------------------------------------------------------------------------
