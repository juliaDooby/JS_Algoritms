---------------------------------------------------------------------------------------------
‚ãô ‚ùç –û–¥–Ω–æ—Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫:
---
8Ô∏è‚É£ –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–≤—É—Ö —Å–ø–∏—Å–∫–æ–≤
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –¥–≤—É—Ö –æ–¥–Ω–æ—Å–≤—è–∑–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
class SinglyLinkedList {
  constructor() {
    this.head = null;
  }

  add(value) {
    const newNode = new Node(value);
    if (this.head === null) {
      this.head = newNode;
    } else {
      let current = this.head;
      while (current.next !== null) {
        current = current.next;
      }
      current.next = newNode;
    }
  }

  merge(otherList) {
    let current = this.head;
    while (current && current.next !== null) {
      current = current.next;
    }
    if (current !== null) {
      current.next = otherList.head;
    } else {
      this.head = otherList.head;
    }
  }

  print() {
    let current = this.head;
    let result = '';
    while (current !== null) {
      result += current.data + ' -> ';
      current = current.next;
    }
    console.log(result.slice(0, -4));
  }
}

const list1 = new SinglyLinkedList();
const list2 = new SinglyLinkedList();
list1.add(10);
list1.add(20);
list2.add(30);
list2.add(40);
list1.merge(list2);
list1.print(); // 10 -> 20 -> 30 -> 40
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú–µ—Ç–æ–¥ `merge()` –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –¥–≤–∞ —Å–ø–∏—Å–∫–∞, —Å–æ–µ–¥–∏–Ω—è—è –∫–æ–Ω–µ—Ü –ø–µ—Ä–≤–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Å –Ω–∞—á–∞–ª–æ–º –≤—Ç–æ—Ä–æ–≥–æ.
---------------------------------------------------------------------------------------------
