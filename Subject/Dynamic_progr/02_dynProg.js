--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ:
---
2. –ó–∞–¥–∞—á–∞: –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ (0/1)
‚åõ –ó–∞–¥–∞—á–∞: –î–∞–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å –≤–µ—Å–∞–º–∏ –∏ —Ü–µ–Ω–∞–º–∏, –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–∞–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã, —á—Ç–æ–±—ã –∏—Ö —Å—É–º–º–∞—Ä–Ω—ã–π –≤–µ—Å –Ω–µ –ø—Ä–µ–≤—ã—à–∞–ª –∑–∞–¥–∞–Ω–Ω–æ–π –µ–º–∫–æ—Å—Ç–∏ —Ä—é–∫–∑–∞–∫–∞, –ø—Ä–∏ —ç—Ç–æ–º —Å—É–º–º–∞ –∏—Ö —Ü–µ–Ω –±—ã–ª–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function knapsack(weights, values, capacity) {
    let dp = Array(capacity + 1).fill(0);

    for (let i = 0; i < weights.length; i++) {
        for (let w = capacity; w >= weights[i]; w--) {
            dp[w] = Math.max(dp[w], dp[w - weights[i]] + values[i]);
        }
    }

    return dp[capacity];
}

const weights = [2, 3, 4, 5];
const values = [3, 4, 5, 6];
const capacity = 5;
console.log(knapsack(weights, values, capacity)); // –í—ã–≤–æ–¥–∏—Ç 7
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã —Å–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–µ—Å–∞ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Å –∫–∞–∂–¥—ã–º –Ω–æ–≤—ã–º –ø—Ä–µ–¥–º–µ—Ç–æ–º.
--------------------------------------------------------------------------------------------- 
