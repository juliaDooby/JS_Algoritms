--------------------------------------------------------------------------------------------- 
⋙ ❍ Динамическое программирование:
---
3. Задача: Строки редактирования (Расстояние Левенштейна)
⌛ Задача: Даны две строки. Нужно найти минимальное количество операций (вставка, удаление, замена), чтобы преобразовать одну строку в другую.
🎯 Решение:
```javascript
function editDistance(str1, str2) {
    let dp = Array(str1.length + 1).fill(null).map(() => Array(str2.length + 1).fill(0));

    for (let i = 0; i <= str1.length; i++) {
        for (let j = 0; j <= str2.length; j++) {
            if (i === 0) dp[i][j] = j;
            else if (j === 0) dp[i][j] = i;
            else if (str1[i - 1] === str2[j - 1]) dp[i][j] = dp[i - 1][j - 1];
            else dp[i][j] = 1 + Math.min(dp[i - 1][j - 1], dp[i - 1][j], dp[i][j - 1]);
        }
    }

    return dp[str1.length][str2.length];
}

console.log(editDistance("kitten", "sitting")); // Выводит 3
```
Объяснение: Мы строим таблицу для хранения минимального расстояния для каждой пары символов двух строк.
--------------------------------------------------------------------------------------------- 
