---------------------------------------------------------------------------------------------
‚ãô ‚ùç –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ:
---
19. ‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–∏–±–æ–ª—å—à–∞—è –≤–æ–∑—Ä–∞—Å—Ç–∞—é—â–∞—è –ø–æ–¥–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
–î–∞–Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —á–∏—Å–µ–ª. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–π—Ç–∏ –¥–ª–∏–Ω—É –Ω–∞–∏–±–æ–ª—å—à–µ–π –≤–æ–∑—Ä–∞—Å—Ç–∞—é—â–µ–π –ø–æ–¥–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function longestIncreasingSubsequence(nums) {
  if (nums.length === 0) return 0;

  const dp = Array(nums.length).fill(1);

  for (let i = 1; i < nums.length; i++) {
    for (let j = 0; j < i; j++) {
      if (nums[i] > nums[j]) {
        dp[i] = Math.max(dp[i], dp[j] + 1);
      }
    }
  }

  return Math.max(...dp);
}

console.log(longestIncreasingSubsequence([10, 9, 2, 5, 3, 7, 101, 18]));  // 4
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏. –í –º–∞—Å—Å–∏–≤–µ `dp` —Ö—Ä–∞–Ω–∏—Ç—Å—è –¥–ª–∏–Ω–∞ –Ω–∞–∏–±–æ–ª—å—à–µ–π –≤–æ–∑—Ä–∞—Å—Ç–∞—é—â–µ–π –ø–æ–¥–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—â–µ–π—Å—è –Ω–∞ –∫–∞–∂–¥–æ–º —ç–ª–µ–º–µ–Ω—Ç–µ. –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —Ç–µ–∫—É—â–µ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –±–æ–ª—å—à–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ, —Ç–æ –¥–ª–∏–Ω–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞—é—â–µ–π –ø–æ–¥–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è.
---------------------------------------------------------------------------------------------
